{"ast":null,"code":"var _jsxFileName = \"/home/grej/extensions/lumapps-op-workshop/weather-widget/src/widget/WidgetGlobalSettings.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@lumx/react';\nimport { useDebounce, useExportProps } from 'lumapps-sdk-js';\nimport { IntlProvider, useIntl } from 'react-intl';\nimport defaultGlobalSettings from './defaultGlobalSettings';\nimport messagesEn from '../translations/en.json';\nimport messagesFr from '../translations/fr.json';\n/**\n * Render the widget Picsum settings form.\n *\n * @param {Object} props The settings component properties.\n */\n\nexport const WithIntlGlobalSettings = ({\n  properties = {},\n  exportProp\n}) => {\n  const intl = useIntl();\n  const [apiKey, setApiKey] = useState(properties.apiKey || defaultGlobalSettings.apiKey);\n  const debouncedApiKey = useDebounce(apiKey, 800);\n  const displayLanguage = 'en';\n  useExportProps(debouncedApiKey, 'apiKey', properties, exportProp);\n  const messages = {\n    en: messagesEn,\n    fr: messagesFr\n  };\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: displayLanguage,\n    messages: messages[displayLanguage],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"mt0 ml\",\n    label: intl.formatMessage({\n      id: 'global_settings.api_key'\n    }),\n    value: apiKey,\n    onChange: setApiKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })));\n};\nexport const WidgetGlobalSettings = ({\n  properties = {},\n  exportProp = undefined\n}) => {\n  const messages = {\n    en: messagesEn,\n    fr: messagesFr\n  };\n  const [lang, setLang] = useState('en');\n  const displayLanguage = 'en';\n  useEffect(() => {\n    const getContext = async () => {\n      const isLangInTrad = Object.keys(messages).includes(displayLanguage);\n      setLang(isLangInTrad ? displayLanguage : 'en');\n    };\n\n    getContext();\n  }, [displayLanguage, messages]);\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: lang,\n    messages: messages[lang],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WithIntlGlobalSettings, {\n    properties: properties,\n    exportProp: exportProp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/home/grej/extensions/lumapps-op-workshop/weather-widget/src/widget/WidgetGlobalSettings.tsx"],"names":["React","useState","useEffect","TextField","useDebounce","useExportProps","IntlProvider","useIntl","defaultGlobalSettings","messagesEn","messagesFr","WithIntlGlobalSettings","properties","exportProp","intl","apiKey","setApiKey","debouncedApiKey","displayLanguage","messages","en","fr","formatMessage","id","WidgetGlobalSettings","undefined","lang","setLang","getContext","isLangInTrad","Object","keys","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AAEA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,YAAtC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,UAAU,GAAG,EAAf;AAAmBC,EAAAA;AAAnB,CAAD,KAA0C;AAC5E,QAAMC,IAAI,GAAGP,OAAO,EAApB;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACW,UAAU,CAACG,MAAX,IAAqBP,qBAAqB,CAACO,MAA5C,CAApC;AAEA,QAAME,eAAe,GAAGb,WAAW,CAACW,MAAD,EAAS,GAAT,CAAnC;AACA,QAAMG,eAAe,GAAG,IAAxB;AAEAb,EAAAA,cAAc,CAACY,eAAD,EAAkB,QAAlB,EAA4BL,UAA5B,EAAwCC,UAAxC,CAAd;AAEA,QAAMM,QAAa,GAAG;AAClBC,IAAAA,EAAE,EAAEX,UADc;AAElBY,IAAAA,EAAE,EAAEX;AAFc,GAAtB;AAIA,sBACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEQ,eAAtB;AAAuC,IAAA,QAAQ,EAAEC,QAAQ,CAACD,eAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,KAAK,EAAEJ,IAAI,CAACQ,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAFX;AAGI,IAAA,KAAK,EAAER,MAHX;AAII,IAAA,QAAQ,EAAEC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAYH,CAzBM;AA2BP,OAAO,MAAMQ,oBAAkC,GAAG,CAAC;AAAEZ,EAAAA,UAAU,GAAG,EAAf;AAAmBC,EAAAA,UAAU,GAAGY;AAAhC,CAAD,KAAiD;AAC/F,QAAMN,QAAa,GAAG;AAClBC,IAAAA,EAAE,EAAEX,UADc;AAElBY,IAAAA,EAAE,EAAEX;AAFc,GAAtB;AAKA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAS,IAAT,CAAhC;AACA,QAAMiB,eAAe,GAAG,IAAxB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,UAAU,GAAG,YAAY;AAC3B,YAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYZ,QAAZ,EAAsBa,QAAtB,CAA+Bd,eAA/B,CAArB;AAEAS,MAAAA,OAAO,CAACE,YAAY,GAAGX,eAAH,GAAqB,IAAlC,CAAP;AACH,KAJD;;AAKAU,IAAAA,UAAU;AACb,GAPQ,EAON,CAACV,eAAD,EAAkBC,QAAlB,CAPM,CAAT;AASA,sBACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEO,IAAtB;AAA4B,IAAA,QAAQ,EAAEP,QAAQ,CAACO,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,sBAAD;AAAwB,IAAA,UAAU,EAAEd,UAApC;AAAgD,IAAA,UAAU,EAAEC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAvBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField } from '@lumx/react';\n\nimport { useDebounce, useExportProps } from 'lumapps-sdk-js';\n\nimport { IntlProvider, useIntl } from 'react-intl';\nimport defaultGlobalSettings from './defaultGlobalSettings';\n\nimport messagesEn from '../translations/en.json';\nimport messagesFr from '../translations/fr.json';\n\n/**\n * Render the widget Picsum settings form.\n *\n * @param {Object} props The settings component properties.\n */\nexport const WithIntlGlobalSettings = ({ properties = {}, exportProp }: any) => {\n    const intl = useIntl();\n    const [apiKey, setApiKey] = useState(properties.apiKey || defaultGlobalSettings.apiKey);\n\n    const debouncedApiKey = useDebounce(apiKey, 800);\n    const displayLanguage = 'en';\n\n    useExportProps(debouncedApiKey, 'apiKey', properties, exportProp);\n\n    const messages: any = {\n        en: messagesEn,\n        fr: messagesFr,\n    };\n    return (\n        <IntlProvider locale={displayLanguage} messages={messages[displayLanguage]}>\n            <div>\n                <TextField\n                    className=\"mt0 ml\"\n                    label={intl.formatMessage({ id: 'global_settings.api_key' })}\n                    value={apiKey}\n                    onChange={setApiKey}\n                />\n            </div>\n        </IntlProvider>\n    );\n};\n\nexport const WidgetGlobalSettings:React.FC<any> = ({ properties = {}, exportProp = undefined }) => {\n    const messages: any = {\n        en: messagesEn,\n        fr: messagesFr,\n    };\n\n    const [lang, setLang] = useState<string>('en');\n    const displayLanguage = 'en';\n\n    useEffect(() => {\n        const getContext = async () => {\n            const isLangInTrad = Object.keys(messages).includes(displayLanguage);\n\n            setLang(isLangInTrad ? displayLanguage : 'en');\n        };\n        getContext();\n    }, [displayLanguage, messages]);\n\n    return (\n        <IntlProvider locale={lang} messages={messages[lang]}>\n            <WithIntlGlobalSettings properties={properties} exportProp={exportProp} />\n        </IntlProvider>\n    );\n};"]},"metadata":{},"sourceType":"module"}