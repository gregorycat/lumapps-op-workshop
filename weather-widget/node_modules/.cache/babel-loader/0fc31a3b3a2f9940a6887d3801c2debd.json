{"ast":null,"code":"import { Theme, ColorPalette, Size } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport { h as mdiDragVertical } from './mdi.js';\nimport { I as Icon } from './Icon2.js';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'DragHandle';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * DragHandle component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar DragHandle = forwardRef(function (props, ref) {\n  var className = props.className,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"className\", \"theme\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      theme: theme\n    }))\n  }), React.createElement(Icon, {\n    icon: mdiDragVertical,\n    color: theme === Theme.dark ? ColorPalette.light : undefined,\n    size: Size.xs\n  }));\n});\nDragHandle.displayName = COMPONENT_NAME;\nDragHandle.className = CLASSNAME;\nexport { DragHandle as D };","map":{"version":3,"sources":["../../../src/components/drag-handle/DragHandle.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DragHandle","forwardRef","className","theme","forwardedProps","props","ref","classNames","handleBasicClasses","prefix","Theme","ColorPalette","Size","xs"],"mappings":";;;;;AAQA;;;;AAQA;;;;AAGA,IAAMA,cAAc,GAApB,YAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;;;;;IAOaC,UAAiD,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAChFC,SADgF,GACxCG,KADwC,CAAA,SAAA;AAAA,MACrEF,KADqE,GACxCE,KADwC,CAAA,KAAA;AAAA,MAC3DD,cAD2D,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAGxF,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBN,MAAAA,KAAK,EAALA;AAArB,KAAD,CAA9B;AAHzB,GAAA,CAAA,EAKI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAV,eAAA;AAA6B,IAAA,KAAK,EAAEA,KAAK,KAAKO,KAAK,CAAfP,IAAAA,GAAuBQ,YAAY,CAAnCR,KAAAA,GAApC,SAAA;AAA2F,IAAA,IAAI,EAAES,IAAI,CAACC;AAAtG,GAAA,CALJ,CADJ;AAHuE,CAAA,C;AAa3Eb,UAAU,CAAVA,WAAAA,GAAAA,cAAAA;AACAA,UAAU,CAAVA,SAAAA,GAAAA,SAAAA","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { mdiDragVertical } from '@lumx/icons';\nimport { ColorPalette, Icon, Size, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface DragHandleProps extends GenericProps {\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'DragHandle';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * DragHandle component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const DragHandle: Comp<DragHandleProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, theme, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme }))}\n        >\n            <Icon icon={mdiDragVertical} color={theme === Theme.dark ? ColorPalette.light : undefined} size={Size.xs} />\n        </div>\n    );\n});\nDragHandle.displayName = COMPONENT_NAME;\nDragHandle.className = CLASSNAME;\n"]},"metadata":{},"sourceType":"module"}