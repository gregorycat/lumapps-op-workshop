{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5'\n});\nexport const getWeather = async ({\n  location,\n  unit,\n  apiKey,\n  lang = 'en'\n}) => {\n  const {\n    data: cityData\n  } = await axiosInstance.get(`/weather?q=${encodeURI(location)}&appid=${apiKey}`);\n\n  if (cityData.code) {\n    return cityData.message;\n  }\n\n  const {\n    coord,\n    name,\n    sys\n  } = cityData;\n  const {\n    data\n  } = await axiosInstance.get(`/onecall?lat=${coord.lat}&lon=${coord.lon}&units=${unit.type}&exclude=minutely&lang=${lang}&appid=${apiKey}`);\n  return { ...data,\n    name,\n    country: sys.country\n  };\n};","map":{"version":3,"sources":["/home/grej/extensions/lumapps-op-workshop/weather-widget/src/api/index.ts"],"names":["axios","axiosInstance","create","baseURL","getWeather","location","unit","apiKey","lang","data","cityData","get","encodeURI","code","message","coord","name","sys","lat","lon","type","country"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;AAIA,OAAO,MAAMC,UAAU,GAAG,OAAO;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,IAAI,GAAG;AAAjC,CAAP,KAAwD;AAC9E,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAqB,MAAMT,aAAa,CAACU,GAAd,CAAmB,cAAaC,SAAS,CAACP,QAAD,CAAW,UAASE,MAAO,EAApE,CAAjC;;AAEA,MAAIG,QAAQ,CAACG,IAAb,EAAmB;AACf,WAAOH,QAAQ,CAACI,OAAhB;AACH;;AAED,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAAuBP,QAA7B;AAEA,QAAM;AAAED,IAAAA;AAAF,MAAW,MAAMR,aAAa,CAACU,GAAd,CAClB,gBAAeI,KAAK,CAACG,GAAI,QAAOH,KAAK,CAACI,GAAI,UAASb,IAAI,CAACc,IAAK,0BAAyBZ,IAAK,UAASD,MAAO,EADzF,CAAvB;AAIA,SAAO,EAAE,GAAGE,IAAL;AAAWO,IAAAA,IAAX;AAAiBK,IAAAA,OAAO,EAAEJ,GAAG,CAACI;AAA9B,GAAP;AACH,CAdM","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5',\n});\n\nexport const getWeather = async ({ location, unit, apiKey, lang = 'en' }: any) => {\n    const { data: cityData } = await axiosInstance.get(`/weather?q=${encodeURI(location)}&appid=${apiKey}`);\n\n    if (cityData.code) {\n        return cityData.message;\n    }\n\n    const { coord, name, sys } = cityData;\n\n    const { data } = await axiosInstance.get(\n        `/onecall?lat=${coord.lat}&lon=${coord.lon}&units=${unit.type}&exclude=minutely&lang=${lang}&appid=${apiKey}`,\n    );\n\n    return { ...data, name, country: sys.country };\n};\n"]},"metadata":{},"sourceType":"module"}