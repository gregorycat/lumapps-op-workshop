{"ast":null,"code":"/* eslint-disable import/no-extraneous-dependencies */\n\n/**\n *  Create-LumApps-Widget config file\n *  update the following to fit your needs\n */\n\n/**\n * The ids of your partner and extension\n */\nconst partnerId = '558b1bb2-6f67-4d3c-b9b7-9204fcbdd019';\nconst extensionId = '93598637149586173654076898294087259899';\nconst description = {\n  en: 'Weather widget based on Open Weather API',\n  fr: \"Widget météo utilisant les API d'Open Weather\"\n};\nconst name = {\n  en: 'Open Weather',\n  fr: 'Open Weather'\n};\nconst icon = {\n  en: 'https://nocodeapi.com/static/db4bcf69ede0f4a974b733bf81d1d701/497c6/ow.png',\n  fr: 'https://nocodeapi.com/static/db4bcf69ede0f4a974b733bf81d1d701/497c6/ow.png'\n};\nconst oauth = false;\n/**\n * Define the availability of your extension :\n * - open : available for everyone\n * - marketplace : the customer need to have access to the marketplace\n */\n\nconst availability = 'marketplace';\n/**\n * Define if your extension needs to connect to extenal service through an application declare on provider side.\n *\n * Uncomment the following block to declare application usage for your extension.\n * Do not forget to add the application attribute in the config object.\n */\n\n/* const application = {\n    providerType: '',\n}; */\n\n/**\n * The documentation's url of the extension.\n */\n\nconst links = {\n  documentation: 'https://openweathermap.org/guide'\n};\n/**\n * The components available for your extensions\n * 'content' : For the Widget content itself (required)\n * 'settings' : For your widget settings\n * 'globalSettings' : For global settings used by platform admin.\n */\n\nconst components = ['content', 'settings', 'global_settings']; // Whether the extension is public or not in the marketplace.\n\nconst isPublic = true;\n/**\n * The list of authorized customer ids.\n *\n * If your extension is not public only these customers will see and\n * will be able to install this extensions.\n */\n\nconst whitelist = []; // do not change the following unless you know what you are doing\n\nconst config = {\n  // application,\n  availability,\n  category: 'widget',\n  components,\n  description,\n  oauth,\n  extensionId,\n  icon,\n  isPublic,\n  links,\n  name,\n  partnerId,\n  public: isPublic,\n  whitelist\n};\nexport default config;","map":{"version":3,"sources":["/home/grej/extensions/lumapps-op-workshop/weather-widget/src/config.js"],"names":["partnerId","extensionId","description","en","fr","name","icon","oauth","availability","links","documentation","components","isPublic","whitelist","config","category","public"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,sCAAlB;AACA,MAAMC,WAAW,GAAG,wCAApB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,EAAE,EAAE,0CADY;AAEhBC,EAAAA,EAAE,EAAE;AAFY,CAApB;AAKA,MAAMC,IAAI,GAAG;AACTF,EAAAA,EAAE,EAAE,cADK;AAETC,EAAAA,EAAE,EAAE;AAFK,CAAb;AAKA,MAAME,IAAI,GAAG;AACTH,EAAAA,EAAE,EAAE,4EADK;AAETC,EAAAA,EAAE,EAAE;AAFK,CAAb;AAKA,MAAMG,KAAK,GAAG,KAAd;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,aAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,aAAa,EAAE;AADL,CAAd;AAIA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,iBAAxB,CAAnB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,IAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,EAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACX;AACAN,EAAAA,YAFW;AAGXO,EAAAA,QAAQ,EAAE,QAHC;AAIXJ,EAAAA,UAJW;AAKXT,EAAAA,WALW;AAMXK,EAAAA,KANW;AAOXN,EAAAA,WAPW;AAQXK,EAAAA,IARW;AASXM,EAAAA,QATW;AAUXH,EAAAA,KAVW;AAWXJ,EAAAA,IAXW;AAYXL,EAAAA,SAZW;AAaXgB,EAAAA,MAAM,EAAEJ,QAbG;AAcXC,EAAAA;AAdW,CAAf;AAiBA,eAAeC,MAAf","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/**\n *  Create-LumApps-Widget config file\n *  update the following to fit your needs\n */\n\n/**\n * The ids of your partner and extension\n */\nconst partnerId = '558b1bb2-6f67-4d3c-b9b7-9204fcbdd019';\nconst extensionId = '93598637149586173654076898294087259899';\n\nconst description = {\n    en: 'Weather widget based on Open Weather API',\n    fr: \"Widget météo utilisant les API d'Open Weather\",\n};\n\nconst name = {\n    en: 'Open Weather',\n    fr: 'Open Weather',\n};\n\nconst icon = {\n    en: 'https://nocodeapi.com/static/db4bcf69ede0f4a974b733bf81d1d701/497c6/ow.png',\n    fr: 'https://nocodeapi.com/static/db4bcf69ede0f4a974b733bf81d1d701/497c6/ow.png',\n};\n\nconst oauth = false;\n\n/**\n * Define the availability of your extension :\n * - open : available for everyone\n * - marketplace : the customer need to have access to the marketplace\n */\n\nconst availability = 'marketplace';\n\n/**\n * Define if your extension needs to connect to extenal service through an application declare on provider side.\n *\n * Uncomment the following block to declare application usage for your extension.\n * Do not forget to add the application attribute in the config object.\n */\n/* const application = {\n    providerType: '',\n}; */\n\n/**\n * The documentation's url of the extension.\n */\nconst links = {\n    documentation: 'https://openweathermap.org/guide',\n};\n\n/**\n * The components available for your extensions\n * 'content' : For the Widget content itself (required)\n * 'settings' : For your widget settings\n * 'globalSettings' : For global settings used by platform admin.\n */\nconst components = ['content', 'settings', 'global_settings'];\n\n// Whether the extension is public or not in the marketplace.\nconst isPublic = true;\n\n/**\n * The list of authorized customer ids.\n *\n * If your extension is not public only these customers will see and\n * will be able to install this extensions.\n */\nconst whitelist = [];\n\n// do not change the following unless you know what you are doing\nconst config = {\n    // application,\n    availability,\n    category: 'widget',\n    components,\n    description,\n    oauth,\n    extensionId,\n    icon,\n    isPublic,\n    links,\n    name,\n    partnerId,\n    public: isPublic,\n    whitelist,\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}