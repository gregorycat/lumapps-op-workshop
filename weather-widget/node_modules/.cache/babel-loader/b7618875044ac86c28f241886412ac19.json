{"ast":null,"code":"import { Orientation } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, _ as _defineProperty, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Grid';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  orientation: Orientation.horizontal,\n  wrap: 'nowrap'\n};\n/**\n * Grid component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Grid = forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      gutter = props.gutter,\n      hAlign = props.hAlign,\n      orientation = props.orientation,\n      vAlign = props.vAlign,\n      wrap = props.wrap,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"className\", \"gutter\", \"hAlign\", \"orientation\", \"vAlign\", \"wrap\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, \"\".concat(CLASSNAME, \"-container\"), _defineProperty({}, \"\".concat(CLASSNAME, \"--h-align-\").concat(hAlign), hAlign), _defineProperty({}, \"\".concat(CLASSNAME, \"--v-align-\").concat(vAlign), vAlign), handleBasicClasses({\n      prefix: CLASSNAME,\n      orientation: orientation,\n      wrap: wrap,\n      gutter: gutter\n    }))\n  }), children);\n});\nGrid.displayName = COMPONENT_NAME;\nGrid.className = CLASSNAME;\nGrid.defaultProps = DEFAULT_PROPS;\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME$1 = 'GridItem';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME$1 = getRootClassName(COMPONENT_NAME$1);\n/**\n * GridItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar GridItem = forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      width = props.width,\n      align = props.align,\n      order = props.order,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"className\", \"width\", \"align\", \"order\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME$1,\n      width: width,\n      order: order,\n      align: align\n    }))\n  }), children);\n});\nGridItem.displayName = COMPONENT_NAME$1;\nGridItem.className = CLASSNAME$1;\nexport { Grid as G, GridItem as a };","map":{"version":3,"sources":["../../../src/components/grid/Grid.tsx","../../../src/components/grid/GridItem.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","orientation","Orientation","wrap","Grid","forwardRef","children","className","gutter","hAlign","vAlign","forwardedProps","props","ref","classNames","handleBasicClasses","prefix","GridItem","width","align","order"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Alignment, Orientation, Size } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\ntype GridGutterSize = Extract<Size, 'regular' | 'big' | 'huge'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface GridProps extends GenericProps {\n    /** Orientation. */\n    orientation?: Orientation;\n    /** Whether the children are wrapped or not. */\n    wrap?: string;\n    /** Vertical alignment. */\n    vAlign?: Alignment;\n    /** Horizontal alignment. */\n    hAlign?: Alignment;\n    /** Gutter size. */\n    gutter?: GridGutterSize;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Grid';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<GridProps> = {\n    orientation: Orientation.horizontal,\n    wrap: 'nowrap',\n};\n\n/**\n * Grid component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Grid: Comp<GridProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { children, className, gutter, hAlign, orientation, vAlign, wrap, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                `${CLASSNAME}-container`,\n                { [`${CLASSNAME}--h-align-${hAlign}`]: hAlign },\n                { [`${CLASSNAME}--v-align-${vAlign}`]: vAlign },\n                handleBasicClasses({ prefix: CLASSNAME, orientation, wrap, gutter }),\n            )}\n        >\n            {children}\n        </div>\n    );\n});\nGrid.displayName = COMPONENT_NAME;\nGrid.className = CLASSNAME;\nGrid.defaultProps = DEFAULT_PROPS;\n","import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Alignment } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\ntype Columns = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12';\n\n/**\n * Defines the props of the component.\n */\nexport interface GridItemProps extends GenericProps {\n    /** Alignment. */\n    align?: Alignment;\n    /** Order. */\n    order?: Columns;\n    /** Width. */\n    width?: Columns;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'GridItem';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * GridItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const GridItem: Comp<GridItemProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { children, className, width, align, order, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, width, order, align }))}\n        >\n            {children}\n        </div>\n    );\n});\nGridItem.displayName = COMPONENT_NAME;\nGridItem.className = CLASSNAME;\n"]},"metadata":{},"sourceType":"module"}