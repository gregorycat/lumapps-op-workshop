{"ast":null,"code":"import { Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'InputLabel';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  theme: Theme.light\n};\n/**\n * InputLabel component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar InputLabel = forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      htmlFor = props.htmlFor,\n      isRequired = props.isRequired,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"className\", \"htmlFor\", \"isRequired\", \"theme\"]);\n\n  return React.createElement(\"label\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    htmlFor: htmlFor,\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      isRequired: isRequired,\n      theme: theme\n    }))\n  }), children);\n});\nInputLabel.displayName = COMPONENT_NAME;\nInputLabel.className = CLASSNAME;\nInputLabel.defaultProps = DEFAULT_PROPS;\nexport { InputLabel as I };","map":{"version":3,"sources":["../../../src/components/input-label/InputLabel.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","InputLabel","forwardRef","children","className","htmlFor","isRequired","forwardedProps","props","ref","classNames","handleBasicClasses","prefix"],"mappings":";;;AAKA;;;;AAcA;;;;AAGA,IAAMA,cAAc,GAApB,YAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;AAGA,IAAMC,aAAuC,GAAG;AAC5CC,EAAAA,KAAK,EAAEC,KAAK,CAACC;AAD+B,CAAhD;AAIA;;;;;;;;IAOaC,UAAmD,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAClFC,QADkF,GACXK,KADW,CAAA,QAAA;AAAA,MACxEJ,SADwE,GACXI,KADW,CAAA,SAAA;AAAA,MAC7DH,OAD6D,GACXG,KADW,CAAA,OAAA;AAAA,MACpDF,UADoD,GACXE,KADW,CAAA,UAAA;AAAA,MACxCV,KADwC,GACXU,KADW,CAAA,KAAA;AAAA,MAC9BD,cAD8B,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,YAAA,EAAA,OAAA,CAAA,CAAA;;AAG1F,SACI,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,OAAO,EAHX,OAAA;AAII,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBN,MAAAA,UAAU,EAA/B,UAAA;AAAiCR,MAAAA,KAAK,EAALA;AAAjC,KAAD,CAA9B;AAJzB,GAAA,CAAA,EADJ,QACI,CADJ;AAHyE,CAAA,C;AAc7EG,UAAU,CAAVA,WAAAA,GAAAA,cAAAA;AACAA,UAAU,CAAVA,SAAAA,GAAAA,SAAAA;AACAA,UAAU,CAAVA,YAAAA,GAAAA,aAAAA","sourcesContent":["import { Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport classNames from 'classnames';\nimport React, { forwardRef, ReactNode } from 'react';\n\n/**\n * Defines the props of the component.\n */\nexport interface InputLabelProps extends GenericProps {\n    /** Label content. */\n    children: string | ReactNode;\n    /** Native htmlFor property. */\n    htmlFor: string;\n    /** Whether the component is required or not. */\n    isRequired?: boolean;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'InputLabel';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<InputLabelProps> = {\n    theme: Theme.light,\n};\n\n/**\n * InputLabel component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const InputLabel: Comp<InputLabelProps, HTMLLabelElement> = forwardRef((props, ref) => {\n    const { children, className, htmlFor, isRequired, theme, ...forwardedProps } = props;\n\n    return (\n        <label\n            ref={ref}\n            {...forwardedProps}\n            htmlFor={htmlFor}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, isRequired, theme }))}\n        >\n            {children}\n        </label>\n    );\n});\nInputLabel.displayName = COMPONENT_NAME;\nInputLabel.className = CLASSNAME;\nInputLabel.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}