{"ast":null,"code":"import { ColorVariant, Size, Theme, ColorPalette } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport { I as Icon } from './Icon2.js';\nvar COMPONENT_NAME = 'Flag';\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\nvar DEFAULT_PROPS = {\n  theme: Theme.light\n};\n/**\n * Flag component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Flag = forwardRef(function (props, ref) {\n  var label = props.label,\n      icon = props.icon,\n      color = props.color,\n      className = props.className,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"label\", \"icon\", \"color\", \"className\", \"theme\"]);\n\n  var flagColor = color || (theme === Theme.light ? ColorPalette.dark : ColorPalette.light);\n  return React.createElement(\"div\", _extends({}, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      color: flagColor\n    })),\n    ref: ref\n  }), icon && React.createElement(Icon, {\n    icon: icon,\n    color: color,\n    colorVariant: ColorVariant.D2,\n    size: Size.xxs,\n    className: \"\".concat(CLASSNAME, \"__icon\")\n  }), React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__label\")\n  }, label));\n});\nFlag.displayName = COMPONENT_NAME;\nFlag.className = CLASSNAME;\nFlag.defaultProps = DEFAULT_PROPS;\nexport { Flag as F };","map":{"version":3,"sources":["../../../src/components/flag/Flag.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","Flag","forwardRef","label","icon","color","className","forwardedProps","props","flagColor","ColorPalette","classNames","handleBasicClasses","prefix","ref","ColorVariant","Size"],"mappings":";;;;AAiBA,IAAMA,cAAc,GAApB,MAAA;AACA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AACA,IAAMC,aAAiC,GAAG;AACtCC,EAAAA,KAAK,EAAEC,KAAK,CAACC;AADyB,CAA1C;AAIA;;;;;;;;IAOaC,IAAqC,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MACpEC,KADoE,GACRK,KADQ,CAAA,KAAA;AAAA,MAC7DJ,IAD6D,GACRI,KADQ,CAAA,IAAA;AAAA,MACvDH,KADuD,GACRG,KADQ,CAAA,KAAA;AAAA,MAChDF,SADgD,GACRE,KADQ,CAAA,SAAA;AAAA,MACrCV,KADqC,GACRU,KADQ,CAAA,KAAA;AAAA,MAC3BD,cAD2B,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAE5E,MAAME,SAAS,GAAGJ,KAAK,KAAKP,KAAK,KAAKC,KAAK,CAAfD,KAAAA,GAAwBY,YAAY,CAApCZ,IAAAA,GAA4CY,YAAY,CAApF,KAAuB,CAAvB;AAEA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA;AAEI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBR,MAAAA,KAAK,EAAEI;AAA5B,KAAD,CAA9B,CAFzB;AAGI,IAAA,GAAG,EAAEK;AAHT,GAAA,CAAA,EAKKV,IAAI,IACD,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACI,IAAA,IAAI,EADR,IAAA;AAEI,IAAA,KAAK,EAFT,KAAA;AAGI,IAAA,YAAY,EAAEW,YAAY,CAH9B,EAAA;AAII,IAAA,IAAI,EAAEC,IAAI,CAJd,GAAA;AAKI,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AALb,GAAA,CANR,EAcI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA;AAAf,GAAA,EAfR,KAeQ,CAdJ,CADJ;AAJ2D,CAAA,C;AAuB/Df,IAAI,CAAJA,WAAAA,GAAAA,cAAAA;AACAA,IAAI,CAAJA,SAAAA,GAAAA,SAAAA;AACAA,IAAI,CAAJA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\n\nimport { ColorPalette, ColorVariant, Icon, Size, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\nexport interface FlagProps extends GenericProps {\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Color of the component. */\n    color?: ColorPalette;\n    /** Icon to use before the label. */\n    icon?: string;\n    /** Text label of the flag. */\n    label: string;\n}\n\nconst COMPONENT_NAME = 'Flag';\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\nconst DEFAULT_PROPS: Partial<FlagProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Flag component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Flag: Comp<FlagProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { label, icon, color, className, theme, ...forwardedProps } = props;\n    const flagColor = color || (theme === Theme.light ? ColorPalette.dark : ColorPalette.light);\n\n    return (\n        <div\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, color: flagColor }))}\n            ref={ref}\n        >\n            {icon && (\n                <Icon\n                    icon={icon}\n                    color={color}\n                    colorVariant={ColorVariant.D2}\n                    size={Size.xxs}\n                    className={`${CLASSNAME}__icon`}\n                />\n            )}\n            <span className={`${CLASSNAME}__label`}>{label}</span>\n        </div>\n    );\n});\nFlag.displayName = COMPONENT_NAME;\nFlag.className = CLASSNAME;\nFlag.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}