{"ast":null,"code":"import { AspectRatio, Size, Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport { T as Thumbnail } from './Thumbnail2.js';\n/**\n * Avatar sizes.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Avatar';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  size: Size.m,\n  theme: Theme.light\n};\n/**\n * Avatar component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Avatar = forwardRef(function (props, ref) {\n  var actions = props.actions,\n      alt = props.alt,\n      badge = props.badge,\n      className = props.className,\n      image = props.image,\n      onClick = props.onClick,\n      onKeyPress = props.onKeyPress,\n      size = props.size,\n      theme = props.theme,\n      thumbnailProps = props.thumbnailProps,\n      forwardedProps = _objectWithoutProperties(props, [\"actions\", \"alt\", \"badge\", \"className\", \"image\", \"onClick\", \"onKeyPress\", \"size\", \"theme\", \"thumbnailProps\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      size: size,\n      theme: theme\n    }))\n  }), React.createElement(Thumbnail, _extends({\n    className: \"\".concat(CLASSNAME, \"__thumbnail\"),\n    onClick: onClick,\n    onKeyPress: onKeyPress\n  }, thumbnailProps, {\n    aspectRatio: AspectRatio.square,\n    size: size,\n    image: image,\n    alt: alt\n  })), actions && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__actions\")\n  }, actions), badge && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__badge\")\n  }, badge));\n});\nAvatar.displayName = COMPONENT_NAME;\nAvatar.className = CLASSNAME;\nAvatar.defaultProps = DEFAULT_PROPS;\nexport { Avatar as A };","map":{"version":3,"sources":["../../../src/components/avatar/Avatar.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","size","Size","theme","Theme","light","Avatar","forwardRef","actions","alt","badge","className","image","onClick","onKeyPress","thumbnailProps","forwardedProps","props","ref","classNames","handleBasicClasses","prefix","AspectRatio"],"mappings":";;;;AAQA;;;;AAgCA;;;;AAGA,IAAMA,cAAc,GAApB,QAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;AAGA,IAAMC,aAAmC,GAAG;AACxCC,EAAAA,IAAI,EAAEC,IAAI,CAD8B,CAAA;AAExCC,EAAAA,KAAK,EAAEC,KAAK,CAACC;AAF2B,CAA5C;AAKA;;;;;;;;IAOaC,MAAyC,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAE5EC,OAF4E,GAa5ES,KAb4E,CAAA,OAAA;AAAA,MAG5ER,GAH4E,GAa5EQ,KAb4E,CAAA,GAAA;AAAA,MAI5EP,KAJ4E,GAa5EO,KAb4E,CAAA,KAAA;AAAA,MAK5EN,SAL4E,GAa5EM,KAb4E,CAAA,SAAA;AAAA,MAM5EL,KAN4E,GAa5EK,KAb4E,CAAA,KAAA;AAAA,MAO5EJ,OAP4E,GAa5EI,KAb4E,CAAA,OAAA;AAAA,MAQ5EH,UAR4E,GAa5EG,KAb4E,CAAA,UAAA;AAAA,MAS5EhB,IAT4E,GAa5EgB,KAb4E,CAAA,IAAA;AAAA,MAU5Ed,KAV4E,GAa5Ec,KAb4E,CAAA,KAAA;AAAA,MAW5EF,cAX4E,GAa5EE,KAb4E,CAAA,cAAA;AAAA,MAYzED,cAZyE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,EAAA,gBAAA,CAAA,CAAA;;AAehF,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBpB,MAAAA,IAAI,EAAzB,IAAA;AAA2BE,MAAAA,KAAK,EAALA;AAA3B,KAAD,CAA9B;AAHzB,GAAA,CAAA,EAKI,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACI,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EADb,aACa,CADb;AAEI,IAAA,OAAO,EAFX,OAAA;AAGI,IAAA,UAAU,EAAEW;AAHhB,GAAA,EAAA,cAAA,EAAA;AAKI,IAAA,WAAW,EAAEQ,WAAW,CAL5B,MAAA;AAMI,IAAA,IAAI,EANR,IAAA;AAOI,IAAA,KAAK,EAPT,KAAA;AAQI,IAAA,GAAG,EAAEb;AART,GAAA,CAAA,CALJ,EAeKD,OAAO,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA;AAAd,GAAA,EAfhB,OAegB,CAfhB,EAgBKE,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA;AAAd,GAAA,EAjBlB,KAiBkB,CAhBd,CADJ;AAf+D,CAAA,C;AAoCnEJ,MAAM,CAANA,WAAAA,GAAAA,cAAAA;AACAA,MAAM,CAANA,SAAAA,GAAAA,SAAAA;AACAA,MAAM,CAANA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef, KeyboardEventHandler, MouseEventHandler, ReactElement, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport { AspectRatio, Size, Theme, Thumbnail, ThumbnailProps } from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Avatar sizes.\n */\nexport type AvatarSize = Extract<Size, 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface AvatarProps extends GenericProps {\n    /** Action toolbar content. */\n    actions?: ReactNode;\n    /** Image alternative text. */\n    alt: string;\n    /** Badge. */\n    badge?: ReactElement;\n    /** Image URL. */\n    image: string;\n    /** On click callback. */\n    onClick?: MouseEventHandler<HTMLDivElement>;\n    /** On key press callback. */\n    onKeyPress?: KeyboardEventHandler<HTMLDivElement>;\n    /** Size variant. */\n    size?: AvatarSize;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Props to pass to the thumbnail (minus those already set by the Avatar props). */\n    thumbnailProps?: Omit<\n        ThumbnailProps,\n        'image' | 'alt' | 'size' | 'theme' | 'align' | 'fillHeight' | 'variant' | 'aspectRatio'\n    >;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Avatar';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<AvatarProps> = {\n    size: Size.m,\n    theme: Theme.light,\n};\n\n/**\n * Avatar component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Avatar: Comp<AvatarProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        actions,\n        alt,\n        badge,\n        className,\n        image,\n        onClick,\n        onKeyPress,\n        size,\n        theme,\n        thumbnailProps,\n        ...forwardedProps\n    } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, size, theme }))}\n        >\n            <Thumbnail\n                className={`${CLASSNAME}__thumbnail`}\n                onClick={onClick}\n                onKeyPress={onKeyPress}\n                {...thumbnailProps}\n                aspectRatio={AspectRatio.square}\n                size={size}\n                image={image}\n                alt={alt}\n            />\n            {actions && <div className={`${CLASSNAME}__actions`}>{actions}</div>}\n            {badge && <div className={`${CLASSNAME}__badge`}>{badge}</div>}\n        </div>\n    );\n});\nAvatar.displayName = COMPONENT_NAME;\nAvatar.className = CLASSNAME;\nAvatar.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}