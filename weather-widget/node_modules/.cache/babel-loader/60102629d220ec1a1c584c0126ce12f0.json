{"ast":null,"code":"import { Alignment, Theme, Size } from './components.js';\nimport { a as _objectWithoutProperties, f as _slicedToArray, i as _toConsumableArray, b as _extends, d as classnames, h as handleBasicClasses, C as CSS_PREFIX } from './getRootClassName.js';\nimport React, { useReducer, useEffect, forwardRef, useCallback } from 'react';\nimport { m as mergeRefs } from './mergeRefs.js';\nimport { I as Icon } from './Icon2.js';\nimport { r as reducer, I as INIT_STATE, T as TabProviderContext, u as useRovingTabIndex, b as useTabProviderContext } from './useRovingTabIndex.js';\nvar DEFAULT_PROPS = {\n  isLazy: INIT_STATE.isLazy,\n  shouldActivateOnFocus: INIT_STATE.shouldActivateOnFocus\n};\n/**\n * This component provides a context in which tabs can be defined and linked to their tab panel.\n *\n * It does not produce any markup so you can wrap it around any React elements and then split the TabList and TabPanel\n * components in the react tree.\n *\n * @param  props React component props.\n * @return React element.\n */\n\nvar TabProvider = function TabProvider(props) {\n  var children = props.children,\n      onChange = props.onChange,\n      propState = _objectWithoutProperties(props, [\"children\", \"onChange\"]);\n\n  var _useReducer = useReducer(reducer, INIT_STATE),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // On prop state change => dispatch update.\n\n\n  useEffect(function () {\n    dispatch({\n      type: 'update',\n      payload: propState\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dispatch].concat(_toConsumableArray(Object.values(propState)))); // On active tab index state change => send update to the onChange.\n\n  useEffect(function () {\n    if (state === INIT_STATE || !onChange || propState.activeTabIndex === state.activeTabIndex) {\n      return;\n    }\n\n    onChange(state.activeTabIndex);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [onChange, state.activeTabIndex]);\n  return React.createElement(TabProviderContext.Provider, {\n    value: [state, dispatch]\n  }, children);\n};\n\nTabProvider.defaultProps = DEFAULT_PROPS;\nvar TabListLayout;\n/**\n * Defines the props of the component.\n */\n\n(function (TabListLayout) {\n  TabListLayout[\"clustered\"] = \"clustered\";\n  TabListLayout[\"fixed\"] = \"fixed\";\n})(TabListLayout || (TabListLayout = {}));\n/**\n * Component display name.\n */\n\n\nvar COMPONENT_NAME = 'TabList';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = \"\".concat(CSS_PREFIX, \"-tabs\");\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS$1 = {\n  layout: TabListLayout.fixed,\n  position: Alignment.left,\n  theme: Theme.light\n};\n/**\n * TabList component.\n *\n * Implements WAI-ARIA `tablist` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar TabList = forwardRef(function (props, ref) {\n  var ariaLabel = props['aria-label'],\n      children = props.children,\n      className = props.className,\n      layout = props.layout,\n      position = props.position,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"aria-label\", \"children\", \"className\", \"layout\", \"position\", \"theme\"]);\n\n  var tabListRef = React.useRef(null);\n  useRovingTabIndex({\n    parentRef: tabListRef,\n    elementSelector: '[role=\"tab\"]',\n    keepTabIndex: false,\n    extraDependencies: [children]\n  });\n  return React.createElement(\"div\", _extends({\n    ref: mergeRefs(ref, tabListRef)\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      layout: layout,\n      position: position,\n      theme: theme\n    }))\n  }), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__links\"),\n    role: \"tablist\",\n    \"aria-label\": ariaLabel\n  }, children));\n});\nTabList.displayName = COMPONENT_NAME;\nTabList.className = CLASSNAME;\nTabList.defaultProps = DEFAULT_PROPS$1;\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME$1 = 'Tab';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME$1 = \"\".concat(CSS_PREFIX, \"-tabs__link\");\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS$2 = {};\n/**\n * Tab component.\n *\n * Implements WAI-ARIA `tab` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Tab = forwardRef(function (props, ref) {\n  var className = props.className,\n      disabled = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      propIsActive = props.isActive,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? disabled : _props$isDisabled,\n      label = props.label,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? -1 : _props$tabIndex,\n      forwardedProps = _objectWithoutProperties(props, [\"className\", \"disabled\", \"icon\", \"id\", \"isActive\", \"isDisabled\", \"label\", \"onFocus\", \"onKeyPress\", \"tabIndex\"]);\n\n  var state = useTabProviderContext('tab', id);\n  var isActive = propIsActive || (state === null || state === void 0 ? void 0 : state.isActive);\n  var changeToCurrentTab = useCallback(function () {\n    if (isDisabled) {\n      return;\n    }\n\n    state === null || state === void 0 ? void 0 : state.changeToTab();\n  }, [isDisabled, state]);\n  var handleFocus = useCallback(function (event) {\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n\n    if (state === null || state === void 0 ? void 0 : state.shouldActivateOnFocus) {\n      changeToCurrentTab();\n    }\n  }, [changeToCurrentTab, onFocus, state === null || state === void 0 ? void 0 : state.shouldActivateOnFocus]);\n  var handleKeyPress = useCallback(function (event) {\n    onKeyPress === null || onKeyPress === void 0 ? void 0 : onKeyPress(event);\n\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    changeToCurrentTab();\n  }, [changeToCurrentTab, onKeyPress]);\n  return React.createElement(\"button\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    type: \"button\",\n    id: state === null || state === void 0 ? void 0 : state.tabId,\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME$1,\n      isActive: isActive,\n      isDisabled: isDisabled\n    })),\n    onClick: changeToCurrentTab,\n    onKeyPress: handleKeyPress,\n    onFocus: handleFocus,\n    role: \"tab\",\n    tabIndex: isActive ? 0 : tabIndex,\n    \"aria-disabled\": isDisabled,\n    \"aria-selected\": isActive,\n    \"aria-controls\": state === null || state === void 0 ? void 0 : state.tabPanelId\n  }), icon && React.createElement(Icon, {\n    icon: icon,\n    size: Size.xs\n  }), label && React.createElement(\"span\", null, label));\n});\nTab.displayName = COMPONENT_NAME$1;\nTab.className = CLASSNAME$1;\nTab.defaultProps = DEFAULT_PROPS$2;\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME$2 = 'TabPanel';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME$2 = \"\".concat(CSS_PREFIX, \"-tab-panel\");\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS$3 = {};\n/**\n * TabPanel component.\n *\n * Implements WAI-ARIA `tabpanel` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar TabPanel = forwardRef(function (props, ref) {\n  var children = props.children,\n      id = props.id,\n      className = props.className,\n      propIsActive = props.isActive,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"id\", \"className\", \"isActive\"]);\n\n  var state = useTabProviderContext('tabPanel', id);\n  var isActive = propIsActive || (state === null || state === void 0 ? void 0 : state.isActive);\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    id: state === null || state === void 0 ? void 0 : state.tabPanelId,\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME$2,\n      isActive: isActive\n    })),\n    role: \"tabpanel\",\n    tabIndex: 0,\n    \"aria-labelledby\": state === null || state === void 0 ? void 0 : state.tabId\n  }), (!(state === null || state === void 0 ? void 0 : state.isLazy) || isActive) && children);\n});\nTabPanel.displayName = COMPONENT_NAME$2;\nTabPanel.className = CLASSNAME$2;\nTabPanel.defaultProps = DEFAULT_PROPS$3;\nexport { TabProvider as T, TabListLayout as a, TabList as b, Tab as c, TabPanel as d };","map":{"version":3,"sources":["../../../src/components/tabs/TabProvider.tsx","../../../src/components/tabs/TabList.tsx","../../../src/components/tabs/Tab.tsx","../../../src/components/tabs/TabPanel.tsx"],"names":["DEFAULT_PROPS","isLazy","INIT_STATE","shouldActivateOnFocus","TabProvider","children","onChange","propState","props","state","dispatch","useReducer","useEffect","type","payload","Object","TabListLayout","COMPONENT_NAME","CLASSNAME","layout","position","Alignment","theme","Theme","light","TabList","forwardRef","ariaLabel","className","forwardedProps","tabListRef","React","useRovingTabIndex","parentRef","elementSelector","keepTabIndex","extraDependencies","mergeRefs","classNames","handleBasicClasses","prefix","Tab","disabled","icon","id","propIsActive","isDisabled","label","onFocus","onKeyPress","tabIndex","useTabProviderContext","isActive","changeToCurrentTab","useCallback","handleFocus","handleKeyPress","event","ref","tabPanelId","Size","xs","TabPanel","tabId"],"mappings":"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","sourcesContent":["import React, { ReactNode, useEffect, useReducer } from 'react';\nimport { INIT_STATE, TabProviderContext, reducer } from './state';\n\nexport interface TabProviderProps {\n    /** Active tab index. */\n    activeTabIndex?: number;\n    /** Tab provider children. */\n    children: ReactNode;\n    /** Tab panel children should not render if the tab panel is hidden. */\n    isLazy?: boolean;\n    /** Activate tabs on focus. */\n    shouldActivateOnFocus?: boolean;\n\n    /** Tab change callback. */\n    onChange?(index: number): void;\n}\n\nconst DEFAULT_PROPS: Partial<TabProviderProps> = {\n    isLazy: INIT_STATE.isLazy,\n    shouldActivateOnFocus: INIT_STATE.shouldActivateOnFocus,\n};\n\n/**\n * This component provides a context in which tabs can be defined and linked to their tab panel.\n *\n * It does not produce any markup so you can wrap it around any React elements and then split the TabList and TabPanel\n * components in the react tree.\n *\n * @param  props React component props.\n * @return React element.\n */\nexport const TabProvider: React.FC<TabProviderProps> = (props) => {\n    const { children, onChange, ...propState } = props;\n    const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n    // On prop state change => dispatch update.\n    useEffect(\n        () => {\n            dispatch({ type: 'update', payload: propState });\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [dispatch, ...Object.values(propState)],\n    );\n\n    // On active tab index state change => send update to the onChange.\n    useEffect(\n        () => {\n            if (state === INIT_STATE || !onChange || propState.activeTabIndex === state.activeTabIndex) {\n                return;\n            }\n            onChange(state.activeTabIndex);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [onChange, state.activeTabIndex],\n    );\n\n    return <TabProviderContext.Provider value={[state, dispatch]}>{children}</TabProviderContext.Provider>;\n};\nTabProvider.defaultProps = DEFAULT_PROPS;\n","import { Alignment, Theme } from '@lumx/react';\nimport { CSS_PREFIX } from '@lumx/react/constants';\nimport { Comp, GenericProps, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\n\nimport classNames from 'classnames';\nimport React, { forwardRef, ReactNode } from 'react';\nimport { useRovingTabIndex } from '../../hooks/useRovingTabIndex';\n\nexport enum TabListLayout {\n    clustered = 'clustered',\n    fixed = 'fixed',\n}\n\n/**\n * Defines the props of the component.\n */\nexport interface TabListProps extends GenericProps {\n    /** ARIA label (purpose of the set of tabs). */\n    ['aria-label']: string;\n    /** Tab list. */\n    children: ReactNode;\n    /** Layout of the tabs in the list. */\n    layout?: TabListLayout;\n    /** Position of the tabs in the list (requires 'clustered' layout). */\n    position?: Alignment;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'TabList';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = `${CSS_PREFIX}-tabs`;\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<TabListProps> = {\n    layout: TabListLayout.fixed,\n    position: Alignment.left,\n    theme: Theme.light,\n};\n\n/**\n * TabList component.\n *\n * Implements WAI-ARIA `tablist` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const TabList: Comp<TabListProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { 'aria-label': ariaLabel, children, className, layout, position, theme, ...forwardedProps } = props;\n    const tabListRef = React.useRef(null);\n    useRovingTabIndex({\n        parentRef: tabListRef,\n        elementSelector: '[role=\"tab\"]',\n        keepTabIndex: false,\n        extraDependencies: [children],\n    });\n\n    return (\n        <div\n            ref={mergeRefs(ref, tabListRef)}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, layout, position, theme }))}\n        >\n            <div className={`${CLASSNAME}__links`} role=\"tablist\" aria-label={ariaLabel}>\n                {children}\n            </div>\n        </div>\n    );\n});\nTabList.displayName = COMPONENT_NAME;\nTabList.className = CLASSNAME;\nTabList.defaultProps = DEFAULT_PROPS;\n","import { Icon, IconProps, Size } from '@lumx/react';\nimport { CSS_PREFIX } from '@lumx/react/constants';\nimport { Comp, GenericProps, handleBasicClasses } from '@lumx/react/utils';\n\nimport classNames from 'classnames';\nimport React, { FocusEventHandler, forwardRef, KeyboardEventHandler, ReactNode, useCallback } from 'react';\nimport { useTabProviderContext } from './state';\n\n/**\n * Defines the props of the component.\n */\nexport interface TabProps extends GenericProps {\n    /** Children are not supported. */\n    children?: never;\n    /** Icon (SVG path). */\n    icon?: IconProps['icon'];\n    /** Native id property. */\n    id?: string;\n    /** Whether the tab is active or not. */\n    isActive?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Label content. */\n    label: string | ReactNode;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Tab';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = `${CSS_PREFIX}-tabs__link`;\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<TabProps> = {};\n\n/**\n * Tab component.\n *\n * Implements WAI-ARIA `tab` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Tab: Comp<TabProps, HTMLButtonElement> = forwardRef((props, ref) => {\n    const {\n        className,\n        disabled,\n        icon,\n        id,\n        isActive: propIsActive,\n        isDisabled = disabled,\n        label,\n        onFocus,\n        onKeyPress,\n        tabIndex = -1,\n        ...forwardedProps\n    } = props;\n    const state = useTabProviderContext('tab', id);\n    const isActive = propIsActive || state?.isActive;\n\n    const changeToCurrentTab = useCallback(() => {\n        if (isDisabled) {\n            return;\n        }\n        state?.changeToTab();\n    }, [isDisabled, state]);\n\n    const handleFocus: FocusEventHandler = useCallback(\n        (event) => {\n            onFocus?.(event);\n            if (state?.shouldActivateOnFocus) {\n                changeToCurrentTab();\n            }\n        },\n        [changeToCurrentTab, onFocus, state?.shouldActivateOnFocus],\n    );\n\n    const handleKeyPress: KeyboardEventHandler = useCallback(\n        (event) => {\n            onKeyPress?.(event);\n            if (event.key !== 'Enter') {\n                return;\n            }\n            changeToCurrentTab();\n        },\n        [changeToCurrentTab, onKeyPress],\n    );\n\n    return (\n        <button\n            ref={ref}\n            {...forwardedProps}\n            type=\"button\"\n            id={state?.tabId}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, isActive, isDisabled }))}\n            onClick={changeToCurrentTab}\n            onKeyPress={handleKeyPress}\n            onFocus={handleFocus}\n            role=\"tab\"\n            tabIndex={isActive ? 0 : tabIndex}\n            aria-disabled={isDisabled}\n            aria-selected={isActive}\n            aria-controls={state?.tabPanelId}\n        >\n            {icon && <Icon icon={icon} size={Size.xs} />}\n            {label && <span>{label}</span>}\n        </button>\n    );\n});\nTab.displayName = COMPONENT_NAME;\nTab.className = CLASSNAME;\nTab.defaultProps = DEFAULT_PROPS;\n","import { useTabProviderContext } from '@lumx/react/components/tabs/state';\nimport { CSS_PREFIX } from '@lumx/react/constants';\nimport { Comp, GenericProps, handleBasicClasses } from '@lumx/react/utils';\n\nimport classNames from 'classnames';\nimport React, { forwardRef } from 'react';\n\n/**\n * Defines the props of the component.\n */\nexport interface TabPanelProps extends GenericProps {\n    /** Native id property */\n    id?: string;\n    /** Whether the tab is active or not. */\n    isActive?: boolean;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'TabPanel';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = `${CSS_PREFIX}-tab-panel`;\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<TabPanelProps> = {};\n\n/**\n * TabPanel component.\n *\n * Implements WAI-ARIA `tabpanel` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const TabPanel: Comp<TabPanelProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { children, id, className, isActive: propIsActive, ...forwardedProps } = props;\n\n    const state = useTabProviderContext('tabPanel', id);\n    const isActive = propIsActive || state?.isActive;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            id={state?.tabPanelId}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, isActive }))}\n            role=\"tabpanel\"\n            tabIndex={0}\n            aria-labelledby={state?.tabId}\n        >\n            {(!state?.isLazy || isActive) && children}\n        </div>\n    );\n});\nTabPanel.displayName = COMPONENT_NAME;\nTabPanel.className = CLASSNAME;\nTabPanel.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}