{"ast":null,"code":"import { Theme, Alignment } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport isObject from 'lodash/isObject';\nimport { T as Thumbnail } from './Thumbnail2.js';\n/**\n * Image block variants.\n */\n\nvar ImageBlockCaptionPosition = {\n  below: 'below',\n  over: 'over'\n};\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'ImageBlock';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  captionPosition: ImageBlockCaptionPosition.below,\n  theme: Theme.light,\n  align: Alignment.left\n};\n/**\n * ImageBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar ImageBlock = forwardRef(function (props, ref) {\n  var actions = props.actions,\n      align = props.align,\n      alt = props.alt,\n      captionPosition = props.captionPosition,\n      captionStyle = props.captionStyle,\n      className = props.className,\n      description = props.description,\n      fillHeight = props.fillHeight,\n      image = props.image,\n      size = props.size,\n      tags = props.tags,\n      theme = props.theme,\n      thumbnailProps = props.thumbnailProps,\n      title = props.title,\n      forwardedProps = _objectWithoutProperties(props, [\"actions\", \"align\", \"alt\", \"captionPosition\", \"captionStyle\", \"className\", \"description\", \"fillHeight\", \"image\", \"size\", \"tags\", \"theme\", \"thumbnailProps\", \"title\"]);\n\n  return React.createElement(\"figure\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      captionPosition: captionPosition,\n      align: align,\n      size: size,\n      theme: theme\n    }), fillHeight && \"\".concat(CLASSNAME, \"--fill-height\"))\n  }), React.createElement(Thumbnail, _extends({}, thumbnailProps, {\n    className: classnames(\"\".concat(CLASSNAME, \"__image\"), thumbnailProps === null || thumbnailProps === void 0 ? void 0 : thumbnailProps.className),\n    fillHeight: fillHeight,\n    align: align,\n    image: image,\n    size: size,\n    theme: theme,\n    alt: alt || title\n  })), (title || description || tags) && React.createElement(\"figcaption\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\"),\n    style: captionStyle\n  }, (title || description) && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__caption\")\n  }, title && React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__title\")\n  }, title), title && description && \"\\xA0\", isObject(description) && description.__html ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: description,\n    className: \"\".concat(CLASSNAME, \"__description\")\n  }) : React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__description\")\n  }, description)), tags && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__tags\")\n  }, tags)), actions && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__actions\")\n  }, actions));\n});\nImageBlock.displayName = COMPONENT_NAME;\nImageBlock.className = CLASSNAME;\nImageBlock.defaultProps = DEFAULT_PROPS;\nexport { ImageBlockCaptionPosition as I, ImageBlock as a };","map":{"version":3,"sources":["../../../src/components/image-block/ImageBlock.tsx"],"names":["ImageBlockCaptionPosition","below","over","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","captionPosition","theme","Theme","align","Alignment","left","ImageBlock","forwardRef","actions","alt","captionStyle","className","description","fillHeight","image","size","tags","thumbnailProps","title","forwardedProps","props","ref","classNames","handleBasicClasses","prefix"],"mappings":"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","sourcesContent":["import React, { CSSProperties, forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport isObject from 'lodash/isObject';\n\nimport { Alignment, HorizontalAlignment, Size, Theme, Thumbnail } from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses, ValueOf } from '@lumx/react/utils';\nimport { ThumbnailProps } from '../thumbnail/Thumbnail';\n\n/**\n * Image block variants.\n */\nexport const ImageBlockCaptionPosition = {\n    below: 'below',\n    over: 'over',\n} as const;\nexport type ImageBlockCaptionPosition = ValueOf<typeof ImageBlockCaptionPosition>;\n\n/**\n *  Image block sizes.\n */\nexport type ImageBlockSize = Extract<Size, 'xl' | 'xxl'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface ImageBlockProps extends GenericProps {\n    /** Action toolbar content. */\n    actions?: ReactNode;\n    /** Alignment. */\n    align?: HorizontalAlignment;\n    /** Image alternative text. */\n    alt: string;\n    /** Caption position. */\n    captionPosition?: ImageBlockCaptionPosition;\n    /** Caption custom CSS style. */\n    captionStyle?: CSSProperties;\n    /** Image description. Can be either a string, or sanitized html. */\n    description?: string | { __html: string };\n    /** Whether the image has to fill its container height or not. */\n    fillHeight?: boolean;\n    /** Image URL. */\n    image: string;\n    /** Size variant. */\n    size?: ImageBlockSize;\n    /** Tag content. */\n    tags?: ReactNode;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Props to pass to the thumbnail (minus those already set by the ImageBlock props). */\n    thumbnailProps?: Omit<ThumbnailProps, 'image' | 'size' | 'theme' | 'align' | 'fillHeight'>;\n    /** Image title to display in the caption. */\n    title?: string;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ImageBlock';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ImageBlockProps> = {\n    captionPosition: ImageBlockCaptionPosition.below,\n    theme: Theme.light,\n    align: Alignment.left,\n};\n\n/**\n * ImageBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ImageBlock: Comp<ImageBlockProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        actions,\n        align,\n        alt,\n        captionPosition,\n        captionStyle,\n        className,\n        description,\n        fillHeight,\n        image,\n        size,\n        tags,\n        theme,\n        thumbnailProps,\n        title,\n        ...forwardedProps\n    } = props;\n    return (\n        <figure\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    captionPosition,\n                    align,\n                    size,\n                    theme,\n                }),\n                fillHeight && `${CLASSNAME}--fill-height`,\n            )}\n        >\n            <Thumbnail\n                {...thumbnailProps}\n                className={classNames(`${CLASSNAME}__image`, thumbnailProps?.className)}\n                fillHeight={fillHeight}\n                align={align}\n                image={image}\n                size={size}\n                theme={theme}\n                alt={(alt || title) as string}\n            />\n            {(title || description || tags) && (\n                <figcaption className={`${CLASSNAME}__wrapper`} style={captionStyle}>\n                    {(title || description) && (\n                        <div className={`${CLASSNAME}__caption`}>\n                            {title && <span className={`${CLASSNAME}__title`}>{title}</span>}\n                            {/* Add an `&nbsp;` when there is description and title. */}\n                            {title && description && '\\u00A0'}\n                            {isObject(description) && description.__html ? (\n                                // eslint-disable-next-line react/no-danger\n                                <span dangerouslySetInnerHTML={description} className={`${CLASSNAME}__description`} />\n                            ) : (\n                                <span className={`${CLASSNAME}__description`}>{description}</span>\n                            )}\n                        </div>\n                    )}\n                    {tags && <div className={`${CLASSNAME}__tags`}>{tags}</div>}\n                </figcaption>\n            )}\n            {actions && <div className={`${CLASSNAME}__actions`}>{actions}</div>}\n        </figure>\n    );\n});\nImageBlock.displayName = COMPONENT_NAME;\nImageBlock.className = CLASSNAME;\nImageBlock.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}