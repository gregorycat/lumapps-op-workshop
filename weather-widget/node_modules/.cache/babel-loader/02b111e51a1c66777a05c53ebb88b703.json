{"ast":null,"code":"import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'ListDivider';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * ListDivider component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar ListDivider = forwardRef(function (props, ref) {\n  var className = props.className,\n      forwardedProps = _objectWithoutProperties(props, [\"className\"]);\n\n  return React.createElement(\"li\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME\n    }))\n  }));\n});\nListDivider.displayName = COMPONENT_NAME;\nListDivider.className = CLASSNAME;\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME$1 = 'ListSubheader';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME$1 = getRootClassName(COMPONENT_NAME$1);\n/**\n * ListSubheader component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar ListSubheader = forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"className\"]);\n\n  return React.createElement(\"li\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME$1\n    }))\n  }), children);\n});\nListSubheader.displayName = COMPONENT_NAME$1;\nListSubheader.className = CLASSNAME$1;\nexport { ListDivider as L, ListSubheader as a };","map":{"version":3,"sources":["../../../src/components/list/ListDivider.tsx","../../../src/components/list/ListSubheader.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","ListDivider","forwardRef","className","forwardedProps","props","ref","classNames","handleBasicClasses","prefix","ListSubheader","children"],"mappings":";;AAMA;;;;AAKA;;;;AAGA,IAAMA,cAAc,GAApB,aAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;;;;;IAOaC,WAAkD,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MACjFC,SADiF,GAChDE,KADgD,CAAA,SAAA;AAAA,MACnED,cADmE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;AAGzF,SACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAEV;AAAV,KAAD,CAA9B;AAHzB,GAAA,CAAA,CADJ;AAHwE,CAAA,C;AAW5EE,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;AACAA,WAAW,CAAXA,SAAAA,GAAAA,SAAAA;AClCA;;;;AAQA;;;;AAGA,IAAMH,gBAAc,GAApB,eAAA;AAEA;;;;AAGA,IAAMC,WAAS,GAAGC,gBAAgB,CAAlC,gBAAkC,CAAlC;AAEA;;;;;;;;IAOaU,aAAsD,GAAGR,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MACrFS,QADqF,GAC1CN,KAD0C,CAAA,QAAA;AAAA,MAC3EF,SAD2E,GAC1CE,KAD0C,CAAA,SAAA;AAAA,MAC7DD,cAD6D,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AAG7F,SACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAI,IAAA,GAAG,EAAEE;AAAT,GAAA,EAAA,cAAA,EAAA;AAAkC,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAEV;AAAV,KAAD,CAA9B;AAAvD,GAAA,CAAA,EADJ,QACI,CADJ;AAH4E,CAAA,C;AAShFW,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;AACAA,aAAa,CAAbA,SAAAA,GAAAA,WAAAA","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport type ListDividerProps = GenericProps;\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ListDivider';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * ListDivider component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ListDivider: Comp<ListDividerProps, HTMLLIElement> = forwardRef((props, ref) => {\n    const { className, ...forwardedProps } = props;\n\n    return (\n        <li\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME }))}\n        />\n    );\n});\nListDivider.displayName = COMPONENT_NAME;\nListDivider.className = CLASSNAME;\n","import React, { forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface ListSubheaderProps extends GenericProps {\n    /** Content. */\n    children: string | ReactNode;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ListSubheader';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * ListSubheader component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ListSubheader: Comp<ListSubheaderProps, HTMLLIElement> = forwardRef((props, ref) => {\n    const { children, className, ...forwardedProps } = props;\n\n    return (\n        <li ref={ref} {...forwardedProps} className={classNames(className, handleBasicClasses({ prefix: CLASSNAME }))}>\n            {children}\n        </li>\n    );\n});\nListSubheader.displayName = COMPONENT_NAME;\nListSubheader.className = CLASSNAME;\n"]},"metadata":{},"sourceType":"module"}