{"ast":null,"code":"import { Orientation, Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport isObject from 'lodash/isObject';\nimport { T as Thumbnail } from './Thumbnail2.js';\nimport { a as ThumbnailVariant } from './types.js';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'PostBlock';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  orientation: Orientation.horizontal,\n  theme: Theme.light\n};\n/**\n * PostBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar PostBlock = forwardRef(function (props, ref) {\n  var actions = props.actions,\n      attachments = props.attachments,\n      author = props.author,\n      className = props.className,\n      meta = props.meta,\n      onClick = props.onClick,\n      orientation = props.orientation,\n      tags = props.tags,\n      text = props.text,\n      theme = props.theme,\n      thumbnailProps = props.thumbnailProps,\n      title = props.title,\n      forwardedProps = _objectWithoutProperties(props, [\"actions\", \"attachments\", \"author\", \"className\", \"meta\", \"onClick\", \"orientation\", \"tags\", \"text\", \"theme\", \"thumbnailProps\", \"title\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref,\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      orientation: orientation,\n      theme: theme\n    }))\n  }, forwardedProps), thumbnailProps && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__thumbnail\")\n  }, React.createElement(Thumbnail, _extends({}, thumbnailProps, {\n    theme: theme,\n    variant: ThumbnailVariant.rounded\n  }))), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, author && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__author\")\n  }, author), title && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(CLASSNAME, \"__title\"),\n    onClick: onClick\n  }, title), meta && React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__meta\")\n  }, meta), isObject(text) && text.__html ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"p\", {\n    dangerouslySetInnerHTML: text,\n    className: \"\".concat(CLASSNAME, \"__text\")\n  }) : React.createElement(\"p\", {\n    className: \"\".concat(CLASSNAME, \"__text\")\n  }, text), attachments && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__attachments\")\n  }, attachments), (tags || actions) && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__toolbar\")\n  }, tags && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__tags\")\n  }, tags), actions && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__actions\")\n  }, actions))));\n});\nPostBlock.displayName = COMPONENT_NAME;\nPostBlock.className = CLASSNAME;\nPostBlock.defaultProps = DEFAULT_PROPS;\nexport { PostBlock as P };","map":{"version":3,"sources":["../../../src/components/post-block/PostBlock.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","orientation","Orientation","theme","Theme","light","PostBlock","forwardRef","actions","attachments","author","className","meta","onClick","tags","text","thumbnailProps","title","forwardedProps","props","classNames","handleBasicClasses","prefix","ThumbnailVariant","rounded"],"mappings":";;;;;;AAUA;;;;AA4BA;;;;AAGA,IAAMA,cAAc,GAApB,WAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;AAGA,IAAMC,aAAsC,GAAG;AAC3CC,EAAAA,WAAW,EAAEC,WAAW,CADmB,UAAA;AAE3CC,EAAAA,KAAK,EAAEC,KAAK,CAACC;AAF8B,CAA/C;AAKA;;;;;;;;IAOaC,SAA+C,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAElFC,OAFkF,GAelFW,KAfkF,CAAA,OAAA;AAAA,MAGlFV,WAHkF,GAelFU,KAfkF,CAAA,WAAA;AAAA,MAIlFT,MAJkF,GAelFS,KAfkF,CAAA,MAAA;AAAA,MAKlFR,SALkF,GAelFQ,KAfkF,CAAA,SAAA;AAAA,MAMlFP,IANkF,GAelFO,KAfkF,CAAA,IAAA;AAAA,MAOlFN,OAPkF,GAelFM,KAfkF,CAAA,OAAA;AAAA,MAQlFlB,WARkF,GAelFkB,KAfkF,CAAA,WAAA;AAAA,MASlFL,IATkF,GAelFK,KAfkF,CAAA,IAAA;AAAA,MAUlFJ,IAVkF,GAelFI,KAfkF,CAAA,IAAA;AAAA,MAWlFhB,KAXkF,GAelFgB,KAfkF,CAAA,KAAA;AAAA,MAYlFH,cAZkF,GAelFG,KAfkF,CAAA,cAAA;AAAA,MAalFF,KAbkF,GAelFE,KAfkF,CAAA,KAAA;AAAA,MAc/ED,cAd+E,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,SAAA,EAAA,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,OAAA,CAAA,CAAA;;AAiBtF,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EADP,GAAA;AAEI,IAAA,SAAS,EAAEE,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBrB,MAAAA,WAAW,EAAhC,WAAA;AAAkCE,MAAAA,KAAK,EAALA;AAAlC,KAAD,CAA9B;AAFzB,GAAA,EAAA,cAAA,CAAA,EAKKa,cAAc,IACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA;AAAd,GAAA,EACI,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA;AAA+B,IAAA,KAAK,EAApC,KAAA;AAA6C,IAAA,OAAO,EAAEO,gBAAgB,CAACC;AAAvE,GAAA,CAAA,CADJ,CANR,EAWI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA;AAAd,GAAA,EACKd,MAAM,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA;AAAd,GAAA,EADf,MACe,CADf,EAGKO,KAAK,IACF,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,IAAI,EAAZ,QAAA;AAAsB,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAA/B,SAA+B,CAA/B;AAAwD,IAAA,OAAO,EAAEJ;AAAjE,GAAA,EAJR,KAIQ,CAJR,EASKD,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAf,GAAA,EATb,IASa,CATb,EAWK,QAAQ,CAAR,IAAQ,CAAR,IAAkBG,IAAI,CAAtB,MAAA,GAAA;AAEG,EAAA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,IAAA,uBAAuB,EAA1B,IAAA;AAAkC,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAA3C,GAAA,CAFH,GAIG,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAZ,GAAA,EAfR,IAeQ,CAfR,EAkBKN,WAAW,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,eAAA;AAAd,GAAA,EAlBpB,WAkBoB,CAlBpB,EAmBK,CAACK,IAAI,IAAL,OAAA,KACG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA;AAAd,GAAA,EACKA,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAd,GAAA,EADb,IACa,CADb,EAEKN,OAAO,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA;AAAd,GAAA,EAlChC,OAkCgC,CAFhB,CApBR,CAXJ,CADJ;AAjBqE,CAAA,C;AA0DzEF,SAAS,CAATA,WAAAA,GAAAA,cAAAA;AACAA,SAAS,CAATA,SAAAA,GAAAA,SAAAA;AACAA,SAAS,CAATA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport isObject from 'lodash/isObject';\n\nimport { Orientation, Theme, Thumbnail, ThumbnailProps, ThumbnailVariant } from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface PostBlockProps extends GenericProps {\n    /** Action toolbar content. */\n    actions?: ReactNode;\n    /** Attachment content. */\n    attachments?: ReactNode;\n    /** Author content. */\n    author?: ReactNode;\n    /** Metadata content. */\n    meta?: ReactNode;\n    /** Orientation. */\n    orientation?: Orientation;\n    /** Tag content. */\n    tags?: ReactNode;\n    /** Content (string, or sanitized html). */\n    text?: string | { __html: string };\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Thumbnail. */\n    thumbnailProps?: ThumbnailProps;\n    /** Title. */\n    title: string;\n    /** On click callback. */\n    onClick?(): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'PostBlock';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<PostBlockProps> = {\n    orientation: Orientation.horizontal,\n    theme: Theme.light,\n};\n\n/**\n * PostBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const PostBlock: Comp<PostBlockProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        actions,\n        attachments,\n        author,\n        className,\n        meta,\n        onClick,\n        orientation,\n        tags,\n        text,\n        theme,\n        thumbnailProps,\n        title,\n        ...forwardedProps\n    } = props;\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, orientation, theme }))}\n            {...forwardedProps}\n        >\n            {thumbnailProps && (\n                <div className={`${CLASSNAME}__thumbnail`}>\n                    <Thumbnail {...thumbnailProps} theme={theme} variant={ThumbnailVariant.rounded} />\n                </div>\n            )}\n\n            <div className={`${CLASSNAME}__wrapper`}>\n                {author && <div className={`${CLASSNAME}__author`}>{author}</div>}\n\n                {title && (\n                    <button type=\"button\" className={`${CLASSNAME}__title`} onClick={onClick}>\n                        {title}\n                    </button>\n                )}\n\n                {meta && <span className={`${CLASSNAME}__meta`}>{meta}</span>}\n\n                {isObject(text) && text.__html ? (\n                    // eslint-disable-next-line react/no-danger\n                    <p dangerouslySetInnerHTML={text} className={`${CLASSNAME}__text`} />\n                ) : (\n                    <p className={`${CLASSNAME}__text`}>{text}</p>\n                )}\n\n                {attachments && <div className={`${CLASSNAME}__attachments`}>{attachments}</div>}\n                {(tags || actions) && (\n                    <div className={`${CLASSNAME}__toolbar`}>\n                        {tags && <div className={`${CLASSNAME}__tags`}>{tags}</div>}\n                        {actions && <div className={`${CLASSNAME}__actions`}>{actions}</div>}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n});\nPostBlock.displayName = COMPONENT_NAME;\nPostBlock.className = CLASSNAME;\nPostBlock.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}