{"ast":null,"code":"import { AspectRatio, Theme, ColorPalette, ColorVariant, Size } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef, useCallback } from 'react';\nimport { L as Link } from './Link2.js';\nimport { T as Thumbnail } from './Thumbnail2.js';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'LinkPreview';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  size: Size.regular,\n  theme: Theme.light\n};\n/**\n * LinkPreview component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar LinkPreview = forwardRef(function (props, ref) {\n  var className = props.className,\n      description = props.description,\n      link = props.link,\n      linkProps = props.linkProps,\n      size = props.size,\n      theme = props.theme,\n      thumbnailProps = props.thumbnailProps,\n      title = props.title,\n      forwardedProps = _objectWithoutProperties(props, [\"className\", \"description\", \"link\", \"linkProps\", \"size\", \"theme\", \"thumbnailProps\", \"title\"]); //TODO: a11y\n\n\n  var goToUrl = useCallback(function () {\n    return window.open(link, '_blank');\n  }, [link]);\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      size: size === Size.big && thumbnailProps ? Size.big : Size.regular,\n      theme: theme\n    }))\n  }), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, thumbnailProps && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__thumbnail\")\n  }, React.createElement(Thumbnail, _extends({}, thumbnailProps, {\n    onClick: goToUrl,\n    role: \"link\",\n    aspectRatio: AspectRatio.free,\n    fillHeight: true\n  }))), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__container\")\n  }, title && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__title\")\n  }, React.createElement(Link, _extends({}, linkProps, {\n    target: \"_blank\",\n    href: link,\n    color: theme === Theme.light ? ColorPalette.dark : ColorPalette.light,\n    colorVariant: ColorVariant.N\n  }), title)), description && React.createElement(\"p\", {\n    className: \"\".concat(CLASSNAME, \"__description\")\n  }, description), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__link\")\n  }, React.createElement(Link, _extends({}, linkProps, {\n    className: classnames(\"\".concat(CLASSNAME, \"__link\"), linkProps === null || linkProps === void 0 ? void 0 : linkProps.className),\n    target: \"_blank\",\n    href: link,\n    color: theme === Theme.light ? ColorPalette.blue : ColorPalette.light,\n    colorVariant: ColorVariant.N\n  }), link)))));\n});\nLinkPreview.displayName = COMPONENT_NAME;\nLinkPreview.className = CLASSNAME;\nLinkPreview.defaultProps = DEFAULT_PROPS;\nexport { LinkPreview as L };","map":{"version":3,"sources":["../../../src/components/link-preview/LinkPreview.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","size","Size","theme","Theme","light","LinkPreview","forwardRef","className","description","link","linkProps","thumbnailProps","title","forwardedProps","props","goToUrl","useCallback","window","ref","classNames","handleBasicClasses","prefix","AspectRatio","ColorPalette","ColorVariant","N"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n    AspectRatio,\n    ColorPalette,\n    ColorVariant,\n    Link,\n    LinkProps,\n    Size,\n    Theme,\n    Thumbnail,\n    ThumbnailProps,\n} from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface LinkPreviewProps extends GenericProps {\n    /** Description (either a string, or sanitized html). */\n    description?: string | { __html: string };\n    /** Link URL. */\n    link: string;\n    /** Props to pass to the link (minus those already set by the LinkPreview props). */\n    linkProps?: Omit<LinkProps, 'color' | 'colorVariant' | 'href' | 'target'>;\n    /** Size variant. */\n    size?: Extract<Size, 'regular' | 'big'>;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Thumbnail for the link preview. */\n    thumbnailProps?: ThumbnailProps;\n    /** Title. */\n    title?: string;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'LinkPreview';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<LinkPreviewProps> = {\n    size: Size.regular,\n    theme: Theme.light,\n};\n\n/**\n * LinkPreview component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const LinkPreview: Comp<LinkPreviewProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, description, link, linkProps, size, theme, thumbnailProps, title, ...forwardedProps } = props;\n\n    //TODO: a11y\n    const goToUrl = useCallback(() => window.open(link, '_blank'), [link]);\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    size: size === Size.big && thumbnailProps ? Size.big : Size.regular,\n                    theme,\n                }),\n            )}\n        >\n            <div className={`${CLASSNAME}__wrapper`}>\n                {thumbnailProps && (\n                    <div className={`${CLASSNAME}__thumbnail`}>\n                        <Thumbnail\n                            {...thumbnailProps}\n                            onClick={goToUrl}\n                            role=\"link\"\n                            aspectRatio={AspectRatio.free}\n                            fillHeight\n                        />\n                    </div>\n                )}\n\n                <div className={`${CLASSNAME}__container`}>\n                    {title && (\n                        <div className={`${CLASSNAME}__title`}>\n                            <Link\n                                {...linkProps}\n                                target=\"_blank\"\n                                href={link}\n                                color={theme === Theme.light ? ColorPalette.dark : ColorPalette.light}\n                                colorVariant={ColorVariant.N}\n                            >\n                                {title}\n                            </Link>\n                        </div>\n                    )}\n                    {description && <p className={`${CLASSNAME}__description`}>{description}</p>}\n\n                    <div className={`${CLASSNAME}__link`}>\n                        <Link\n                            {...linkProps}\n                            className={classNames(`${CLASSNAME}__link`, linkProps?.className)}\n                            target=\"_blank\"\n                            href={link}\n                            color={theme === Theme.light ? ColorPalette.blue : ColorPalette.light}\n                            colorVariant={ColorVariant.N}\n                        >\n                            {link}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nLinkPreview.displayName = COMPONENT_NAME;\nLinkPreview.className = CLASSNAME;\nLinkPreview.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}