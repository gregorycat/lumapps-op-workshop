{"ast":null,"code":"import { Alignment, AspectRatio, Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses, _ as _defineProperty } from './getRootClassName.js';\nimport React, { forwardRef, useMemo } from 'react';\nimport take from 'lodash/take';\nimport { T as Thumbnail } from './Thumbnail2.js';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Mosaic';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  theme: Theme.light\n};\n/**\n * Mosaic component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Mosaic = forwardRef(function (props, ref) {\n  var _classNames;\n\n  var className = props.className,\n      theme = props.theme,\n      thumbnails = props.thumbnails,\n      onImageClick = props.onImageClick,\n      forwardedProps = _objectWithoutProperties(props, [\"className\", \"theme\", \"thumbnails\", \"onImageClick\"]);\n\n  var handleImageClick = useMemo(function () {\n    if (!onImageClick) return undefined;\n    return function (index, onClick) {\n      return function (event) {\n        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n        onImageClick === null || onImageClick === void 0 ? void 0 : onImageClick(index);\n      };\n    };\n  }, [onImageClick]);\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      theme: theme\n    }), (_classNames = {}, _defineProperty(_classNames, \"\".concat(CLASSNAME, \"--has-1-thumbnail\"), (thumbnails === null || thumbnails === void 0 ? void 0 : thumbnails.length) === 1), _defineProperty(_classNames, \"\".concat(CLASSNAME, \"--has-2-thumbnails\"), (thumbnails === null || thumbnails === void 0 ? void 0 : thumbnails.length) === 2), _defineProperty(_classNames, \"\".concat(CLASSNAME, \"--has-3-thumbnails\"), (thumbnails === null || thumbnails === void 0 ? void 0 : thumbnails.length) === 3), _defineProperty(_classNames, \"\".concat(CLASSNAME, \"--has-4-thumbnails\"), (thumbnails === null || thumbnails === void 0 ? void 0 : thumbnails.length) >= 4), _classNames))\n  }), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, take(thumbnails, 4).map(function (thumbnail, index) {\n    var image = thumbnail.image,\n        onClick = thumbnail.onClick,\n        align = thumbnail.align,\n        thumbnailProps = _objectWithoutProperties(thumbnail, [\"image\", \"onClick\", \"align\"]);\n\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"\".concat(CLASSNAME, \"__thumbnail\")\n    }, React.createElement(Thumbnail, _extends({}, thumbnailProps, {\n      align: align || Alignment.left,\n      image: image,\n      theme: theme,\n      aspectRatio: AspectRatio.free,\n      fillHeight: true,\n      onClick: (handleImageClick === null || handleImageClick === void 0 ? void 0 : handleImageClick(index, onClick)) || onClick\n    })), thumbnails.length > 4 && index === 3 && React.createElement(\"div\", {\n      className: \"\".concat(CLASSNAME, \"__overlay\")\n    }, React.createElement(\"span\", null, \"+\", thumbnails.length - 4)));\n  })));\n});\nMosaic.displayName = COMPONENT_NAME;\nMosaic.className = CLASSNAME;\nMosaic.defaultProps = DEFAULT_PROPS;\nexport { Mosaic as M };","map":{"version":3,"sources":["../../../src/components/mosaic/Mosaic.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","Mosaic","forwardRef","className","thumbnails","onImageClick","forwardedProps","props","handleImageClick","useMemo","onClick","ref","classNames","handleBasicClasses","prefix","image","align","thumbnailProps","thumbnail","Alignment","AspectRatio","index"],"mappings":"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","sourcesContent":["import React, { forwardRef, MouseEventHandler, useMemo } from 'react';\n\nimport { Alignment, AspectRatio, Theme, Thumbnail, ThumbnailProps } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport classNames from 'classnames';\nimport take from 'lodash/take';\n\n/**\n * Defines the props of the component.\n */\nexport interface MosaicProps extends GenericProps {\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Thumbnails. */\n    thumbnails: ThumbnailProps[];\n    /** On image click callback. */\n    onImageClick?(index: number): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Mosaic';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<MosaicProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Mosaic component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Mosaic: Comp<MosaicProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, theme, thumbnails, onImageClick, ...forwardedProps } = props;\n    const handleImageClick = useMemo(() => {\n        if (!onImageClick) return undefined;\n\n        return (index: number, onClick?: MouseEventHandler): MouseEventHandler => (event) => {\n            onClick?.(event);\n            onImageClick?.(index);\n        };\n    }, [onImageClick]);\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme }), {\n                [`${CLASSNAME}--has-1-thumbnail`]: thumbnails?.length === 1,\n                [`${CLASSNAME}--has-2-thumbnails`]: thumbnails?.length === 2,\n                [`${CLASSNAME}--has-3-thumbnails`]: thumbnails?.length === 3,\n                [`${CLASSNAME}--has-4-thumbnails`]: thumbnails?.length >= 4,\n            })}\n        >\n            <div className={`${CLASSNAME}__wrapper`}>\n                {take(thumbnails, 4).map((thumbnail: any, index: number) => {\n                    const { image, onClick, align, ...thumbnailProps } = thumbnail;\n\n                    return (\n                        <div key={index} className={`${CLASSNAME}__thumbnail`}>\n                            <Thumbnail\n                                {...thumbnailProps}\n                                align={align || Alignment.left}\n                                image={image}\n                                theme={theme}\n                                aspectRatio={AspectRatio.free}\n                                fillHeight\n                                onClick={handleImageClick?.(index, onClick) || onClick}\n                            />\n\n                            {thumbnails.length > 4 && index === 3 && (\n                                <div className={`${CLASSNAME}__overlay`}>\n                                    <span>+{thumbnails.length - 4}</span>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n});\nMosaic.displayName = COMPONENT_NAME;\nMosaic.className = CLASSNAME;\nMosaic.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}