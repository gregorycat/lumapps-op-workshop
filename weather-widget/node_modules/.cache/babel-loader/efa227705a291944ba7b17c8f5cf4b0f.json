{"ast":null,"code":"import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Toolbar';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {};\n/**\n * Toolbar component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Toolbar = forwardRef(function (props, ref) {\n  var after = props.after,\n      before = props.before,\n      className = props.className,\n      label = props.label,\n      forwardedProps = _objectWithoutProperties(props, [\"after\", \"before\", \"className\", \"label\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      hasAfter: Boolean(after),\n      hasBefore: Boolean(before),\n      hasLabel: Boolean(label),\n      prefix: CLASSNAME\n    }))\n  }), before && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__before\")\n  }, before), label && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__label\")\n  }, label), after && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__after\")\n  }, after));\n});\nToolbar.displayName = COMPONENT_NAME;\nToolbar.className = CLASSNAME;\nToolbar.defaultProps = DEFAULT_PROPS;\nexport { Toolbar as T };","map":{"version":3,"sources":["../../../src/components/toolbar/Toolbar.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","Toolbar","forwardRef","after","before","className","label","forwardedProps","props","ref","classNames","handleBasicClasses","hasAfter","Boolean","hasBefore","hasLabel","prefix"],"mappings":";;AAMA;;;;AAYA;;;;AAGA,IAAMA,cAAc,GAApB,SAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;AAGA,IAAMC,aAAoC,GAA1C,EAAA;AAEA;;;;;;;;IAOaC,OAA2C,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAC1EC,KAD0E,GACnBK,KADmB,CAAA,KAAA;AAAA,MACnEJ,MADmE,GACnBI,KADmB,CAAA,MAAA;AAAA,MAC3DH,SAD2D,GACnBG,KADmB,CAAA,SAAA;AAAA,MAChDF,KADgD,GACnBE,KADmB,CAAA,KAAA;AAAA,MACtCD,cADsC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAGlF,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAEjBC,kBAAkB,CAAC;AACfC,MAAAA,QAAQ,EAAEC,OAAO,CADF,KACE,CADF;AAEfC,MAAAA,SAAS,EAAED,OAAO,CAFH,MAEG,CAFH;AAGfE,MAAAA,QAAQ,EAAEF,OAAO,CAHF,KAGE,CAHF;AAIfG,MAAAA,MAAM,EAAElB;AAJO,KAAD,CAFD;AAHzB,GAAA,CAAA,EAaKM,MAAM,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA;AAAd,GAAA,EAbf,MAae,CAbf,EAcKE,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA;AAAd,GAAA,EAdd,KAcc,CAdd,EAeKH,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA;AAAd,GAAA,EAhBlB,KAgBkB,CAfd,CADJ;AAHiE,CAAA,C;AAuBrEF,OAAO,CAAPA,WAAAA,GAAAA,cAAAA;AACAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;AACAA,OAAO,CAAPA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface ToolbarProps extends GenericProps {\n    /** After content (placed after the label). */\n    after?: ReactNode;\n    /** Before content (placed before the label). */\n    before?: ReactNode;\n    /** Label content. */\n    label?: ReactNode;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Toolbar';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ToolbarProps> = {};\n\n/**\n * Toolbar component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Toolbar: Comp<ToolbarProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { after, before, className, label, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    hasAfter: Boolean(after),\n                    hasBefore: Boolean(before),\n                    hasLabel: Boolean(label),\n                    prefix: CLASSNAME,\n                }),\n            )}\n        >\n            {before && <div className={`${CLASSNAME}__before`}>{before}</div>}\n            {label && <div className={`${CLASSNAME}__label`}>{label}</div>}\n            {after && <div className={`${CLASSNAME}__after`}>{after}</div>}\n        </div>\n    );\n});\nToolbar.displayName = COMPONENT_NAME;\nToolbar.className = CLASSNAME;\nToolbar.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}