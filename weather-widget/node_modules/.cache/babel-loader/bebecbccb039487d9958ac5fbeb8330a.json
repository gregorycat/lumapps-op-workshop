{"ast":null,"code":"import { Size, Theme, ColorPalette } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses, o as onEnterPressed, _ as _defineProperty } from './getRootClassName.js';\nimport React, { useCallback, forwardRef } from 'react';\nimport isFunction from 'lodash/isFunction';\n/**\n * Wrap mouse event handler to stop event propagation.\n *\n * @param  handler   The mouse handler to wrap.\n * @return Mouse handler stopping propagation.\n */\n\nfunction useStopPropagation(handler) {\n  return useCallback(function (evt) {\n    if (!evt || !isFunction(handler)) {\n      return;\n    }\n\n    handler(evt);\n    evt.stopPropagation();\n  }, [handler]);\n}\n/**\n * Chip sizes.\n */\n\n/**\n * Component display name.\n */\n\n\nvar COMPONENT_NAME = 'Chip';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  size: Size.m,\n  theme: Theme.light\n};\n/**\n * Chip component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Chip = forwardRef(function (props, ref) {\n  var after = props.after,\n      before = props.before,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      disabled = props.disabled,\n      isClickable = props.isClickable,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? disabled : _props$isDisabled,\n      isHighlighted = props.isHighlighted,\n      isSelected = props.isSelected,\n      onAfterClick = props.onAfterClick,\n      onBeforeClick = props.onBeforeClick,\n      onClick = props.onClick,\n      size = props.size,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"after\", \"before\", \"children\", \"className\", \"color\", \"disabled\", \"isClickable\", \"isDisabled\", \"isHighlighted\", \"isSelected\", \"onAfterClick\", \"onBeforeClick\", \"onClick\", \"size\", \"theme\"]);\n\n  var hasAfterClick = isFunction(onAfterClick);\n  var hasBeforeClick = isFunction(onBeforeClick);\n  var hasOnClick = isFunction(onClick); // Adapt color to the theme.\n\n  var chipColor = color || (theme === Theme.light ? ColorPalette.dark : ColorPalette.light);\n  var handleOnBeforeClick = useStopPropagation(onBeforeClick);\n  var handleOnAfterClick = useStopPropagation(onAfterClick);\n  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React.createElement(\"a\", _extends({}, forwardedProps, {\n      ref: ref,\n      className: classnames(className, handleBasicClasses({\n        clickable: Boolean(hasOnClick) || isClickable,\n        color: chipColor,\n        isDisabled: isDisabled,\n        hasAfter: Boolean(after),\n        hasBefore: Boolean(before),\n        highlighted: Boolean(isHighlighted),\n        prefix: CLASSNAME,\n        selected: Boolean(isSelected),\n        size: size,\n        unselected: Boolean(!isSelected)\n      })),\n      role: hasOnClick ? 'button' : undefined,\n      tabIndex: isDisabled || !hasOnClick ? -1 : 0,\n      \"aria-disabled\": hasOnClick && isDisabled || undefined,\n      onClick: hasOnClick ? onClick : undefined,\n      onKeyDown: hasOnClick ? onEnterPressed(onClick) : undefined\n    }), before && // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    React.createElement(\"div\", {\n      className: classnames(\"\".concat(CLASSNAME, \"__before\"), _defineProperty({}, \"\".concat(CLASSNAME, \"__before--is-clickable\"), hasBeforeClick)),\n      onClick: handleOnBeforeClick\n    }, before), React.createElement(\"div\", {\n      className: \"\".concat(CLASSNAME, \"__label\")\n    }, children), after && // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    React.createElement(\"div\", {\n      className: classnames(\"\".concat(CLASSNAME, \"__after\"), _defineProperty({}, \"\".concat(CLASSNAME, \"__after--is-clickable\"), hasAfterClick)),\n      onClick: handleOnAfterClick\n    }, after))\n  );\n});\nChip.displayName = COMPONENT_NAME;\nChip.className = CLASSNAME;\nChip.defaultProps = DEFAULT_PROPS;\nexport { Chip as C };","map":{"version":3,"sources":["../../../src/hooks/useStopPropagation.ts","../../../src/components/chip/Chip.tsx"],"names":["useCallback","isFunction","handler","evt","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","size","Size","theme","Theme","light","Chip","forwardRef","after","before","children","className","color","disabled","isClickable","isDisabled","isHighlighted","isSelected","onAfterClick","onBeforeClick","onClick","forwardedProps","props","hasAfterClick","hasBeforeClick","hasOnClick","chipColor","ColorPalette","handleOnBeforeClick","useStopPropagation","handleOnAfterClick","classNames","handleBasicClasses","clickable","Boolean","hasAfter","hasBefore","highlighted","prefix","selected","unselected","onEnterPressed","undefined"],"mappings":"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","sourcesContent":["import isFunction from 'lodash/isFunction';\nimport { MouseEventHandler, useCallback } from 'react';\n\n/**\n * Wrap mouse event handler to stop event propagation.\n *\n * @param  handler   The mouse handler to wrap.\n * @return Mouse handler stopping propagation.\n */\nexport function useStopPropagation(handler?: MouseEventHandler): MouseEventHandler {\n    return useCallback(\n        (evt) => {\n            if (!evt || !isFunction(handler)) {\n                return;\n            }\n            handler(evt);\n            evt.stopPropagation();\n        },\n        [handler],\n    );\n}\n","import { Color, ColorPalette, Size, Theme } from '@lumx/react';\nimport { useStopPropagation } from '@lumx/react/hooks/useStopPropagation';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses, onEnterPressed } from '@lumx/react/utils';\n\nimport classNames from 'classnames';\n\nimport isFunction from 'lodash/isFunction';\nimport React, { forwardRef, MouseEventHandler, ReactNode } from 'react';\n\n/**\n * Chip sizes.\n */\ntype ChipSize = Extract<Size, 's' | 'm'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface ChipProps extends GenericProps {\n    /** A component to be rendered after the content. */\n    after?: ReactNode;\n    /** A component to be rendered before the content. */\n    before?: ReactNode;\n    /** Color variant. */\n    color?: Color;\n    /** Whether the component is clickable or not. */\n    isClickable?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Whether the chip is currently in a highlighted state or not. */\n    isHighlighted?: boolean;\n    /** Whether the component is selected or not. */\n    isSelected?: boolean;\n    /** Size variant. */\n    size?: ChipSize;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** On \"after\" element clicked callback. */\n    onAfterClick?: MouseEventHandler;\n    /** On \"before\" element clicked callback. */\n    onBeforeClick?: MouseEventHandler;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Chip';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ChipProps> = {\n    size: Size.m,\n    theme: Theme.light,\n};\n\n/**\n * Chip component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Chip: Comp<ChipProps, HTMLAnchorElement> = forwardRef((props, ref) => {\n    const {\n        after,\n        before,\n        children,\n        className,\n        color,\n        disabled,\n        isClickable,\n        isDisabled = disabled,\n        isHighlighted,\n        isSelected,\n        onAfterClick,\n        onBeforeClick,\n        onClick,\n        size,\n        theme,\n        ...forwardedProps\n    } = props;\n    const hasAfterClick = isFunction(onAfterClick);\n    const hasBeforeClick = isFunction(onBeforeClick);\n    const hasOnClick = isFunction(onClick);\n\n    // Adapt color to the theme.\n    const chipColor = color || (theme === Theme.light ? ColorPalette.dark : ColorPalette.light);\n\n    const handleOnBeforeClick = useStopPropagation(onBeforeClick);\n    const handleOnAfterClick = useStopPropagation(onAfterClick);\n\n    return (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <a\n            {...forwardedProps}\n            ref={ref}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    clickable: Boolean(hasOnClick) || isClickable,\n                    color: chipColor,\n                    isDisabled,\n                    hasAfter: Boolean(after),\n                    hasBefore: Boolean(before),\n                    highlighted: Boolean(isHighlighted),\n                    prefix: CLASSNAME,\n                    selected: Boolean(isSelected),\n                    size,\n                    unselected: Boolean(!isSelected),\n                }),\n            )}\n            role={hasOnClick ? 'button' : undefined}\n            tabIndex={isDisabled || !hasOnClick ? -1 : 0}\n            aria-disabled={(hasOnClick && isDisabled) || undefined}\n            onClick={hasOnClick ? onClick : undefined}\n            onKeyDown={hasOnClick ? onEnterPressed(onClick) : undefined}\n        >\n            {before && (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n                <div\n                    className={classNames(`${CLASSNAME}__before`, {\n                        [`${CLASSNAME}__before--is-clickable`]: hasBeforeClick,\n                    })}\n                    onClick={handleOnBeforeClick}\n                >\n                    {before}\n                </div>\n            )}\n\n            <div className={`${CLASSNAME}__label`}>{children}</div>\n\n            {after && (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n                <div\n                    className={classNames(`${CLASSNAME}__after`, {\n                        [`${CLASSNAME}__after--is-clickable`]: hasAfterClick,\n                    })}\n                    onClick={handleOnAfterClick}\n                >\n                    {after}\n                </div>\n            )}\n        </a>\n    );\n});\nChip.displayName = COMPONENT_NAME;\nChip.className = CLASSNAME;\nChip.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}