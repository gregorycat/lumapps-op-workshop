{"ast":null,"code":"import { Size, Orientation, Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport { A as Avatar } from './Avatar2.js';\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'UserBlock';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  orientation: Orientation.horizontal,\n  size: Size.m,\n  theme: Theme.light\n};\n/**\n * UserBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar UserBlock = forwardRef(function (props, ref) {\n  var avatarProps = props.avatarProps,\n      className = props.className,\n      fields = props.fields,\n      multipleActions = props.multipleActions,\n      name = props.name,\n      onClick = props.onClick,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      orientation = props.orientation,\n      simpleAction = props.simpleAction,\n      size = props.size,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"avatarProps\", \"className\", \"fields\", \"multipleActions\", \"name\", \"onClick\", \"onMouseEnter\", \"onMouseLeave\", \"orientation\", \"simpleAction\", \"size\", \"theme\"]);\n\n  var componentSize = size; // Special case - When using vertical orientation force the size to be Sizes.l.\n\n  if (orientation === Orientation.vertical) {\n    componentSize = Size.l;\n  }\n\n  var shouldDisplayActions = orientation === Orientation.vertical;\n  var nameBlock = name && // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-tabindex,jsx-a11y/no-static-element-interactions\n  React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__name\"),\n    onClick: onClick,\n    tabIndex: onClick ? 0 : -1\n  }, name);\n  var fieldsBlock = fields && componentSize !== Size.s && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__fields\")\n  }, fields.map(function (aField, idx) {\n    return React.createElement(\"span\", {\n      key: idx,\n      className: \"\".concat(CLASSNAME, \"__field\")\n    }, aField);\n  }));\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      orientation: orientation,\n      size: componentSize,\n      theme: theme\n    })),\n    onMouseLeave: onMouseLeave,\n    onMouseEnter: onMouseEnter\n  }), avatarProps && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__avatar\")\n  }, React.createElement(Avatar, _extends({}, avatarProps, {\n    size: componentSize,\n    onClick: onClick,\n    tabIndex: onClick ? 0 : -1,\n    theme: theme\n  }))), (fields || name) && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, nameBlock, fieldsBlock), shouldDisplayActions && simpleAction && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__action\")\n  }, simpleAction), shouldDisplayActions && multipleActions && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__actions\")\n  }, multipleActions));\n});\nUserBlock.displayName = COMPONENT_NAME;\nUserBlock.className = CLASSNAME;\nUserBlock.defaultProps = DEFAULT_PROPS;\nexport { UserBlock as U };","map":{"version":3,"sources":["../../../src/components/user-block/UserBlock.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","orientation","Orientation","size","Size","theme","Theme","light","UserBlock","forwardRef","avatarProps","className","fields","multipleActions","name","onClick","onMouseEnter","onMouseLeave","simpleAction","forwardedProps","props","componentSize","shouldDisplayActions","nameBlock","fieldsBlock","ref","classNames","handleBasicClasses","prefix"],"mappings":"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","sourcesContent":["import React, { forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Avatar, Orientation, Size, Theme } from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { AvatarProps } from '../avatar/Avatar';\n\n/**\n * User block sizes.\n */\nexport type UserBlockSize = Extract<Size, 's' | 'm' | 'l'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface UserBlockProps extends GenericProps {\n    /** Props to pass to the avatar. */\n    avatarProps?: AvatarProps;\n    /** Simple action toolbar content. */\n    simpleAction?: ReactNode;\n    /** Multiple action toolbar content. */\n    multipleActions?: ReactNode;\n    /** Additional fields used to describe the user. */\n    fields?: string[];\n    /** User name. */\n    name?: string;\n    /** Orientation. */\n    orientation?: Orientation;\n    /** Size variant. */\n    size?: UserBlockSize;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** On click callback. */\n    onClick?(): void;\n    /** On mouse enter callback. */\n    onMouseEnter?(): void;\n    /** On mouse leave callback. */\n    onMouseLeave?(): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'UserBlock';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<UserBlockProps> = {\n    orientation: Orientation.horizontal,\n    size: Size.m,\n    theme: Theme.light,\n};\n\n/**\n * UserBlock component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const UserBlock: Comp<UserBlockProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        avatarProps,\n        className,\n        fields,\n        multipleActions,\n        name,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        orientation,\n        simpleAction,\n        size,\n        theme,\n        ...forwardedProps\n    } = props;\n    let componentSize = size;\n\n    // Special case - When using vertical orientation force the size to be Sizes.l.\n    if (orientation === Orientation.vertical) {\n        componentSize = Size.l;\n    }\n\n    const shouldDisplayActions: boolean = orientation === Orientation.vertical;\n\n    const nameBlock: ReactNode = name && (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-tabindex,jsx-a11y/no-static-element-interactions\n        <span className={`${CLASSNAME}__name`} onClick={onClick} tabIndex={onClick ? 0 : -1}>\n            {name}\n        </span>\n    );\n\n    const fieldsBlock: ReactNode = fields && componentSize !== Size.s && (\n        <div className={`${CLASSNAME}__fields`}>\n            {fields.map((aField: string, idx: number) => (\n                <span key={idx} className={`${CLASSNAME}__field`}>\n                    {aField}\n                </span>\n            ))}\n        </div>\n    );\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({ prefix: CLASSNAME, orientation, size: componentSize, theme }),\n            )}\n            onMouseLeave={onMouseLeave}\n            onMouseEnter={onMouseEnter}\n        >\n            {avatarProps && (\n                <div className={`${CLASSNAME}__avatar`}>\n                    <Avatar\n                        {...avatarProps}\n                        size={componentSize}\n                        onClick={onClick}\n                        tabIndex={onClick ? 0 : -1}\n                        theme={theme}\n                    />\n                </div>\n            )}\n            {(fields || name) && (\n                <div className={`${CLASSNAME}__wrapper`}>\n                    {nameBlock}\n                    {fieldsBlock}\n                </div>\n            )}\n            {shouldDisplayActions && simpleAction && <div className={`${CLASSNAME}__action`}>{simpleAction}</div>}\n            {shouldDisplayActions && multipleActions && (\n                <div className={`${CLASSNAME}__actions`}>{multipleActions}</div>\n            )}\n        </div>\n    );\n});\nUserBlock.displayName = COMPONENT_NAME;\nUserBlock.className = CLASSNAME;\nUserBlock.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}