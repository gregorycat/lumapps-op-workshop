{"ast":null,"code":"import { Size, AspectRatio, Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\nimport { I as Icon } from './Icon2.js';\n/**\n * Uploader variants.\n */\n\nvar UploaderVariant = {\n  square: 'square',\n  rounded: 'rounded',\n  circle: 'circle'\n};\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Uploader';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  aspectRatio: AspectRatio.horizontal,\n  size: Size.xl,\n  theme: Theme.light,\n  variant: UploaderVariant.square\n};\n/**\n * Uploader component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Uploader = forwardRef(function (props, ref) {\n  var aspectRatio = props.aspectRatio,\n      className = props.className,\n      label = props.label,\n      icon = props.icon,\n      size = props.size,\n      theme = props.theme,\n      variant = props.variant,\n      forwardedProps = _objectWithoutProperties(props, [\"aspectRatio\", \"className\", \"label\", \"icon\", \"size\", \"theme\", \"variant\"]); // Adjust to square aspect ratio when using circle variants.\n\n\n  var adjustedAspectRatio = variant === UploaderVariant.circle ? AspectRatio.square : aspectRatio;\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      aspectRatio: adjustedAspectRatio,\n      prefix: CLASSNAME,\n      size: size,\n      theme: theme,\n      variant: variant\n    }))\n  }), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__background\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, icon && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__icon\")\n  }, React.createElement(Icon, {\n    icon: icon,\n    size: Size.s\n  })), label && React.createElement(\"span\", {\n    className: \"\".concat(CLASSNAME, \"__label\")\n  }, label)));\n});\nUploader.displayName = COMPONENT_NAME;\nUploader.className = CLASSNAME;\nUploader.defaultProps = DEFAULT_PROPS;\nexport { UploaderVariant as U, Uploader as a };","map":{"version":3,"sources":["../../../src/components/uploader/Uploader.tsx"],"names":["UploaderVariant","square","rounded","circle","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","aspectRatio","AspectRatio","size","Size","theme","Theme","variant","Uploader","forwardRef","className","label","icon","forwardedProps","props","adjustedAspectRatio","ref","classNames","handleBasicClasses","prefix","s"],"mappings":";;;;AAOA;;;;IAGaA,eAAe,GAAG;AAC3BC,EAAAA,MAAM,EADqB,QAAA;AAE3BC,EAAAA,OAAO,EAFoB,SAAA;AAG3BC,EAAAA,MAAM,EAAE;AAHmB,C;AAgC/B;;;;AAGA,IAAMC,cAAc,GAApB,UAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;AAGA,IAAMC,aAAqC,GAAG;AAC1CC,EAAAA,WAAW,EAAEC,WAAW,CADkB,UAAA;AAE1CC,EAAAA,IAAI,EAAEC,IAAI,CAFgC,EAAA;AAG1CC,EAAAA,KAAK,EAAEC,KAAK,CAH8B,KAAA;AAI1CC,EAAAA,OAAO,EAAEd,eAAe,CAACC;AAJiB,CAA9C;AAOA;;;;;;;;IAOac,QAA6C,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MAC5ER,WAD4E,GACKa,KADL,CAAA,WAAA;AAAA,MAC/DJ,SAD+D,GACKI,KADL,CAAA,SAAA;AAAA,MACpDH,KADoD,GACKG,KADL,CAAA,KAAA;AAAA,MAC7CF,IAD6C,GACKE,KADL,CAAA,IAAA;AAAA,MACvCX,IADuC,GACKW,KADL,CAAA,IAAA;AAAA,MACjCT,KADiC,GACKS,KADL,CAAA,KAAA;AAAA,MAC1BP,OAD0B,GACKO,KADL,CAAA,OAAA;AAAA,MACdD,cADc,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,aAAA,EAAA,WAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CAAA,CAAA;;;AAGpF,MAAME,mBAAmB,GAAGR,OAAO,KAAKd,eAAe,CAA3Bc,MAAAA,GAAqCL,WAAW,CAAhDK,MAAAA,GAA5B,WAAA;AAEA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAES;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAEjBC,kBAAkB,CAAC;AACfjB,MAAAA,WAAW,EADI,mBAAA;AAEfkB,MAAAA,MAAM,EAFS,SAAA;AAGfhB,MAAAA,IAAI,EAHW,IAAA;AAIfE,MAAAA,KAAK,EAJU,KAAA;AAKfE,MAAAA,OAAO,EAAPA;AALe,KAAD,CAFD;AAHzB,GAAA,CAAA,EAcI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAd,GAAA,CAdJ,EAgBI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA;AAAd,GAAA,EACKK,IAAI,IACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAd,GAAA,EACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAV,IAAA;AAAkB,IAAA,IAAI,EAAER,IAAI,CAACgB;AAA7B,GAAA,CADJ,CAFR,EAOKT,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA;AAAf,GAAA,EAxBtB,KAwBsB,CAPd,CAhBJ,CADJ;AALmE,CAAA,C;AAkCvEH,QAAQ,CAARA,WAAAA,GAAAA,cAAAA;AACAA,QAAQ,CAARA,SAAAA,GAAAA,SAAAA;AACAA,QAAQ,CAARA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef, MouseEventHandler } from 'react';\n\nimport classNames from 'classnames';\n\nimport { AspectRatio, Icon, Size, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses, ValueOf } from '@lumx/react/utils';\n\n/**\n * Uploader variants.\n */\nexport const UploaderVariant = {\n    square: 'square',\n    rounded: 'rounded',\n    circle: 'circle',\n} as const;\nexport type UploaderVariant = ValueOf<typeof UploaderVariant>;\n\n/**\n * Uploader sizes.\n */\nexport type UploaderSize = Extract<Size, 'xl' | 'xxl'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface UploaderProps extends GenericProps {\n    /** Image aspect ratio. */\n    aspectRatio?: AspectRatio;\n    /** Icon (SVG path). */\n    icon?: string;\n    /** Label text. */\n    label?: string;\n    /** Size variant. */\n    size?: UploaderSize;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Variant. */\n    variant?: UploaderVariant;\n    /** On click callback. */\n    onClick?: MouseEventHandler<HTMLDivElement>;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Uploader';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<UploaderProps> = {\n    aspectRatio: AspectRatio.horizontal,\n    size: Size.xl,\n    theme: Theme.light,\n    variant: UploaderVariant.square,\n};\n\n/**\n * Uploader component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Uploader: Comp<UploaderProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { aspectRatio, className, label, icon, size, theme, variant, ...forwardedProps } = props;\n    // Adjust to square aspect ratio when using circle variants.\n    const adjustedAspectRatio = variant === UploaderVariant.circle ? AspectRatio.square : aspectRatio;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    aspectRatio: adjustedAspectRatio,\n                    prefix: CLASSNAME,\n                    size,\n                    theme,\n                    variant,\n                }),\n            )}\n        >\n            <div className={`${CLASSNAME}__background`} />\n\n            <div className={`${CLASSNAME}__wrapper`}>\n                {icon && (\n                    <div className={`${CLASSNAME}__icon`}>\n                        <Icon icon={icon} size={Size.s} />\n                    </div>\n                )}\n\n                {label && <span className={`${CLASSNAME}__label`}>{label}</span>}\n            </div>\n        </div>\n    );\n});\nUploader.displayName = COMPONENT_NAME;\nUploader.className = CLASSNAME;\nUploader.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}