{"ast":null,"code":"var _jsxFileName = \"/home/grej/extensions/lumapps-op-workshop/weather-widget/src/widget/Widget.tsx\";\n\n/* eslint-disable radix */\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { Icon, Theme, Tooltip, Avatar, Size } from '@lumx/react';\nimport { mdiSunglasses, mdiWater, mdiWeatherWindy } from '@lumx/icons';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport { FormattedMessage, IntlProvider, useIntl } from 'react-intl';\nimport { PredefinedErrorBoundary, NotificationsProvider } from '@lumapps-extensions-playground/common';\nimport messagesEn from '../translations/en.json';\nimport messagesFr from '../translations/fr.json';\nimport defaultGlobalSettings from './defaultGlobalSettings';\nimport { getWeather } from '../api';\n\nconst Widget = ({\n  value = {},\n  globalValue = {},\n  theme = Theme.light\n}) => {\n  const intl = useIntl();\n  const [weather, setWeather] = useState();\n  const {\n    cityName,\n    unit,\n    color,\n    isCurrentUser,\n    isDisplayForecast\n  } = value;\n  const {\n    apiKey = defaultGlobalSettings.apiKey\n  } = globalValue;\n  const displayLanguage = 'en';\n  moment.locale(displayLanguage);\n\n  const generateGreetings = () => {\n    const currentHour = parseInt(moment().format('HH'));\n\n    if (currentHour >= 3 && currentHour < 12) {\n      return 'Good Morning';\n    }\n\n    if (currentHour >= 12 && currentHour < 15) {\n      return 'Good Afternoon';\n    }\n\n    if (currentHour >= 15 && currentHour < 20) {\n      return 'Good Evening';\n    }\n\n    if (currentHour >= 20 && currentHour < 3) {\n      return 'Good Night';\n    }\n\n    return 'Hello';\n  };\n\n  const getInfo = async () => {\n    const weatherData = await getWeather({\n      location: cityName,\n      unit,\n      apiKey,\n      lang: displayLanguage\n    });\n    setWeather(weatherData);\n  };\n\n  useEffect(() => {\n    getInfo();\n  }, [cityName, apiKey, unit, isCurrentUser, displayLanguage, isDisplayForecast]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"openweather-extension\",\n    style: {\n      color: theme === Theme.dark ? '#FFFFFF' : '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lumx-typography-subtitle2\",\n    style: {\n      flex: 1,\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, generateGreetings(), \", John Doe\"), /*#__PURE__*/React.createElement(Avatar, {\n    theme: theme,\n    image: \"https://randomuser.me/api/portraits/men/91.jpg\",\n    alt: \"Profile picture\",\n    size: Size.m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), weather && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-spacing-padding-huge\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-typography-headline\",\n    style: {\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, weather.name, \", \", weather.country, ' ', /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: '13pt',\n      marginLeft: 8\n    },\n    alt: \"country flag\",\n    src: `https://openweathermap.org/images/flags/${weather.country.toLowerCase()}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    label: weather.current.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: weather.current.weather[0].description,\n    src: `http://openweathermap.org/img/wn/${weather.current.weather[0].icon}@2x.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-typography-caption\",\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, weather.current.weather[0].description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-typography-display1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, Math.round(weather.current.temp), \"\\xB0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-spacing-padding-huge lumx-spacing-margin-horizontal-huge\",\n    style: {\n      display: 'flex',\n      backgroundColor: `#${color && color.code}`,\n      color: '#FFFF',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    label: intl.formatMessage({\n      id: 'humidity'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      margin: 'auto'\n    },\n    icon: mdiWater,\n    size: Size.m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }), Math.round(weather.current.humidity), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    label: intl.formatMessage({\n      id: 'wind'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      margin: 'auto'\n    },\n    icon: mdiWeatherWindy,\n    size: Size.m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }), Math.round(weather.current.wind_speed), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"speed_unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 74\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    label: intl.formatMessage({\n      id: 'uv'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      margin: 'auto'\n    },\n    icon: mdiSunglasses,\n    size: Size.m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }), Math.round(weather.current.uvi))))), weather && isDisplayForecast && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    className: \"lumx-spacing-margin-huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, weather.daily.slice(0, 3).map(daily => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    key: daily.dt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    label: daily.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: daily.weather[0].main,\n    src: `http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lumx-typography-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, Math.round(daily.temp.max), \"\\xB0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lumx-typography-subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, Math.round(daily.temp.min), \"\\xB0\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lumx-typography-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, moment.unix(daily.dt).format('ddd'))))));\n};\n\nconst NotificationAwareWidget = props => {\n  const messages = {\n    en: messagesEn,\n    fr: messagesFr\n  };\n  const [lang, setLang] = useState('en');\n  const displayLanguage = 'en';\n  useEffect(() => {\n    const getContext = async () => {\n      const isLangInTrad = Object.keys(messages).includes(displayLanguage);\n      setLang(isLangInTrad ? displayLanguage : 'en');\n    };\n\n    getContext();\n  }, []);\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    messages: messages[lang],\n    locale: lang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PredefinedErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Widget, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport { NotificationAwareWidget as Widget };","map":{"version":3,"sources":["/home/grej/extensions/lumapps-op-workshop/weather-widget/src/widget/Widget.tsx"],"names":["React","useEffect","useState","Icon","Theme","Tooltip","Avatar","Size","mdiSunglasses","mdiWater","mdiWeatherWindy","moment","FormattedMessage","IntlProvider","useIntl","PredefinedErrorBoundary","NotificationsProvider","messagesEn","messagesFr","defaultGlobalSettings","getWeather","Widget","value","globalValue","theme","light","intl","weather","setWeather","cityName","unit","color","isCurrentUser","isDisplayForecast","apiKey","displayLanguage","locale","generateGreetings","currentHour","parseInt","format","getInfo","weatherData","location","lang","dark","display","flex","margin","m","flexDirection","textAlign","name","country","height","marginLeft","toLowerCase","current","description","icon","textTransform","Math","round","temp","backgroundColor","code","borderRadius","formatMessage","id","humidity","wind_speed","uvi","daily","slice","map","dt","main","max","min","unix","NotificationAwareWidget","props","messages","en","fr","setLang","getContext","isLangInTrad","Object","keys","includes"],"mappings":"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","sourcesContent":["/* eslint-disable radix */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\nimport { Icon, Theme, Tooltip, Avatar, Size } from '@lumx/react';\nimport { mdiSunglasses, mdiWater, mdiWeatherWindy } from '@lumx/icons';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nimport { FormattedMessage, IntlProvider, useIntl } from 'react-intl';\nimport { PredefinedErrorBoundary, NotificationsProvider } from '@lumapps-extensions-playground/common';\n\nimport messagesEn from '../translations/en.json';\nimport messagesFr from '../translations/fr.json';\n\nimport defaultGlobalSettings from './defaultGlobalSettings';\n\nimport { getWeather } from '../api';\nimport { WeatherType } from '../types';\n\ninterface WidgetProps {\n    value: any;\n    globalValue: any;\n    theme: Theme;\n}\n\nconst Widget = ({ value = {}, globalValue = {}, theme = Theme.light }: WidgetProps): React.ReactElement => {\n    const intl = useIntl();\n    const [weather, setWeather] = useState<WeatherType>();\n\n    const { cityName, unit, color, isCurrentUser, isDisplayForecast }: any = value;\n    const { apiKey = defaultGlobalSettings.apiKey }: any = globalValue;\n\n    const displayLanguage = 'en';\n\n    moment.locale(displayLanguage);\n\n    const generateGreetings = () => {\n        const currentHour = parseInt(moment().format('HH'));\n\n        if (currentHour >= 3 && currentHour < 12) {\n            return 'Good Morning';\n        }\n        if (currentHour >= 12 && currentHour < 15) {\n            return 'Good Afternoon';\n        }\n        if (currentHour >= 15 && currentHour < 20) {\n            return 'Good Evening';\n        }\n        if (currentHour >= 20 && currentHour < 3) {\n            return 'Good Night';\n        }\n        return 'Hello';\n    };\n\n    const getInfo = async () => {\n        const weatherData = await getWeather({\n            location: cityName,\n            unit,\n            apiKey,\n            lang: displayLanguage,\n        });\n        setWeather(weatherData);\n    };\n\n    useEffect(() => {\n        getInfo();\n    }, [cityName, apiKey, unit, isCurrentUser, displayLanguage, isDisplayForecast]);\n\n    return (\n        <div className=\"openweather-extension\" style={{ color: theme === Theme.dark ? '#FFFFFF' : '#000000' }}>\n            <div\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <span\n                    className=\"lumx-typography-subtitle2\"\n                    style={{\n                        flex: 1,\n                        margin: 'auto',\n                    }}\n                >\n                    {generateGreetings()}, John Doe\n                </span>\n                <Avatar\n                    theme={theme}\n                    image=\"https://randomuser.me/api/portraits/men/91.jpg\"\n                    alt=\"Profile picture\"\n                    size={Size.m}\n                />\n            </div>\n\n            {weather && (\n                <>\n                    <div\n                        className=\"lumx-spacing-padding-huge\"\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }}\n                    >\n                        <div className=\"lumx-typography-headline\" style={{ margin: 'auto', textAlign: 'center' }}>\n                            {weather.name}, {weather.country}{' '}\n                            <img\n                                style={{\n                                    height: '13pt',\n                                    marginLeft: 8,\n                                }}\n                                alt=\"country flag\"\n                                src={`https://openweathermap.org/images/flags/${weather.country.toLowerCase()}.png`}\n                            />\n                        </div>\n\n                        <div style={{ margin: 'auto', textAlign: 'center' }}>\n                            <Tooltip label={weather.current.weather[0].description}>\n                                <img\n                                    alt={weather.current.weather[0].description}\n                                    src={`http://openweathermap.org/img/wn/${weather.current.weather[0].icon}@2x.png`}\n                                />\n                            </Tooltip>\n                            <div className=\"lumx-typography-caption\" style={{ textTransform: 'capitalize' }}>\n                                {weather.current.weather[0].description}\n                            </div>\n                            <div className=\"lumx-typography-display1\">{Math.round(weather.current.temp)}°</div>\n                        </div>\n                    </div>\n                    <div\n                        className=\"lumx-spacing-padding-huge lumx-spacing-margin-horizontal-huge\"\n                        style={{\n                            display: 'flex',\n                            backgroundColor: `#${color && color.code}`,\n                            color: '#FFFF',\n                            borderRadius: 4,\n                        }}\n                    >\n                        <div style={{ flex: 1, textAlign: 'center' }}>\n                            <Tooltip label={intl.formatMessage({ id: 'humidity' })}>\n                                <Icon style={{ margin: 'auto' }} icon={mdiWater} size={Size.m} />\n                                {Math.round(weather.current.humidity)} %\n                            </Tooltip>\n                        </div>\n                        <div style={{ flex: 1, margin: 'auto', textAlign: 'center' }}>\n                            <Tooltip label={intl.formatMessage({ id: 'wind' })}>\n                                <Icon style={{ margin: 'auto' }} icon={mdiWeatherWindy} size={Size.m} />\n                                {Math.round(weather.current.wind_speed)} <FormattedMessage id=\"speed_unit\" />\n                            </Tooltip>\n                        </div>\n                        <div style={{ flex: 1, margin: 'auto', textAlign: 'center' }}>\n                            <Tooltip label={intl.formatMessage({ id: 'uv' })}>\n                                <Icon style={{ margin: 'auto' }} icon={mdiSunglasses} size={Size.m} />\n                                {Math.round(weather.current.uvi)}\n                            </Tooltip>\n                        </div>\n                    </div>\n                </>\n            )}\n\n            {weather && isDisplayForecast && (\n                <div style={{ display: 'flex' }} className=\"lumx-spacing-margin-huge\">\n                    {weather.daily.slice(0, 3).map((daily) => (\n                        <div style={{ flex: 1, margin: 'auto', textAlign: 'center' }} key={daily.dt}>\n                            <div>\n                                <Tooltip label={daily.weather[0].description}>\n                                    <img\n                                        alt={daily.weather[0].main}\n                                        src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`}\n                                    />\n                                </Tooltip>\n                            </div>\n                            <div>\n                                <span className=\"lumx-typography-headline\">{Math.round(daily.temp.max)}°</span>\n                                <span className=\"lumx-typography-subtitle1\">{Math.round(daily.temp.min)}°</span>\n                            </div>\n                            <div className=\"lumx-typography-title\">{moment.unix(daily.dt).format('ddd')}</div>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst NotificationAwareWidget = (props: any) => {\n    const messages: any = {\n        en: messagesEn,\n        fr: messagesFr,\n    };\n    const [lang, setLang] = useState<string>('en');\n    const displayLanguage = 'en';\n\n    useEffect(() => {\n        const getContext = async () => {\n            const isLangInTrad = Object.keys(messages).includes(displayLanguage);\n\n            setLang(isLangInTrad ? displayLanguage : 'en');\n        };\n        getContext();\n    }, []);\n\n    return (\n        <IntlProvider messages={messages[lang]} locale={lang}>\n            <NotificationsProvider>\n                <PredefinedErrorBoundary>\n                    <Widget {...props} />\n                </PredefinedErrorBoundary>\n            </NotificationsProvider>\n        </IntlProvider>\n    );\n};\n\nexport { NotificationAwareWidget as Widget };\n"]},"metadata":{},"sourceType":"module"}