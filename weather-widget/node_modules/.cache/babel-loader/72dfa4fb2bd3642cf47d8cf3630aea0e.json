{"ast":null,"code":"/**\n * Merge refs into a single function ref.\n *\n * @param  refs React references to merge.\n * @return the merged ref.\n */\nfunction mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (value) {\n    return refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref) {\n        // eslint-disable-next-line no-param-reassign\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport { mergeRefs as m };","map":{"version":3,"sources":["../../../src/utils/mergeRefs.ts"],"names":["refs","ref"],"mappings":"AAKA;;;;;;AAMO,SAAA,SAAA,GAA+F;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAtEA,IAAsE,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAtEA,IAAAA,IAAsE,CAAA,IAAA,CAAtEA,GAAsE,SAAA,CAAA,IAAA,CAAtEA;AAAsE;;AAClG,SAAO,UAAA,KAAA,EAAA;AAAA,WACH,IAAI,CAAJ,OAAA,CAAa,UAAA,GAAA,EAAS;AAClB,UAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC3BC,QAAAA,GAAG,CAAHA,KAAG,CAAHA;AADJ,OAAA,MAEO,IAAA,GAAA,EAAS;AACZ;AACCA,QAAAA,GAAD,CAAA,OAACA,GAAD,KAACA;AACJ;AAPF,KACH,CADG;AAAP,GAAA;AASH","sourcesContent":["import { Falsy } from '@lumx/react/utils/type';\nimport { MutableRefObject, Ref } from 'react';\n\ntype FnRef<T> = (value: T) => void;\n\n/**\n * Merge refs into a single function ref.\n *\n * @param  refs React references to merge.\n * @return the merged ref.\n */\nexport function mergeRefs<T>(...refs: Array<MutableRefObject<T | null> | FnRef<T> | Falsy>): FnRef<T> {\n    return (value) =>\n        refs.forEach((ref) => {\n            if (typeof ref === 'function') {\n                ref(value);\n            } else if (ref) {\n                // eslint-disable-next-line no-param-reassign\n                (ref as MutableRefObject<T>).current = value;\n            }\n        });\n}\n"]},"metadata":{},"sourceType":"module"}