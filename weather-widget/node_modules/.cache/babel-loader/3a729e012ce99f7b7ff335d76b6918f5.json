{"ast":null,"code":"import { Theme } from './components.js';\nimport { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';\nimport React, { forwardRef } from 'react';\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\nvar COMPONENT_NAME = 'Divider';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  theme: Theme.light\n};\n/**\n * Divider component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar Divider = forwardRef(function (props, ref) {\n  var className = props.className,\n      theme = props.theme,\n      forwardedProps = _objectWithoutProperties(props, [\"className\", \"theme\"]);\n\n  return React.createElement(\"hr\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      theme: theme\n    }))\n  }));\n});\nDivider.displayName = COMPONENT_NAME;\nDivider.className = CLASSNAME;\nDivider.defaultProps = DEFAULT_PROPS;\nexport { DEFAULT_PROPS as D, Divider as a };","map":{"version":3,"sources":["../../../src/components/divider/Divider.tsx"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","Divider","forwardRef","className","forwardedProps","props","ref","classNames","handleBasicClasses","prefix"],"mappings":";;;AAOA;;;;AAQA;;;;AAGA,IAAMA,cAAc,GAApB,SAAA;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAAlC,cAAkC,CAAlC;AAEA;;;;IAGaC,aAAoC,GAAG;AAChDC,EAAAA,KAAK,EAAEC,KAAK,CAACC;AADmC,C;AAIpD;;;;;;;;IAOaC,OAA0C,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AAAA,MACzEC,SADyE,GACjCE,KADiC,CAAA,SAAA;AAAA,MAC9DP,KAD8D,GACjCO,KADiC,CAAA,KAAA;AAAA,MACpDD,cADoD,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAGjF,SACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACI,IAAA,GAAG,EAAEE;AADT,GAAA,EAAA,cAAA,EAAA;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAYC,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAR,SAAA;AAAqBX,MAAAA,KAAK,EAALA;AAArB,KAAD,CAA9B;AAHzB,GAAA,CAAA,CADJ;AAHgE,CAAA,C;AAWpEG,OAAO,CAAPA,WAAAA,GAAAA,cAAAA;AACAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;AACAA,OAAO,CAAPA,YAAAA,GAAAA,aAAAA","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface DividerProps extends GenericProps {\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Divider';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nexport const DEFAULT_PROPS: Partial<DividerProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Divider component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Divider: Comp<DividerProps, HTMLHRElement> = forwardRef((props, ref) => {\n    const { className, theme, ...forwardedProps } = props;\n\n    return (\n        <hr\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme }))}\n        />\n    );\n});\nDivider.displayName = COMPONENT_NAME;\nDivider.className = CLASSNAME;\nDivider.defaultProps = DEFAULT_PROPS;\n"]},"metadata":{},"sourceType":"module"}