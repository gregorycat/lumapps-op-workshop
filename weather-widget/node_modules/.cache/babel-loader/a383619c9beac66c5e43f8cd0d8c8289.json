{"ast":null,"code":"import { Size } from './components.js';\nimport { f as _slicedToArray, g as getRootClassName, a as _objectWithoutProperties, o as onEnterPressed, b as _extends, d as classnames, h as handleBasicClasses, c as _objectSpread2, j as createCommonjsModule, i as _toConsumableArray } from './getRootClassName.js';\nimport React, { useState, useEffect, forwardRef, useMemo, Children, isValidElement, cloneElement, useRef } from 'react';\nimport 'lodash/isBoolean';\nimport isEmpty from 'lodash/isEmpty';\nimport 'lodash/kebabCase';\nimport 'lodash/noop';\nimport get from 'lodash/get';\nimport { i as isComponent } from './type.js';\nimport { m as mergeRefs } from './mergeRefs.js';\nimport { r as renderLink } from './renderLink.js';\nvar INITIAL_INDEX = -1;\n/**\n * This custom hook provides the necessary set of functions and values to properly navigate\n * a list using the keyboard.\n *\n * @param  items                    the list of items that will be navigated using the keyboard.\n * @param  ref                      A reference to the element that is controlling the navigation.\n * @param  onListItemSelected       callback to be executed when the ENTER key is pressed on an item.\n * @param  onListItemNavigated      callback to be executed when the Arrow keys are pressed.\n * @param  onEnterPressed           callback to be executed when the ENTER key is pressed.\n * @param  onBackspacePressed       callback to be executed when the BACKSPACE key is pressed.\n * @param  keepFocusAfterSelection  determines whether after selecting an item, the focus should be maintained on the current target or not.\n * @param  initialIndex             where should the navigation start from. it defaults to `-1`, so the first item navigated is the item on position `0`.\n * @param  preventTabOnEnteredValue determines whether upon TAB, if there is a value entered, the event is prevented or not.\n * @return useKeyboardListNavigation helpers.\n */\n\nvar useKeyboardListNavigation = function useKeyboardListNavigation(items, ref, onListItemSelected, onListItemNavigated, onEnterPressed, onBackspacePressed) {\n  var keepFocusAfterSelection = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var initialIndex = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : INITIAL_INDEX;\n  var preventTabOnEnteredValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : true;\n\n  var _useState = useState(initialIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeItemIndex = _useState2[0],\n      setActiveItemIndex = _useState2[1];\n  /**\n   * This function calculates the next index in the list to be highlighted\n   * @param key - key code pressed\n   * @return next active index\n   */\n\n\n  var calculateActiveIndex = function calculateActiveIndex(key) {\n    switch (key) {\n      case 'ArrowDown':\n        return activeItemIndex + 1 < items.length ? activeItemIndex + 1 : 0;\n\n      case 'ArrowUp':\n        return activeItemIndex - 1 >= 0 ? activeItemIndex - 1 : items.length - 1;\n\n      default:\n        return initialIndex;\n    }\n  };\n  /**\n   * Resets the active index to the initial state\n   */\n\n\n  var resetActiveIndex = function resetActiveIndex() {\n    setActiveItemIndex(initialIndex);\n  };\n  /**\n   * Prevents the default event and stops the propagation of said event\n   * @param evt - key pressed event\n   */\n\n\n  var preventDefaultAndStopPropagation = function preventDefaultAndStopPropagation(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n  };\n  /**\n   * Handles navigation with the arrows using the keyboard\n   * @param evt - key pressed event\n   */\n\n\n  var onArrowPressed = function onArrowPressed(evt) {\n    var key = evt.key;\n    var nextActiveIndex = calculateActiveIndex(key);\n    setActiveItemIndex(nextActiveIndex);\n    preventDefaultAndStopPropagation(evt);\n\n    if (onListItemNavigated) {\n      var selectedItem = items[nextActiveIndex];\n      onListItemNavigated(selectedItem);\n    }\n  };\n  /**\n   * Handles the event when the backspace key is pressed\n   * @param evt - key pressed event\n   */\n\n\n  var onBackspaceKeyPressed = function onBackspaceKeyPressed(evt) {\n    if (onBackspacePressed) {\n      onBackspacePressed(evt);\n    }\n  };\n  /**\n   * Handles when the ENTER key is pressed\n   * @param evt - key pressed event\n   */\n\n\n  var onEnterKeyPressed = function onEnterKeyPressed(evt) {\n    if (!onListItemSelected) {\n      return;\n    }\n\n    preventDefaultAndStopPropagation(evt);\n\n    if (!keepFocusAfterSelection) {\n      evt.currentTarget.blur();\n    }\n\n    var selectedItem = items[activeItemIndex];\n\n    if (selectedItem) {\n      onListItemSelected(selectedItem);\n      resetActiveIndex();\n    } else if (activeItemIndex === initialIndex && onEnterPressed) {\n      var _value = get(evt, 'target.value');\n\n      onEnterPressed(_value);\n      resetActiveIndex();\n    }\n  };\n  /**\n   * Handles when the TAB key is pressed\n   * @param evt - key pressed event\n   */\n\n\n  var onTabKeyPressed = function onTabKeyPressed(evt) {\n    var value = get(evt, 'target.value');\n\n    if (preventTabOnEnteredValue && value && value.length > 0) {\n      preventDefaultAndStopPropagation(evt);\n    }\n  };\n  /**\n   * In order to make it easier in the future to add new events depending on the key\n   * a map was created to add these handlers. In the future, if there is another event\n   * that we need to manage depending on a specific key, we just need to add the key code\n   * here, and as a value, the handler for said key.\n   */\n\n\n  var eventsForKeyPressed = {\n    ArrowDown: onArrowPressed,\n    Tab: onTabKeyPressed,\n    ArrowUp: onArrowPressed,\n    Enter: onEnterKeyPressed,\n    Backspace: onBackspaceKeyPressed\n  };\n  /**\n   * Calculates the next active item index depending on the key pressed.\n   * If the key pressed was ENTER, the function executes the callback `onListItemSelected`\n   * and resets the active index, since an item was selected.\n   * @param evt - key pressed or key down event\n   */\n\n  var onKeyboardNavigation = function onKeyboardNavigation(evt) {\n    var key = evt.key;\n    var handler = eventsForKeyPressed[key];\n\n    if (handler) {\n      handler(evt);\n    }\n  };\n\n  useEffect(function () {\n    var currentElement = ref.current;\n\n    if (!currentElement) {\n      return undefined;\n    }\n\n    currentElement.addEventListener('focus', resetActiveIndex);\n    currentElement.addEventListener('keydown', onKeyboardNavigation);\n    return function () {\n      currentElement.removeEventListener('focus', resetActiveIndex);\n      currentElement.removeEventListener('keydown', onKeyboardNavigation);\n    };\n  });\n  return {\n    activeItemIndex: activeItemIndex,\n    onKeyboardNavigation: onKeyboardNavigation,\n    resetActiveIndex: resetActiveIndex,\n    setActiveItemIndex: setActiveItemIndex\n  };\n};\n/**\n * Component display name.\n */\n\n\nvar COMPONENT_NAME = 'ListItem';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME = getRootClassName(COMPONENT_NAME);\n/**\n * Component default props.\n */\n\nvar DEFAULT_PROPS = {\n  size: Size.regular\n};\n/**\n * Check if the list item is clickable.\n * @return `true` if the list item is clickable; `false` otherwise.\n */\n\nfunction isClickable(_ref) {\n  var linkProps = _ref.linkProps,\n      onItemSelected = _ref.onItemSelected;\n  return !isEmpty(linkProps === null || linkProps === void 0 ? void 0 : linkProps.href) || !!onItemSelected;\n}\n/**\n * ListItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\n\nvar ListItem = forwardRef(function (props, ref) {\n  var after = props.after,\n      before = props.before,\n      children = props.children,\n      className = props.className,\n      isHighlighted = props.isHighlighted,\n      isSelected = props.isSelected,\n      linkAs = props.linkAs,\n      _props$linkProps = props.linkProps,\n      linkProps = _props$linkProps === void 0 ? {} : _props$linkProps,\n      linkRef = props.linkRef,\n      onItemSelected = props.onItemSelected,\n      size = props.size,\n      forwardedProps = _objectWithoutProperties(props, [\"after\", \"before\", \"children\", \"className\", \"isHighlighted\", \"isSelected\", \"linkAs\", \"linkProps\", \"linkRef\", \"onItemSelected\", \"size\"]);\n\n  var onKeyDown = useMemo(function () {\n    return onItemSelected ? onEnterPressed(onItemSelected) : undefined;\n  }, [onItemSelected]);\n  var content = React.createElement(React.Fragment, null, before && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__before\")\n  }, before), React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__content\")\n  }, children), after && React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__after\")\n  }, after));\n  return React.createElement(\"li\", _extends({\n    ref: ref\n  }, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME,\n      size: size\n    }))\n  }), isClickable({\n    linkProps: linkProps,\n    onItemSelected: onItemSelected\n  }) ?\n  /* Clickable list item */\n  renderLink(_objectSpread2({\n    linkAs: linkAs,\n    tabIndex: 0,\n    role: onItemSelected ? 'button' : undefined\n  }, linkProps, {\n    className: classnames(handleBasicClasses({\n      prefix: \"\".concat(CLASSNAME, \"__link\"),\n      isHighlighted: isHighlighted,\n      isSelected: isSelected\n    })),\n    onClick: onItemSelected,\n    onKeyDown: onKeyDown,\n    ref: linkRef\n  }), content) :\n  /* Non clickable list item */\n  React.createElement(\"div\", {\n    className: \"\".concat(CLASSNAME, \"__wrapper\")\n  }, content));\n});\nListItem.displayName = COMPONENT_NAME;\nListItem.className = CLASSNAME;\nListItem.defaultProps = DEFAULT_PROPS;\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    p = b ? Symbol.for(\"react.suspense\") : 60113,\n    q = b ? Symbol.for(\"react.suspense_list\") : 60120,\n    r = b ? Symbol.for(\"react.memo\") : 60115,\n    t = b ? Symbol.for(\"react.lazy\") : 60116,\n    v = b ? Symbol.for(\"react.block\") : 60121,\n    w = b ? Symbol.for(\"react.fundamental\") : 60117,\n    x = b ? Symbol.for(\"react.responder\") : 60118,\n    y = b ? Symbol.for(\"react.scope\") : 60119;\n\nfunction z(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case t:\n              case r:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction A(a) {\n  return z(a) === m;\n}\n\nvar AsyncMode = l;\nvar ConcurrentMode = m;\nvar ContextConsumer = k;\nvar ContextProvider = h;\nvar Element = c;\nvar ForwardRef = n;\nvar Fragment = e;\nvar Lazy = t;\nvar Memo = r;\nvar Portal = d;\nvar Profiler = g;\nvar StrictMode = f;\nvar Suspense = p;\n\nvar isAsyncMode = function (a) {\n  return A(a) || z(a) === l;\n};\n\nvar isConcurrentMode = A;\n\nvar isContextConsumer = function (a) {\n  return z(a) === k;\n};\n\nvar isContextProvider = function (a) {\n  return z(a) === h;\n};\n\nvar isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nvar isForwardRef = function (a) {\n  return z(a) === n;\n};\n\nvar isFragment = function (a) {\n  return z(a) === e;\n};\n\nvar isLazy = function (a) {\n  return z(a) === t;\n};\n\nvar isMemo = function (a) {\n  return z(a) === r;\n};\n\nvar isPortal = function (a) {\n  return z(a) === d;\n};\n\nvar isProfiler = function (a) {\n  return z(a) === g;\n};\n\nvar isStrictMode = function (a) {\n  return z(a) === f;\n};\n\nvar isSuspense = function (a) {\n  return z(a) === p;\n};\n\nvar isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n};\n\nvar typeOf = z;\nvar reactIs_production_min = {\n  AsyncMode: AsyncMode,\n  ConcurrentMode: ConcurrentMode,\n  ContextConsumer: ContextConsumer,\n  ContextProvider: ContextProvider,\n  Element: Element,\n  ForwardRef: ForwardRef,\n  Fragment: Fragment,\n  Lazy: Lazy,\n  Memo: Memo,\n  Portal: Portal,\n  Profiler: Profiler,\n  StrictMode: StrictMode,\n  Suspense: Suspense,\n  isAsyncMode: isAsyncMode,\n  isConcurrentMode: isConcurrentMode,\n  isContextConsumer: isContextConsumer,\n  isContextProvider: isContextProvider,\n  isElement: isElement,\n  isForwardRef: isForwardRef,\n  isFragment: isFragment,\n  isLazy: isLazy,\n  isMemo: isMemo,\n  isPortal: isPortal,\n  isProfiler: isProfiler,\n  isStrictMode: isStrictMode,\n  isSuspense: isSuspense,\n  isValidElementType: isValidElementType,\n  typeOf: typeOf\n};\nvar reactIs_development = createCommonjsModule(function (module, exports) {\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n      // nor polyfill, then a plain number is used for performance.\n      var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n      // (unstable) APIs that have been removed. Can we remove the symbols?\n\n      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\n      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\n      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\n      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\n      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\n      function isValidElementType(type) {\n        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n      }\n\n      function typeOf(object) {\n        if (typeof object === 'object' && object !== null) {\n          var $$typeof = object.$$typeof;\n\n          switch ($$typeof) {\n            case REACT_ELEMENT_TYPE:\n              var type = object.type;\n\n              switch (type) {\n                case REACT_ASYNC_MODE_TYPE:\n                case REACT_CONCURRENT_MODE_TYPE:\n                case REACT_FRAGMENT_TYPE:\n                case REACT_PROFILER_TYPE:\n                case REACT_STRICT_MODE_TYPE:\n                case REACT_SUSPENSE_TYPE:\n                  return type;\n\n                default:\n                  var $$typeofType = type && type.$$typeof;\n\n                  switch ($$typeofType) {\n                    case REACT_CONTEXT_TYPE:\n                    case REACT_FORWARD_REF_TYPE:\n                    case REACT_LAZY_TYPE:\n                    case REACT_MEMO_TYPE:\n                    case REACT_PROVIDER_TYPE:\n                      return $$typeofType;\n\n                    default:\n                      return $$typeof;\n                  }\n\n              }\n\n            case REACT_PORTAL_TYPE:\n              return $$typeof;\n          }\n        }\n\n        return undefined;\n      } // AsyncMode is deprecated along with isAsyncMode\n\n\n      var AsyncMode = REACT_ASYNC_MODE_TYPE;\n      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n      var ContextConsumer = REACT_CONTEXT_TYPE;\n      var ContextProvider = REACT_PROVIDER_TYPE;\n      var Element = REACT_ELEMENT_TYPE;\n      var ForwardRef = REACT_FORWARD_REF_TYPE;\n      var Fragment = REACT_FRAGMENT_TYPE;\n      var Lazy = REACT_LAZY_TYPE;\n      var Memo = REACT_MEMO_TYPE;\n      var Portal = REACT_PORTAL_TYPE;\n      var Profiler = REACT_PROFILER_TYPE;\n      var StrictMode = REACT_STRICT_MODE_TYPE;\n      var Suspense = REACT_SUSPENSE_TYPE;\n      var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n      function isAsyncMode(object) {\n        {\n          if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n          }\n        }\n        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n      }\n\n      function isConcurrentMode(object) {\n        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n      }\n\n      function isContextConsumer(object) {\n        return typeOf(object) === REACT_CONTEXT_TYPE;\n      }\n\n      function isContextProvider(object) {\n        return typeOf(object) === REACT_PROVIDER_TYPE;\n      }\n\n      function isElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }\n\n      function isForwardRef(object) {\n        return typeOf(object) === REACT_FORWARD_REF_TYPE;\n      }\n\n      function isFragment(object) {\n        return typeOf(object) === REACT_FRAGMENT_TYPE;\n      }\n\n      function isLazy(object) {\n        return typeOf(object) === REACT_LAZY_TYPE;\n      }\n\n      function isMemo(object) {\n        return typeOf(object) === REACT_MEMO_TYPE;\n      }\n\n      function isPortal(object) {\n        return typeOf(object) === REACT_PORTAL_TYPE;\n      }\n\n      function isProfiler(object) {\n        return typeOf(object) === REACT_PROFILER_TYPE;\n      }\n\n      function isStrictMode(object) {\n        return typeOf(object) === REACT_STRICT_MODE_TYPE;\n      }\n\n      function isSuspense(object) {\n        return typeOf(object) === REACT_SUSPENSE_TYPE;\n      }\n\n      exports.AsyncMode = AsyncMode;\n      exports.ConcurrentMode = ConcurrentMode;\n      exports.ContextConsumer = ContextConsumer;\n      exports.ContextProvider = ContextProvider;\n      exports.Element = Element;\n      exports.ForwardRef = ForwardRef;\n      exports.Fragment = Fragment;\n      exports.Lazy = Lazy;\n      exports.Memo = Memo;\n      exports.Portal = Portal;\n      exports.Profiler = Profiler;\n      exports.StrictMode = StrictMode;\n      exports.Suspense = Suspense;\n      exports.isAsyncMode = isAsyncMode;\n      exports.isConcurrentMode = isConcurrentMode;\n      exports.isContextConsumer = isContextConsumer;\n      exports.isContextProvider = isContextProvider;\n      exports.isElement = isElement;\n      exports.isForwardRef = isForwardRef;\n      exports.isFragment = isFragment;\n      exports.isLazy = isLazy;\n      exports.isMemo = isMemo;\n      exports.isPortal = isPortal;\n      exports.isProfiler = isProfiler;\n      exports.isStrictMode = isStrictMode;\n      exports.isSuspense = isSuspense;\n      exports.isValidElementType = isValidElementType;\n      exports.typeOf = typeOf;\n    })();\n  }\n});\nvar reactIs = createCommonjsModule(function (module) {\n  if (process.env.NODE_ENV === 'production') {\n    module.exports = reactIs_production_min;\n  } else {\n    module.exports = reactIs_development;\n  }\n});\n/**\n * Flatten list of react nodes removing fragments and adding keys.\n * based on: https://github.com/grrowl/react-keyed-flatten-children/blob/5d421644a449765ddd62b659946196b4b5d7b135/index.ts\n *\n * @param  children React nodes to flatten.\n * @return Flattened react nodes.\n */\n\nfunction flattenChildren(children) {\n  function recur(nodes) {\n    var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return Children.toArray(nodes).reduce(function (acc, node, index) {\n      var _get;\n\n      var nodeKeys = keys.concat((_get = get(node, 'key')) !== null && _get !== void 0 ? _get : index);\n\n      if (reactIs.isFragment(node)) {\n        acc.push.apply(acc, _toConsumableArray(recur(node.props.children, nodeKeys)));\n      } else if (isValidElement(node)) {\n        acc.push(cloneElement(node, {\n          key: nodeKeys.join('.')\n        }));\n      } else if (typeof node === 'string' || typeof node === 'number') {\n        acc.push(node);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return recur(children);\n}\n\nvar INITIAL_INDEX$1 = -1;\n\nfunction onKeyboardFocus(props, handler) {\n  var isMouseDown = false;\n  return {\n    onFocus: function onFocus(evt) {\n      var _props$onFocus;\n\n      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, evt);\n\n      if (!isMouseDown) {\n        handler(evt);\n      }\n    },\n    onMouseDown: function onMouseDown(evt) {\n      var _props$onMouseDown;\n\n      (_props$onMouseDown = props.onMouseDown) === null || _props$onMouseDown === void 0 ? void 0 : _props$onMouseDown.call(props, evt);\n      isMouseDown = true;\n    },\n    onMouseUp: function onMouseUp(evt) {\n      var _props$onMouseUp;\n\n      (_props$onMouseUp = props.onMouseUp) === null || _props$onMouseUp === void 0 ? void 0 : _props$onMouseUp.call(props, evt);\n      isMouseDown = false;\n    }\n  };\n}\n\nvar isNavigableItem = function isNavigableItem(node) {\n  return isComponent('ListItem')(node) && isClickable(node.props);\n};\n/**\n * This custom hook detects clickable list item in a list and make them navigable with the keyboard.\n *\n * @param  options See {@link Options}\n * @return See {@link Output}\n */\n\n\nvar useInteractiveList = function useInteractiveList(options) {\n  var ref = options.ref,\n      onListItemSelected = options.onListItemSelected,\n      onListItemNavigated = options.onListItemNavigated;\n  var items = useMemo(function () {\n    return flattenChildren(options.items);\n  }, [options.items]);\n\n  var _useState = useState(INITIAL_INDEX$1),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeItemIndex = _useState2[0],\n      setActiveItemIndex = _useState2[1]; // Attach listeners to the list.\n\n\n  useEffect(function () {\n    var listElement = ref.current;\n\n    if (!listElement) {\n      return undefined;\n    }\n    /**\n     * This function calculates the next index in the list to be active\n     * @param  index current index\n     * @param  code  key code pressed\n     * @return next index\n     */\n\n\n    var getNextIndex = function getNextIndex(index, key) {\n      switch (key) {\n        case 'ArrowDown':\n          return index + 1 < items.length ? index + 1 : 0;\n\n        case 'ArrowUp':\n          return index - 1 >= 0 ? index - 1 : items.length - 1;\n\n        default:\n          return INITIAL_INDEX$1;\n      }\n    };\n    /**\n     * Resets the active index to the initial state\n     */\n\n\n    var resetActiveIndex = function resetActiveIndex() {\n      setActiveItemIndex(INITIAL_INDEX$1);\n    };\n    /**\n     * Handles navigation with the arrows using the keyboard\n     * @param evt Key event\n     */\n\n\n    var onArrowPressed = function onArrowPressed(evt) {\n      var key = evt.key;\n\n      if (key !== 'ArrowUp' && key !== 'ArrowDown') {\n        return;\n      }\n\n      var nextIndex = activeItemIndex;\n      var iterations = 0; // Move to next navigable item.\n\n      do {\n        nextIndex = getNextIndex(nextIndex, key);\n        iterations += 1;\n      } while (nextIndex !== INITIAL_INDEX$1 && nextIndex !== activeItemIndex && !isNavigableItem(items[nextIndex]) && iterations < items.length);\n\n      setActiveItemIndex(nextIndex);\n      evt.preventDefault();\n      evt.stopPropagation();\n      onListItemNavigated === null || onListItemNavigated === void 0 ? void 0 : onListItemNavigated(nextIndex, get(items, [nextIndex, 'key']));\n    };\n    /**\n     * Reset active list item index when focusing outside the list.\n     * @param evt Focus out event\n     */\n\n\n    var onFocusOut = function onFocusOut(evt) {\n      if (!evt.relatedTarget || !listElement.contains(evt.relatedTarget)) {\n        resetActiveIndex();\n      }\n    };\n\n    listElement.addEventListener('focusout', onFocusOut);\n    listElement.addEventListener('keydown', onArrowPressed);\n    return function () {\n      listElement.removeEventListener('focusout', onFocusOut);\n      listElement.removeEventListener('keydown', onArrowPressed);\n    };\n  }, [ref, activeItemIndex, items, onListItemNavigated]);\n  return useMemo(function () {\n    var hasClickableItem = false;\n    var transformedItems = items.map(function (item, index) {\n      var _item$props$isHighlig; // Ignore if list not clickable or item is not a simple list item.\n\n\n      if (!isNavigableItem(item)) {\n        return item;\n      }\n\n      hasClickableItem = true;\n      var isHighlighted = index === activeItemIndex; // Clone list item: inject ref, add tab index and active state.\n\n      return cloneElement(item, _objectSpread2({}, item.props, {\n        isHighlighted: (_item$props$isHighlig = item.props.isHighlighted) !== null && _item$props$isHighlig !== void 0 ? _item$props$isHighlig : isHighlighted,\n        linkRef: mergeRefs(item.props.linkRef, function (element) {\n          if (isHighlighted) {\n            element === null || element === void 0 ? void 0 : element.focus();\n          }\n        }),\n        onItemSelected: function onItemSelected(evt) {\n          var _item$props$onItemSel, _item$props;\n\n          (_item$props$onItemSel = (_item$props = item.props).onItemSelected) === null || _item$props$onItemSel === void 0 ? void 0 : _item$props$onItemSel.call(_item$props);\n          onListItemSelected === null || onListItemSelected === void 0 ? void 0 : onListItemSelected(index, item.key, evt);\n        }\n      }, onKeyboardFocus(item.props, function () {\n        setActiveItemIndex(index);\n      })));\n    });\n    return {\n      items: transformedItems,\n      hasClickableItem: hasClickableItem\n    };\n  }, [items, activeItemIndex, onListItemSelected]);\n};\n/**\n * Defines the props of the component.\n */\n\n/**\n * Component display name.\n */\n\n\nvar COMPONENT_NAME$1 = 'List';\n/**\n * Component default class name and class prefix.\n */\n\nvar CLASSNAME$1 = getRootClassName(COMPONENT_NAME$1);\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\n/**\n * List component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\n\nvar InternalList = forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      isClickable = props.isClickable,\n      itemPadding = props.itemPadding,\n      onListItemSelected = props.onListItemSelected,\n      forwardedProps = _objectWithoutProperties(props, [\"children\", \"className\", \"isClickable\", \"itemPadding\", \"onListItemSelected\"]);\n\n  var listElementRef = useRef(null);\n\n  var _useInteractiveList = useInteractiveList({\n    items: children,\n    ref: listElementRef,\n    onListItemSelected: onListItemSelected\n  }),\n      items = _useInteractiveList.items,\n      hasClickableItem = _useInteractiveList.hasClickableItem;\n\n  var clickable = hasClickableItem || isClickable;\n  return React.createElement(\"ul\", _extends({}, forwardedProps, {\n    className: classnames(className, handleBasicClasses({\n      prefix: CLASSNAME$1,\n      itemPadding: itemPadding !== null && itemPadding !== void 0 ? itemPadding : clickable ? Size.big : undefined\n    })),\n    tabIndex: clickable ? 0 : -1,\n    ref: mergeRefs(ref, listElementRef)\n  }), items);\n});\nInternalList.displayName = COMPONENT_NAME$1;\nInternalList.className = CLASSNAME$1;\nvar List = Object.assign(InternalList, {\n  useKeyboardListNavigation: useKeyboardListNavigation\n});\nexport { List as L, ListItem as a, isClickable as i };","map":{"version":3,"sources":["../../../src/hooks/useKeyboardListNavigation.tsx","../../../src/components/list/ListItem.tsx","../../../node_modules/react-is/cjs/react-is.production.min.js","../../../node_modules/react-is/cjs/react-is.development.js","../../../node_modules/react-is/index.js","../../../src/utils/flattenChildren.ts","../../../src/components/list/useInteractiveList.tsx","../../../src/components/list/List.tsx"],"names":["INITIAL_INDEX","useKeyboardListNavigation","keepFocusAfterSelection","initialIndex","preventTabOnEnteredValue","activeItemIndex","setActiveItemIndex","useState","calculateActiveIndex","items","resetActiveIndex","preventDefaultAndStopPropagation","evt","onArrowPressed","key","nextActiveIndex","selectedItem","onListItemNavigated","onBackspaceKeyPressed","onBackspacePressed","onEnterKeyPressed","onListItemSelected","value","get","onEnterPressed","onTabKeyPressed","eventsForKeyPressed","ArrowDown","Tab","ArrowUp","Enter","Backspace","onKeyboardNavigation","handler","useEffect","currentElement","ref","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","size","Size","regular","linkProps","onItemSelected","isEmpty","ListItem","forwardRef","after","before","children","className","isHighlighted","isSelected","linkAs","linkRef","forwardedProps","props","onKeyDown","useMemo","content","classNames","handleBasicClasses","prefix","renderLink","tabIndex","role","undefined","onClick","require$$0","require$$1","keys","nodeKeys","isFragment","acc","recur","node","isValidElement","cloneElement","isMouseDown","onFocus","onMouseDown","onMouseUp","isNavigableItem","isComponent","isClickable","useInteractiveList","options","flattenChildren","listElement","getNextIndex","index","nextIndex","iterations","onFocusOut","hasClickableItem","transformedItems","item","mergeRefs","element","onKeyboardFocus","InternalList","itemPadding","listElementRef","useRef","clickable","List"],"mappings":"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","sourcesContent":["import { RefObject, SetStateAction, useEffect, useState } from 'react';\n\nimport get from 'lodash/get';\n\ntype Listener = (evt: KeyboardEvent) => void;\n\ninterface UseKeyboardListNavigationType {\n    /** the current active index */\n    activeItemIndex: number;\n    /** callback to be used when a key is pressed. usually used with the native prop `onKeyDown` */\n    onKeyboardNavigation: Listener;\n    /** Resets the active index to the initial state */\n    resetActiveIndex(): void;\n    /** Sets the active index to a given value */\n    setActiveItemIndex(value: SetStateAction<number>): void;\n}\n\nexport type useKeyboardListNavigationType = <I>(\n    items: I[],\n    ref: RefObject<HTMLElement>,\n    onListItemSelected: (itemSelected: I) => void,\n    onListItemNavigated?: (itemSelected: I) => void,\n    onEnterPressed?: (itemSelected: string) => void,\n    onBackspacePressed?: Listener,\n    keepFocusAfterSelection?: boolean,\n    initialIndex?: number,\n    preventTabOnEnteredValue?: boolean,\n) => UseKeyboardListNavigationType;\n\nconst INITIAL_INDEX = -1;\n\n/**\n * This custom hook provides the necessary set of functions and values to properly navigate\n * a list using the keyboard.\n *\n * @param  items                    the list of items that will be navigated using the keyboard.\n * @param  ref                      A reference to the element that is controlling the navigation.\n * @param  onListItemSelected       callback to be executed when the ENTER key is pressed on an item.\n * @param  onListItemNavigated      callback to be executed when the Arrow keys are pressed.\n * @param  onEnterPressed           callback to be executed when the ENTER key is pressed.\n * @param  onBackspacePressed       callback to be executed when the BACKSPACE key is pressed.\n * @param  keepFocusAfterSelection  determines whether after selecting an item, the focus should be maintained on the current target or not.\n * @param  initialIndex             where should the navigation start from. it defaults to `-1`, so the first item navigated is the item on position `0`.\n * @param  preventTabOnEnteredValue determines whether upon TAB, if there is a value entered, the event is prevented or not.\n * @return useKeyboardListNavigation helpers.\n */\nexport const useKeyboardListNavigation: useKeyboardListNavigationType = (\n    items,\n    ref,\n    onListItemSelected,\n    onListItemNavigated,\n    onEnterPressed,\n    onBackspacePressed,\n    keepFocusAfterSelection = false,\n    initialIndex = INITIAL_INDEX,\n    preventTabOnEnteredValue = true,\n) => {\n    const [activeItemIndex, setActiveItemIndex] = useState(initialIndex);\n\n    /**\n     * This function calculates the next index in the list to be highlighted\n     * @param key - key code pressed\n     * @return next active index\n     */\n    const calculateActiveIndex = (key: string): number => {\n        switch (key) {\n            case 'ArrowDown':\n                return activeItemIndex + 1 < items.length ? activeItemIndex + 1 : 0;\n            case 'ArrowUp':\n                return activeItemIndex - 1 >= 0 ? activeItemIndex - 1 : items.length - 1;\n            default:\n                return initialIndex;\n        }\n    };\n\n    /**\n     * Resets the active index to the initial state\n     */\n    const resetActiveIndex = () => {\n        setActiveItemIndex(initialIndex);\n    };\n\n    /**\n     * Prevents the default event and stops the propagation of said event\n     * @param evt - key pressed event\n     */\n    const preventDefaultAndStopPropagation: Listener = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n    };\n\n    /**\n     * Handles navigation with the arrows using the keyboard\n     * @param evt - key pressed event\n     */\n    const onArrowPressed: Listener = (evt) => {\n        const { key } = evt;\n        const nextActiveIndex = calculateActiveIndex(key);\n        setActiveItemIndex(nextActiveIndex);\n        preventDefaultAndStopPropagation(evt);\n        if (onListItemNavigated) {\n            const selectedItem = items[nextActiveIndex];\n            onListItemNavigated(selectedItem);\n        }\n    };\n\n    /**\n     * Handles the event when the backspace key is pressed\n     * @param evt - key pressed event\n     */\n    const onBackspaceKeyPressed: Listener = (evt) => {\n        if (onBackspacePressed) {\n            onBackspacePressed(evt);\n        }\n    };\n\n    /**\n     * Handles when the ENTER key is pressed\n     * @param evt - key pressed event\n     */\n    const onEnterKeyPressed: Listener = (evt) => {\n        if (!onListItemSelected) {\n            return;\n        }\n\n        preventDefaultAndStopPropagation(evt);\n\n        if (!keepFocusAfterSelection) {\n            (evt.currentTarget as HTMLElement).blur();\n        }\n\n        const selectedItem = items[activeItemIndex];\n\n        if (selectedItem) {\n            onListItemSelected(selectedItem);\n            resetActiveIndex();\n        } else if (activeItemIndex === initialIndex && onEnterPressed) {\n            const value = get(evt, 'target.value');\n            onEnterPressed(value);\n            resetActiveIndex();\n        }\n    };\n\n    /**\n     * Handles when the TAB key is pressed\n     * @param evt - key pressed event\n     */\n    const onTabKeyPressed: Listener = (evt) => {\n        const value = get(evt, 'target.value');\n\n        if (preventTabOnEnteredValue && value && value.length > 0) {\n            preventDefaultAndStopPropagation(evt);\n        }\n    };\n\n    /**\n     * In order to make it easier in the future to add new events depending on the key\n     * a map was created to add these handlers. In the future, if there is another event\n     * that we need to manage depending on a specific key, we just need to add the key code\n     * here, and as a value, the handler for said key.\n     */\n    const eventsForKeyPressed: Record<string, Listener> = {\n        ArrowDown: onArrowPressed,\n        Tab: onTabKeyPressed,\n        ArrowUp: onArrowPressed,\n        Enter: onEnterKeyPressed,\n        Backspace: onBackspaceKeyPressed,\n    };\n\n    /**\n     * Calculates the next active item index depending on the key pressed.\n     * If the key pressed was ENTER, the function executes the callback `onListItemSelected`\n     * and resets the active index, since an item was selected.\n     * @param evt - key pressed or key down event\n     */\n    const onKeyboardNavigation: Listener = (evt) => {\n        const { key } = evt;\n        const handler = eventsForKeyPressed[key];\n\n        if (handler) {\n            handler(evt);\n        }\n    };\n\n    useEffect(() => {\n        const { current: currentElement } = ref;\n        if (!currentElement) {\n            return undefined;\n        }\n        currentElement.addEventListener('focus', resetActiveIndex);\n        currentElement.addEventListener('keydown', onKeyboardNavigation);\n        return () => {\n            currentElement.removeEventListener('focus', resetActiveIndex);\n            currentElement.removeEventListener('keydown', onKeyboardNavigation);\n        };\n    });\n\n    return {\n        activeItemIndex,\n        onKeyboardNavigation,\n        resetActiveIndex,\n        setActiveItemIndex,\n    };\n};\n","import React, { forwardRef, ReactNode, Ref, SyntheticEvent, useMemo } from 'react';\n\nimport classNames from 'classnames';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { ListProps, Size } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses, onEnterPressed } from '@lumx/react/utils';\nimport { renderLink } from '@lumx/react/utils/renderLink';\n\nexport type ListItemSize = Extract<Size, 'tiny' | 'regular' | 'big' | 'huge'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface ListItemProps extends GenericProps {\n    /** A component to be rendered after the content. */\n    after?: ReactNode;\n    /** A component to be rendered before the content. */\n    before?: ReactNode;\n    /** Content. */\n    children: string | ReactNode;\n    /** Whether the list item should be highlighted or not. */\n    isHighlighted?: boolean;\n    /** Whether the component is selected or not. */\n    isSelected?: boolean;\n    /** Reference to the <li> element. */\n    listItemRef?: Ref<HTMLLIElement>;\n    /** Custom react component for the link (can be used to inject react router Link). */\n    linkAs?: 'a' | any;\n    /** Props that will be passed on to the Link */\n    linkProps?: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\n    /** Reference to the link element. */\n    linkRef?: Ref<HTMLAnchorElement>;\n    /** Size variant. */\n    size?: ListItemSize;\n    /** On selected callback. */\n    onItemSelected?(evt: SyntheticEvent): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ListItem';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ListProps> = {\n    size: Size.regular,\n};\n\n/**\n * Check if the list item is clickable.\n * @return `true` if the list item is clickable; `false` otherwise.\n */\nexport function isClickable({ linkProps, onItemSelected }: Partial<ListItemProps>): boolean {\n    return !isEmpty(linkProps?.href) || !!onItemSelected;\n}\n\n/**\n * ListItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ListItem: Comp<ListItemProps, HTMLLIElement> = forwardRef((props, ref) => {\n    const {\n        after,\n        before,\n        children,\n        className,\n        isHighlighted,\n        isSelected,\n        linkAs,\n        linkProps = {},\n        linkRef,\n        onItemSelected,\n        size,\n        ...forwardedProps\n    } = props;\n    const onKeyDown = useMemo(() => (onItemSelected ? onEnterPressed(onItemSelected as any) : undefined), [\n        onItemSelected,\n    ]);\n\n    const content = (\n        <>\n            {before && <div className={`${CLASSNAME}__before`}>{before}</div>}\n            <div className={`${CLASSNAME}__content`}>{children}</div>\n            {after && <div className={`${CLASSNAME}__after`}>{after}</div>}\n        </>\n    );\n\n    return (\n        <li\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    size,\n                }),\n            )}\n        >\n            {isClickable({ linkProps, onItemSelected }) ? (\n                /* Clickable list item */\n                renderLink(\n                    {\n                        linkAs,\n                        tabIndex: 0,\n                        role: onItemSelected ? 'button' : undefined,\n                        ...linkProps,\n                        className: classNames(\n                            handleBasicClasses({\n                                prefix: `${CLASSNAME}__link`,\n                                isHighlighted,\n                                isSelected,\n                            }),\n                        ),\n                        onClick: onItemSelected,\n                        onKeyDown,\n                        ref: linkRef,\n                    },\n                    content,\n                )\n            ) : (\n                /* Non clickable list item */\n                <div className={`${CLASSNAME}__wrapper`}>{content}</div>\n            )}\n        </li>\n    );\n});\nListItem.displayName = COMPONENT_NAME;\nListItem.className = CLASSNAME;\nListItem.defaultProps = DEFAULT_PROPS;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import get from 'lodash/get';\nimport { Children, Key, ReactChild, ReactNode, cloneElement, isValidElement } from 'react';\nimport { isFragment } from 'react-is';\n\n/**\n * Flatten list of react nodes removing fragments and adding keys.\n * based on: https://github.com/grrowl/react-keyed-flatten-children/blob/5d421644a449765ddd62b659946196b4b5d7b135/index.ts\n *\n * @param  children React nodes to flatten.\n * @return Flattened react nodes.\n */\nexport function flattenChildren(children: ReactNode) {\n    function recur(nodes: ReactNode, keys: Key[] = []) {\n        return Children.toArray(nodes).reduce((acc: ReactChild[], node, index) => {\n            const nodeKeys = keys.concat(get(node, 'key') ?? index);\n            if (isFragment(node)) {\n                acc.push(...recur(node.props.children, nodeKeys));\n            } else if (isValidElement(node)) {\n                acc.push(cloneElement(node, { key: nodeKeys.join('.') }));\n            } else if (typeof node === 'string' || typeof node === 'number') {\n                acc.push(node);\n            }\n            return acc;\n        }, []);\n    }\n    return recur(children);\n}\n","import { ListItemProps } from '@lumx/react';\nimport { isClickable } from '@lumx/react/components/list/ListItem';\n\nimport { isComponent } from '@lumx/react/utils';\nimport { flattenChildren } from '@lumx/react/utils/flattenChildren';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\nimport get from 'lodash/get';\nimport {\n    cloneElement,\n    Key,\n    ReactElement,\n    ReactNode,\n    RefObject,\n    SyntheticEvent,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\n\ntype Listener = (evt: KeyboardEvent) => void;\n\ninterface Options {\n    /** List of items to navigate on. */\n    items: ReactNode[] | ReactNode;\n    /** Reference to the list-like element controlling the navigation. */\n    ref: RefObject<HTMLElement>;\n\n    /**\n     * On list item navigated callback (triggered on ARROW key navigation).\n     *\n     * @param index Index of the navigated item among the sibling items.\n     * @param key   React key of the navigated item.\n     */\n    onListItemNavigated?(index: number, key: Key | null): void;\n\n    /**\n     * On list item selected callback (via ENTER key or click).\n     *\n     * @param index Index of the selected item among the sibling items.\n     * @param key   React key of the selected item.\n     * @param evt   Source event (either mouse or keyboard event).\n     */\n    onListItemSelected?(index: number, key: Key | null, evt: SyntheticEvent): void;\n}\n\ninterface Output {\n    /** List of items transformed to accommodate keyboard navigation. */\n    items: ReactNode[];\n    /** Whether the list contains clickable items or not. */\n    hasClickableItem: boolean;\n}\n\nexport type useInteractiveList = (options: Options) => Output;\n\nconst INITIAL_INDEX = -1;\n\nfunction onKeyboardFocus(props: any, handler: (evt: FocusEvent) => void) {\n    let isMouseDown = false;\n    return {\n        onFocus(evt: FocusEvent) {\n            props.onFocus?.(evt);\n            if (!isMouseDown) {\n                handler(evt);\n            }\n        },\n        onMouseDown(evt: MouseEvent) {\n            props.onMouseDown?.(evt);\n            isMouseDown = true;\n        },\n        onMouseUp(evt: MouseEvent) {\n            props.onMouseUp?.(evt);\n            isMouseDown = false;\n        },\n    };\n}\n\nconst isNavigableItem = (node: ReactNode): node is ReactElement => {\n    return isComponent('ListItem')(node) && isClickable(node.props);\n};\n\n/**\n * This custom hook detects clickable list item in a list and make them navigable with the keyboard.\n *\n * @param  options See {@link Options}\n * @return See {@link Output}\n */\nexport const useInteractiveList: useInteractiveList = (options) => {\n    const { ref, onListItemSelected, onListItemNavigated } = options;\n    const items = useMemo(() => flattenChildren(options.items), [options.items]);\n    const [activeItemIndex, setActiveItemIndex] = useState(INITIAL_INDEX);\n\n    // Attach listeners to the list.\n    useEffect(() => {\n        const { current: listElement } = ref;\n        if (!listElement) {\n            return undefined;\n        }\n\n        /**\n         * This function calculates the next index in the list to be active\n         * @param  index current index\n         * @param  code  key code pressed\n         * @return next index\n         */\n        const getNextIndex = (index: number, key: string): number => {\n            switch (key) {\n                case 'ArrowDown':\n                    return index + 1 < items.length ? index + 1 : 0;\n                case 'ArrowUp':\n                    return index - 1 >= 0 ? index - 1 : items.length - 1;\n                default:\n                    return INITIAL_INDEX;\n            }\n        };\n\n        /**\n         * Resets the active index to the initial state\n         */\n        const resetActiveIndex = () => {\n            setActiveItemIndex(INITIAL_INDEX);\n        };\n\n        /**\n         * Handles navigation with the arrows using the keyboard\n         * @param evt Key event\n         */\n        const onArrowPressed: Listener = (evt) => {\n            const { key } = evt;\n            if (key !== 'ArrowUp' && key !== 'ArrowDown') {\n                return;\n            }\n\n            let nextIndex = activeItemIndex;\n            let iterations = 0;\n\n            // Move to next navigable item.\n            do {\n                nextIndex = getNextIndex(nextIndex, key);\n                iterations += 1;\n            } while (\n                nextIndex !== INITIAL_INDEX &&\n                nextIndex !== activeItemIndex &&\n                !isNavigableItem(items[nextIndex] as any) &&\n                iterations < items.length\n            );\n\n            setActiveItemIndex(nextIndex);\n            evt.preventDefault();\n            evt.stopPropagation();\n            onListItemNavigated?.(nextIndex, get(items, [nextIndex, 'key']));\n        };\n\n        /**\n         * Reset active list item index when focusing outside the list.\n         * @param evt Focus out event\n         */\n        const onFocusOut = (evt: FocusEvent) => {\n            if (!evt.relatedTarget || !listElement.contains(evt.relatedTarget as any)) {\n                resetActiveIndex();\n            }\n        };\n\n        listElement.addEventListener('focusout', onFocusOut);\n        listElement.addEventListener('keydown', onArrowPressed);\n        return () => {\n            listElement.removeEventListener('focusout', onFocusOut);\n            listElement.removeEventListener('keydown', onArrowPressed);\n        };\n    }, [ref, activeItemIndex, items, onListItemNavigated]);\n\n    return useMemo(() => {\n        let hasClickableItem = false;\n        const transformedItems = items.map((item, index) => {\n            // Ignore if list not clickable or item is not a simple list item.\n            if (!isNavigableItem(item)) {\n                return item;\n            }\n\n            hasClickableItem = true;\n            const isHighlighted = index === activeItemIndex;\n\n            // Clone list item: inject ref, add tab index and active state.\n            return cloneElement<ListItemProps>(item, {\n                ...item.props,\n                isHighlighted: item.props.isHighlighted ?? isHighlighted,\n                linkRef: mergeRefs(item.props.linkRef, (element: any) => {\n                    if (isHighlighted) {\n                        element?.focus();\n                    }\n                }),\n                onItemSelected(evt) {\n                    item.props.onItemSelected?.();\n                    onListItemSelected?.(index, item.key, evt);\n                },\n                ...onKeyboardFocus(item.props, () => {\n                    setActiveItemIndex(index);\n                }),\n            });\n        });\n        return { items: transformedItems, hasClickableItem };\n    }, [items, activeItemIndex, onListItemSelected]);\n};\n","import { Size } from '@lumx/react';\n\nimport { useKeyboardListNavigation } from '@lumx/react/hooks/useKeyboardListNavigation';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\n\nimport classNames from 'classnames';\nimport React, { forwardRef, Key, ReactNode, SyntheticEvent, useRef } from 'react';\nimport { useInteractiveList } from './useInteractiveList';\n\n/**\n * Defines the props of the component.\n */\nexport interface ListProps extends GenericProps {\n    /** List content (should be ListItem, ListSubheader or ListDivider). */\n    children: ReactNode;\n    /**\n     * Whether the list items are clickable.\n     * @deprecated not needed anymore.\n     */\n    isClickable?: boolean;\n    /** Item padding size. */\n    itemPadding?: Extract<Size, 'big' | 'huge'>;\n    /**\n     * On list item selected callback.\n     *\n     * @param key   React key of the selected item.\n     * @param index Index of the selected item among the sibling items.\n     * @param evt   Source event (either mouse or keyboard event).\n     */\n    onListItemSelected?(key: Key, index: number, evt: SyntheticEvent): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'List';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/**\n * List component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nconst InternalList: Comp<ListProps, HTMLUListElement> = forwardRef((props, ref) => {\n    const { children, className, isClickable, itemPadding, onListItemSelected, ...forwardedProps } = props;\n    const listElementRef = useRef<HTMLUListElement>(null);\n\n    const { items, hasClickableItem } = useInteractiveList({\n        items: children,\n        ref: listElementRef,\n        onListItemSelected,\n    });\n    const clickable = hasClickableItem || isClickable;\n\n    return (\n        <ul\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    itemPadding: itemPadding ?? (clickable ? Size.big : undefined),\n                }),\n            )}\n            tabIndex={clickable ? 0 : -1}\n            ref={mergeRefs(ref, listElementRef)}\n        >\n            {items}\n        </ul>\n    );\n});\nInternalList.displayName = COMPONENT_NAME;\nInternalList.className = CLASSNAME;\n\nexport const List = Object.assign(InternalList, { useKeyboardListNavigation });\n"]},"metadata":{},"sourceType":"module"}