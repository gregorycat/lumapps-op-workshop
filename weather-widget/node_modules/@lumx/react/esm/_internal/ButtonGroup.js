import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames } from './getRootClassName.js';
import React, { forwardRef } from 'react';
import 'lodash/isBoolean';
import 'lodash/isEmpty';
import 'lodash/kebabCase';
import 'lodash/noop';

/**
 * Defines the props of the component
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'ButtonGroup';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {};
/**
 * ButtonGroup component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var ButtonGroup = forwardRef(function (props, ref) {
  var children = props.children,
      className = props.className,
      forwardedProps = _objectWithoutProperties(props, ["children", "className"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, CLASSNAME)
  }), children);
});
ButtonGroup.displayName = COMPONENT_NAME;
ButtonGroup.className = CLASSNAME;
ButtonGroup.defaultProps = DEFAULT_PROPS;

export { ButtonGroup as B };
//# sourceMappingURL=ButtonGroup.js.map
