import { Alignment, Theme } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef, useMemo, Children } from 'react';
import { u as uid } from '../index2.js';
import isEmpty from 'lodash/isEmpty';
import { I as InputHelper } from './InputHelper.js';
import { I as InputLabel } from './InputLabel.js';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'Switch';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {
  position: Alignment.left,
  theme: Theme.light
};
/**
 * Switch component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var Switch = forwardRef(function (props, ref) {
  var checked = props.checked,
      children = props.children,
      className = props.className,
      disabled = props.disabled,
      helper = props.helper,
      id = props.id,
      _props$isChecked = props.isChecked,
      isChecked = _props$isChecked === void 0 ? checked : _props$isChecked,
      _props$isDisabled = props.isDisabled,
      isDisabled = _props$isDisabled === void 0 ? disabled : _props$isDisabled,
      name = props.name,
      onChange = props.onChange,
      position = props.position,
      theme = props.theme,
      value = props.value,
      forwardedProps = _objectWithoutProperties(props, ["checked", "children", "className", "disabled", "helper", "id", "isChecked", "isDisabled", "name", "onChange", "position", "theme", "value"]);

  var switchId = useMemo(function () {
    return id || "switch-".concat(uid());
  }, [id]);

  var handleChange = function handleChange(event) {
    if (onChange) {
      onChange(!isChecked, value, name, event);
    }
  };

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      isChecked: isChecked,
      isDisabled: isDisabled,
      position: position,
      theme: theme,
      isUnchecked: !isChecked
    })),
    "aria-disabled": isDisabled
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-wrapper")
  }, React.createElement("input", {
    type: "checkbox",
    role: "switch",
    id: switchId,
    className: "".concat(CLASSNAME, "__input-native"),
    name: name,
    value: value,
    disabled: isDisabled,
    checked: isChecked,
    "aria-checked": Boolean(isChecked),
    onChange: handleChange
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-placeholder")
  }, React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-background")
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-indicator")
  }))), Children.count(children) > 0 && React.createElement("div", {
    className: "".concat(CLASSNAME, "__content")
  }, React.createElement(InputLabel, {
    htmlFor: switchId,
    theme: theme,
    className: "".concat(CLASSNAME, "__label")
  }, children), !isEmpty(helper) && React.createElement(InputHelper, {
    theme: theme,
    className: "".concat(CLASSNAME, "__helper")
  }, helper)));
});
Switch.displayName = COMPONENT_NAME;
Switch.className = CLASSNAME;
Switch.defaultProps = DEFAULT_PROPS;

export { Switch as S };
//# sourceMappingURL=Switch2.js.map
