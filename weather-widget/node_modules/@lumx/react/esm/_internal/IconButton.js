import { Emphasis, Size, Theme } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, c as _objectSpread2 } from './getRootClassName.js';
import React, { forwardRef } from 'react';
import 'lodash/isBoolean';
import 'lodash/isEmpty';
import 'lodash/kebabCase';
import 'lodash/noop';
import { B as ButtonRoot } from './ButtonRoot.js';
import { I as Icon } from './Icon2.js';
import { T as Tooltip } from './Tooltip2.js';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'IconButton';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {
  emphasis: Emphasis.high,
  size: Size.m,
  theme: Theme.light
};
/**
 * IconButton component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var IconButton = forwardRef(function (props, ref) {
  var emphasis = props.emphasis,
      icon = props.icon,
      label = props.label,
      size = props.size,
      theme = props.theme,
      tooltipProps = props.tooltipProps,
      hideTooltip = props.hideTooltip,
      forwardedProps = _objectWithoutProperties(props, ["emphasis", "icon", "label", "size", "theme", "tooltipProps", "hideTooltip"]);

  return React.createElement(Tooltip, _extends({
    label: hideTooltip ? '' : label
  }, tooltipProps), React.createElement(ButtonRoot, _extends({
    ref: ref
  }, _objectSpread2({
    emphasis: emphasis,
    size: size,
    theme: theme
  }, forwardedProps), {
    "aria-label": label,
    variant: "icon"
  }), React.createElement(Icon, {
    icon: icon
  })));
});
IconButton.displayName = COMPONENT_NAME;
IconButton.className = CLASSNAME;
IconButton.defaultProps = DEFAULT_PROPS;

export { IconButton as I };
//# sourceMappingURL=IconButton.js.map
