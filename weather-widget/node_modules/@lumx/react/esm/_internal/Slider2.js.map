{"version":3,"file":"Slider2.js","sources":["../../../src/hooks/useEventCallback.tsx","../../../src/components/slider/Slider.tsx"],"sourcesContent":["import React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @param fn A function to run\n * @return A React callback\n */\nexport default function useEventCallback(fn: (...args: any[]) => any): (event: any) => any {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((event: any) => ref.current(event), []);\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { forwardRef, SyntheticEvent, useMemo, useRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { InputHelper, InputLabel, Theme } from '@lumx/react';\n\nimport useEventCallback from '@lumx/react/hooks/useEventCallback';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\nimport { uid } from 'uid';\nimport { clamp } from '@lumx/react/utils/clamp';\n\n/**\n * Defines the props of the component.\n */\nexport interface SliderProps extends GenericProps {\n    /** Helper text. */\n    helper?: string;\n    /** Whether the min and max labels should be hidden or not. */\n    hideMinMaxLabel?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Label text. */\n    label?: string;\n    /** Maximum value on the range. */\n    max: number;\n    /** Minimum value of the range. */\n    min: number;\n    /** Native input name property. */\n    name?: string;\n    /** Number of digits in the fractional part of the selected value. */\n    precision?: number;\n    /** Range step value. */\n    steps?: number;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Selected ranged value. */\n    value: number;\n    /** On change callback. */\n    onChange(value: number, name?: string, event?: SyntheticEvent): void;\n    /** On click callback. */\n    onMouseDown?(event: React.SyntheticEvent): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Slider';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<SliderProps> = {\n    precision: 0,\n    steps: 0,\n    theme: Theme.light,\n};\n\n/**\n * Convert a percent value to a value in range min - max.\n *\n * @param percent   Value to convert.\n * @param min       Minimum value.\n * @param max       Maximum value.\n * @param precision Precision.\n * @return Value in range min - max\n */\nconst computeValueFromPercent = (percent: number, min: number, max: number, precision = 0): number =>\n    Number((min + percent * (max - min)).toFixed(precision));\n\n/**\n * Convert a value in range min - max to a percent value.\n *\n * @param value Value to convert.\n * @param min   Minimum value.\n * @param max   Maximum value.\n * @return Value in percent\n */\nconst computePercentFromValue = (value: number, min: number, max: number): number =>\n    Number((value - min) / (max - min));\n\n/**\n * Slider component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Slider: Comp<SliderProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        className,\n        disabled,\n        helper,\n        hideMinMaxLabel,\n        id,\n        isDisabled = disabled,\n        label,\n        max,\n        min,\n        name,\n        onChange,\n        onMouseDown,\n        precision,\n        steps,\n        theme,\n        value,\n        ...forwardedProps\n    } = props;\n    const sliderId = useMemo(() => id || `slider-${uid()}`, [id]);\n    const sliderLabelId = useMemo(() => `label-${sliderId}`, [sliderId]);\n    const sliderRef = useRef<HTMLDivElement>(null);\n\n    // build a lookup array for the steps.\n    const availableSteps = useMemo((): number[] => {\n        if (!steps) return [];\n\n        const available = [0];\n        const percentStep = 1 / ((max - min) / steps);\n        let ptr = 0;\n        while (ptr + percentStep < 1) {\n            ptr += percentStep;\n            available.push(ptr);\n        }\n        return available;\n    }, [steps, min, max]);\n\n    /**\n     * Try to find the closest step to the current slider position.\n     *\n     * @param percentValue Reference value\n     * @return The closest step value\n     */\n    const findClosestStep = (percentValue: number): number => {\n        const closest = availableSteps.reduce(\n            (acc, step) => {\n                const aDst = Math.abs(percentValue - step);\n                if (aDst < acc.dst) {\n                    return { dst: aDst, val: step };\n                }\n                return acc;\n            },\n            { dst: Infinity, val: -1 },\n        );\n        return closest.val;\n    };\n\n    /**\n     * Convert slider's handle position to percent.\n     *\n     * @param event The interaction event\n     * @param slider the slider element\n     * @return The computed percent value\n     */\n    const getPercentValue = (event: React.MouseEvent, slider: HTMLDivElement): number => {\n        const { width, left } = slider.getBoundingClientRect();\n        let percent = (event.pageX - left - window.pageXOffset) / width;\n        percent = clamp(percent, 0, 1);\n        if (steps) {\n            percent = findClosestStep(percent);\n        }\n        return percent;\n    };\n\n    /**\n     * Register a handler for the mouse move event.\n     */\n    const handleMove = useEventCallback((event: React.MouseEvent) => {\n        const { current: slider } = sliderRef;\n        if (!slider || !onChange) return;\n        const newValue = getPercentValue(event, slider);\n        onChange(computeValueFromPercent(newValue, min, max, precision), name, event);\n    });\n\n    /**\n     * Register a handler for the mouse up event.\n     * Clean a all listeners.\n     */\n    const handleEnd = useEventCallback(() => {\n        document.body.removeEventListener('mousemove', handleMove);\n        document.body.removeEventListener('mouseup', handleEnd);\n        document.body.removeEventListener('touchmove', handleMove);\n        document.body.removeEventListener('touchend', handleEnd);\n    });\n\n    /**\n     * Move to the next or previous value (i.e. + or - 10%) or next step\n     * @param previous Should seek the previous value.\n     */\n    const hopToValue = (previous = false) => {\n        const oldPercent = computePercentFromValue(value, min, max);\n        let percent = clamp(oldPercent + (previous ? -0.1 : 0.1), 0, 1);\n        if (steps) {\n            percent = oldPercent + availableSteps[1] * (previous ? -1 : 1);\n            percent = findClosestStep(percent);\n        }\n        if (onChange) {\n            onChange(computeValueFromPercent(percent, min, max, precision), name);\n        }\n    };\n\n    /**\n     * Register a handler for keyboard interactions\n     */\n    const handleKeyDown = useEventCallback((event: React.KeyboardEvent) => {\n        if (event.key === 'ArrowRight') {\n            hopToValue();\n        } else if (event.key === 'ArrowLeft') {\n            hopToValue(true);\n        }\n    });\n\n    /**\n     * Register a handler for the mouseDown event.\n     */\n    const handleMouseDown = useEventCallback((event: React.MouseEvent) => {\n        onMouseDown?.(event);\n\n        const { current: slider } = sliderRef;\n        if (isDisabled || !slider) return;\n        const newValue = getPercentValue(event, slider);\n        if (onChange) {\n            onChange(computeValueFromPercent(newValue, min, max, precision), name, event);\n        }\n\n        document.body.addEventListener('mousemove', handleMove);\n        document.body.addEventListener('mouseup', handleEnd);\n    });\n\n    const percentString = `${computePercentFromValue(value, min, max) * 100}%`;\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({ prefix: CLASSNAME, theme, hasLabel: Boolean(label) }),\n            )}\n            onMouseDown={handleMouseDown}\n            aria-disabled={isDisabled}\n        >\n            {label && (\n                <InputLabel id={sliderLabelId} htmlFor={sliderId} className={`${CLASSNAME}__label`} theme={theme}>\n                    {label}\n                </InputLabel>\n            )}\n\n            {helper && (\n                <InputHelper className={`${CLASSNAME}__helper`} theme={theme}>\n                    {helper}\n                </InputHelper>\n            )}\n\n            <div className={`${CLASSNAME}__ui-wrapper`}>\n                {!hideMinMaxLabel && (\n                    <span className={`${CLASSNAME}__value-label ${CLASSNAME}__value-label--min`}>{min}</span>\n                )}\n                <div className={`${CLASSNAME}__wrapper`} ref={sliderRef}>\n                    <div className={`${CLASSNAME}__track ${CLASSNAME}__track--background`} />\n                    <div\n                        className={`${CLASSNAME}__track ${CLASSNAME}__track--active`}\n                        style={{ width: percentString }}\n                    />\n                    {steps ? (\n                        <div className={`${CLASSNAME}__ticks`}>\n                            {availableSteps.map((step, idx) => (\n                                <div\n                                    key={`tick_${idx}`}\n                                    className={`${CLASSNAME}__tick`}\n                                    style={{ left: `${step * 100}%` }}\n                                />\n                            ))}\n                        </div>\n                    ) : null}\n                    <button\n                        type=\"button\"\n                        aria-labelledby={sliderLabelId}\n                        name={name}\n                        id={sliderId}\n                        className={`${CLASSNAME}__handle`}\n                        style={{ left: percentString }}\n                        onKeyDown={handleKeyDown}\n                        disabled={isDisabled}\n                    />\n                </div>\n                {!hideMinMaxLabel && (\n                    <span className={`${CLASSNAME}__value-label ${CLASSNAME}__value-label--max`}>{max}</span>\n                )}\n            </div>\n        </div>\n    );\n});\nSlider.displayName = COMPONENT_NAME;\nSlider.className = CLASSNAME;\nSlider.defaultProps = DEFAULT_PROPS;\n"],"names":["useEnhancedEffect","window","React","useLayoutEffect","useEffect","useEventCallback","fn","ref","useRef","current","useCallback","event","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","precision","steps","theme","Theme","light","computeValueFromPercent","percent","min","max","Number","toFixed","computePercentFromValue","value","Slider","forwardRef","props","className","disabled","helper","hideMinMaxLabel","id","isDisabled","label","name","onChange","onMouseDown","forwardedProps","sliderId","useMemo","uid","sliderLabelId","sliderRef","availableSteps","available","percentStep","ptr","push","findClosestStep","percentValue","closest","reduce","acc","step","aDst","Math","abs","dst","val","Infinity","getPercentValue","slider","getBoundingClientRect","width","left","pageX","pageXOffset","clamp","handleMove","newValue","handleEnd","document","body","removeEventListener","hopToValue","previous","oldPercent","handleKeyDown","key","handleMouseDown","addEventListener","percentString","classNames","handleBasicClasses","prefix","hasLabel","Boolean","map","idx","displayName","defaultProps"],"mappings":"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"}