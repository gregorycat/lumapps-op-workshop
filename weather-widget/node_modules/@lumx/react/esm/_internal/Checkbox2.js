import { Theme } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef, useMemo } from 'react';
import { e as mdiCheck } from './mdi.js';
import { u as uid } from '../index2.js';
import { I as Icon } from './Icon2.js';
import { I as InputHelper } from './InputHelper.js';
import { I as InputLabel } from './InputLabel.js';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'Checkbox';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {
  theme: Theme.light
};
/**
 * Checkbox component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var Checkbox = forwardRef(function (props, ref) {
  var checked = props.checked,
      className = props.className,
      disabled = props.disabled,
      helper = props.helper,
      id = props.id,
      _props$isChecked = props.isChecked,
      isChecked = _props$isChecked === void 0 ? checked : _props$isChecked,
      _props$isDisabled = props.isDisabled,
      isDisabled = _props$isDisabled === void 0 ? disabled : _props$isDisabled,
      label = props.label,
      name = props.name,
      onChange = props.onChange,
      theme = props.theme,
      value = props.value,
      forwardedProps = _objectWithoutProperties(props, ["checked", "className", "disabled", "helper", "id", "isChecked", "isDisabled", "label", "name", "onChange", "theme", "value"]);

  var inputId = useMemo(function () {
    return id || "".concat(CLASSNAME.toLowerCase(), "-").concat(uid());
  }, [id]);

  var handleChange = function handleChange(event) {
    if (onChange) {
      onChange(!isChecked, value, name, event);
    }
  };

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      isChecked: isChecked,
      isDisabled: isDisabled,
      isUnchecked: !isChecked,
      prefix: CLASSNAME,
      theme: theme
    }))
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-wrapper")
  }, React.createElement("input", {
    type: "checkbox",
    id: inputId,
    className: "".concat(CLASSNAME, "__input-native"),
    tabIndex: isDisabled ? -1 : 0,
    name: name,
    value: value,
    checked: isChecked,
    onChange: handleChange
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-placeholder")
  }, React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-background")
  }), React.createElement("div", {
    className: "".concat(CLASSNAME, "__input-indicator")
  }, React.createElement(Icon, {
    icon: mdiCheck
  })))), React.createElement("div", {
    className: "".concat(CLASSNAME, "__content")
  }, label && React.createElement(InputLabel, {
    htmlFor: inputId,
    className: "".concat(CLASSNAME, "__label"),
    theme: theme
  }, label), helper && React.createElement(InputHelper, {
    className: "".concat(CLASSNAME, "__helper"),
    theme: theme
  }, helper)));
});
Checkbox.displayName = COMPONENT_NAME;
Checkbox.className = CLASSNAME;
Checkbox.defaultProps = DEFAULT_PROPS;

export { Checkbox as C };
//# sourceMappingURL=Checkbox2.js.map
