import { Theme } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses, c as _objectSpread2 } from './getRootClassName.js';
import React, { forwardRef } from 'react';

/**
 * Defines the props of the component.
 */

var DEFAULT_PROPS = {
  theme: Theme.light
};
/**
 * Component display name.
 */

var COMPONENT_NAME = 'SkeletonCircle';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * SkeletonCircle component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var SkeletonCircle = forwardRef(function (props, ref) {
  var className = props.className,
      size = props.size,
      theme = props.theme,
      forwardedProps = _objectWithoutProperties(props, ["className", "size", "theme"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      size: size,
      theme: theme
    }))
  }));
});
SkeletonCircle.displayName = COMPONENT_NAME;
SkeletonCircle.defaultProps = DEFAULT_PROPS;
SkeletonCircle.className = CLASSNAME;

/**
 * Skeleton variants.
 */

var SkeletonRectangleVariant = {
  squared: 'squared',
  rounded: 'rounded',
  pill: 'pill'
};
var DEFAULT_PROPS$1 = {
  theme: Theme.light,
  variant: SkeletonRectangleVariant.squared
};
/**
 * Component display name.
 */

var COMPONENT_NAME$1 = 'SkeletonRectangle';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME$1 = getRootClassName(COMPONENT_NAME$1);
/**
 * SkeletonRectangle component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var SkeletonRectangle = forwardRef(function (props, ref) {
  var aspectRatio = props.aspectRatio,
      className = props.className,
      height = props.height,
      theme = props.theme,
      variant = props.variant,
      width = props.width,
      forwardedProps = _objectWithoutProperties(props, ["aspectRatio", "className", "height", "theme", "variant", "width"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME$1,
      aspectRatio: aspectRatio,
      height: aspectRatio ? undefined : height,
      theme: theme,
      variant: variant,
      width: width
    }))
  }), React.createElement("div", {
    className: "".concat(CLASSNAME$1, "__inner")
  }));
});
SkeletonRectangle.displayName = COMPONENT_NAME$1;
SkeletonRectangle.className = CLASSNAME$1;
SkeletonRectangle.defaultProps = DEFAULT_PROPS$1;

/**
 * Defines the props of the component.
 */

var DEFAULT_PROPS$2 = {
  theme: Theme.light
};
/**
 * Component display name.
 */

var COMPONENT_NAME$2 = 'SkeletonTypography';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME$2 = getRootClassName(COMPONENT_NAME$2);
/**
 * SkeletonTypography component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var SkeletonTypography = forwardRef(function (props, ref) {
  var className = props.className,
      theme = props.theme,
      typography = props.typography,
      width = props.width,
      forwardedProps = _objectWithoutProperties(props, ["className", "theme", "typography", "width"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME$2,
      theme: theme,
      typography: typography
    })),
    style: _objectSpread2({}, forwardedProps.style, {
      width: width
    })
  }), React.createElement("div", {
    className: "".concat(CLASSNAME$2, "__inner")
  }));
});
SkeletonTypography.displayName = COMPONENT_NAME$2;
SkeletonTypography.defaultProps = DEFAULT_PROPS$2;
SkeletonTypography.className = CLASSNAME$2;

export { SkeletonCircle as S, SkeletonRectangleVariant as a, SkeletonRectangle as b, SkeletonTypography as c };
//# sourceMappingURL=SkeletonTypography.js.map
