{"version":3,"file":"SelectMultiple.js","sources":["../../../src/hooks/useListenFocus.tsx","../../../src/components/select/constants.ts","../../../src/components/select/WithSelectContext.tsx","../../../src/components/select/Select.tsx","../../../src/components/select/SelectMultiple.tsx"],"sourcesContent":["import { RefObject, useEffect, useState } from 'react';\n\n/**\n * Listen on element focus to store the focus status.\n */\nexport function useListenFocus(ref: RefObject<HTMLElement>) {\n    const [isFocus, setFocus] = useState(false);\n\n    useEffect(() => {\n        const { current: element } = ref;\n        if (!element) {\n            return undefined;\n        }\n\n        const onFocus = () => setFocus(true);\n        const onBlur = () => setFocus(false);\n        element.addEventListener('focus', onFocus);\n        element.addEventListener('blur', onBlur);\n        return () => {\n            element.removeEventListener('focus', onFocus);\n            element.removeEventListener('blur', onBlur);\n        };\n    }, [ref, setFocus]);\n\n    return isFocus;\n}\n","import { IconButtonProps } from '@lumx/react';\nimport { Theme } from '@lumx/react/components';\nimport { GenericProps, ValueOf } from '@lumx/react/utils';\nimport { ReactNode, SyntheticEvent } from 'react';\n\n/**\n * Select variants.\n */\nexport const SelectVariant = { input: 'input', chip: 'chip' } as const;\nexport type SelectVariant = ValueOf<typeof SelectVariant>;\n\nexport interface CoreSelectProps extends GenericProps {\n    /** Props to pass to the clear button (minus those already set by the Select props). If not specified, the button won't be displayed. */\n    clearButtonProps?: Pick<IconButtonProps, 'label'> &\n        Omit<IconButtonProps, 'label' | 'onClick' | 'icon' | 'emphasis'>;\n    /** Whether the select (input variant) is displayed with error style or not. */\n    hasError?: boolean;\n    /** Error message. */\n    error?: string | ReactNode;\n    /** Helper text. */\n    helper?: string;\n    /** Whether the select should close on click. */\n    closeOnClick?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Whether the component is required or not. */\n    isRequired?: boolean;\n    /** Whether the component is open or not. */\n    isOpen?: boolean;\n    /** Whether the select (input variant) is displayed with valid style or not. */\n    isValid?: boolean;\n    /** Label text. */\n    label?: string;\n    /** Placeholder input text. */\n    placeholder?: string;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Select variant. */\n    variant?: SelectVariant;\n    /** On clear callback. */\n    onClear?(event: SyntheticEvent, value?: string): void;\n    /** On blur callback. */\n    onBlur?(): void;\n    /** On filter text change callback (with 500ms debounce). */\n    onFilter?(): void;\n    /** On input click callback (can be used for dropdown toggle). */\n    onInputClick?(): void;\n    /** On dropdown close callback. */\n    onDropdownClose?(): void;\n    /** On scroll end callback. */\n    onInfiniteScroll?(): void;\n    /** Render value function. Default: Renders the value as a string. */\n    selectedValueRender?(choice: string): ReactNode | string;\n}\n","import React, { Ref, useCallback, useMemo, useRef } from 'react';\n\nimport classNames from 'classnames';\nimport { uid } from 'uid';\n\nimport { Kind, Theme } from '@lumx/react/components';\nimport { Dropdown } from '@lumx/react/components/dropdown/Dropdown';\nimport { InputHelper } from '@lumx/react/components/input-helper/InputHelper';\nimport { Placement } from '@lumx/react/components/popover/Popover';\n\nimport { getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\nimport { useListenFocus } from '@lumx/react/hooks/useListenFocus';\nimport { CoreSelectProps, SelectVariant } from './constants';\n\n/** The display name of the component. */\nconst COMPONENT_NAME = 'Select';\n\n/** The default class name and classes prefix for this component. */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/** The default value of props. */\nexport const DEFAULT_PROPS: Partial<CoreSelectProps> = {\n    theme: Theme.light,\n    variant: SelectVariant.input,\n};\n\nexport const WithSelectContext = (\n    SelectElement: React.FC<any>,\n    {\n        children,\n        className,\n        isMultiple,\n        closeOnClick = !isMultiple,\n        disabled,\n        error,\n        hasError,\n        helper,\n        id,\n        isDisabled = disabled,\n        isEmpty,\n        isOpen,\n        isRequired,\n        isValid,\n        label,\n        onClear,\n        onDropdownClose,\n        onInfiniteScroll,\n        onInputClick,\n        placeholder,\n        theme = DEFAULT_PROPS.theme,\n        value,\n        variant = DEFAULT_PROPS.variant,\n        ...forwardedProps\n    }: CoreSelectProps,\n    ref: Ref<HTMLDivElement>,\n): React.ReactElement => {\n    const selectId = useMemo(() => id || `select-${uid()}`, [id]);\n    const anchorRef = useRef<HTMLElement>(null);\n    const selectRef = useRef<HTMLDivElement>(null);\n    const isFocus = useListenFocus(anchorRef);\n\n    const handleKeyboardNav = useCallback(\n        (evt: React.KeyboardEvent<HTMLElement>) => {\n            if ((evt.key === 'Enter' || evt.key === ' ' || evt.key === 'ArrowDown') && onInputClick) {\n                evt.preventDefault();\n                onInputClick();\n            }\n        },\n        [onInputClick],\n    );\n\n    const onClose = () => {\n        if (onDropdownClose) {\n            onDropdownClose();\n        }\n        anchorRef?.current?.blur();\n    };\n\n    return (\n        <div\n            ref={mergeRefs(ref, selectRef)}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    hasError,\n                    hasLabel: Boolean(label),\n                    hasPlaceholder: Boolean(placeholder),\n                    hasValue: !isEmpty,\n                    isDisabled,\n                    isEmpty,\n                    isFocus,\n                    isOpen,\n                    isValid,\n                    prefix: CLASSNAME,\n                    theme: theme === Theme.light ? Theme.light : Theme.dark,\n                }),\n            )}\n        >\n            <SelectElement\n                {...forwardedProps}\n                anchorRef={anchorRef}\n                aria-disabled={isDisabled}\n                handleKeyboardNav={handleKeyboardNav}\n                hasError={hasError}\n                isDisabled={isDisabled}\n                isEmpty={isEmpty}\n                isRequired={isRequired}\n                isValid={isValid}\n                label={label}\n                placeholder={placeholder}\n                id={selectId}\n                theme={theme}\n                value={value}\n                variant={variant}\n                onClear={onClear}\n                onInputClick={onInputClick}\n            />\n            <Dropdown\n                anchorRef={anchorRef}\n                closeOnClick={closeOnClick}\n                closeOnClickAway\n                closeOnEscape\n                isOpen={!!isOpen}\n                placement={Placement.BOTTOM_START}\n                onClose={onClose}\n                onInfiniteScroll={onInfiniteScroll}\n            >\n                {children}\n            </Dropdown>\n            {hasError && error && (\n                <InputHelper className={`${CLASSNAME}__helper`} kind={Kind.error} theme={theme}>\n                    {error}\n                </InputHelper>\n            )}\n            {helper && (\n                <InputHelper className={`${CLASSNAME}__helper`} theme={theme}>\n                    {helper}\n                </InputHelper>\n            )}\n        </div>\n    );\n};\n","import React, { forwardRef, RefObject } from 'react';\n\nimport classNames from 'classnames';\nimport lodashIsEmpty from 'lodash/isEmpty';\n\nimport { mdiAlertCircle, mdiCheckCircle, mdiCloseCircle, mdiMenuDown } from '@lumx/icons';\n\nimport { Emphasis, Size } from '@lumx/react/components';\nimport { IconButton } from '@lumx/react/components/button/IconButton';\nimport { Chip } from '@lumx/react/components/chip/Chip';\nimport { Icon } from '@lumx/react/components/icon/Icon';\nimport { InputLabel } from '@lumx/react/components/input-label/InputLabel';\n\nimport { Comp, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\nimport { WithSelectContext } from './WithSelectContext';\nimport { CoreSelectProps, SelectVariant } from './constants';\n\n/** Defines the props of the component. */\nexport interface SelectProps extends CoreSelectProps {\n    /** Selected value. */\n    value: string;\n}\n\nexport { SelectVariant };\n\n/** The display name of the component. */\nconst COMPONENT_NAME = 'Select';\n\n/** The default class name and classes prefix for this component. */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/** The default value of props. */\nconst DEFAULT_PROPS: Partial<SelectProps> = {\n    selectedValueRender: (choice) => choice,\n};\n\nconst stopPropagation = (evt: Event) => evt.stopPropagation();\n\n/**\n * Select component.\n */\nconst SelectField: React.FC<SelectProps> = ({\n    anchorRef,\n    clearButtonProps,\n    handleKeyboardNav,\n    hasError,\n    hasInputClear,\n    id,\n    isDisabled,\n    isEmpty,\n    isRequired,\n    isValid,\n    label,\n    onClear,\n    onInputClick,\n    placeholder,\n    selectedValueRender,\n    theme,\n    value,\n    variant,\n    ...forwardedProps\n}) => {\n    return (\n        <>\n            {variant === SelectVariant.input && (\n                <>\n                    {label && (\n                        <div className={`${CLASSNAME}__header`}>\n                            <InputLabel\n                                htmlFor={id}\n                                className={`${CLASSNAME}__label`}\n                                isRequired={isRequired}\n                                theme={theme}\n                            >\n                                {label}\n                            </InputLabel>\n                        </div>\n                    )}\n\n                    {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n                    <div\n                        ref={anchorRef as RefObject<HTMLDivElement>}\n                        id={id}\n                        className={`${CLASSNAME}__wrapper`}\n                        onClick={onInputClick}\n                        onKeyDown={handleKeyboardNav}\n                        tabIndex={isDisabled ? undefined : 0}\n                        aria-disabled={isDisabled || undefined}\n                        {...forwardedProps}\n                    >\n                        <div\n                            className={classNames([\n                                `${CLASSNAME}__input-native`,\n                                isEmpty && placeholder && `${CLASSNAME}__input-native--placeholder`,\n                            ])}\n                        >\n                            {!isEmpty && <span>{selectedValueRender?.(value)}</span>}\n\n                            {isEmpty && placeholder && <span>{placeholder}</span>}\n                        </div>\n\n                        {(isValid || hasError) && (\n                            <div className={`${CLASSNAME}__input-validity`}>\n                                <Icon icon={isValid ? mdiCheckCircle : mdiAlertCircle} size={Size.xxs} />\n                            </div>\n                        )}\n\n                        {hasInputClear && clearButtonProps && (\n                            <IconButton\n                                {...clearButtonProps}\n                                className={`${CLASSNAME}__input-clear`}\n                                icon={mdiCloseCircle}\n                                emphasis={Emphasis.low}\n                                size={Size.s}\n                                theme={theme}\n                                onClick={onClear}\n                                onKeyDown={stopPropagation}\n                            />\n                        )}\n\n                        <div className={`${CLASSNAME}__input-indicator`}>\n                            <Icon icon={mdiMenuDown} size={Size.s} />\n                        </div>\n                    </div>\n                </>\n            )}\n\n            {variant === SelectVariant.chip && (\n                <Chip\n                    id={id}\n                    isSelected={!isEmpty}\n                    isDisabled={isDisabled}\n                    after={<Icon icon={isEmpty ? mdiMenuDown : mdiCloseCircle} />}\n                    onAfterClick={isEmpty ? onInputClick : onClear}\n                    onClick={onInputClick}\n                    ref={anchorRef as RefObject<HTMLAnchorElement>}\n                    theme={theme}\n                    {...forwardedProps}\n                >\n                    {isEmpty && <span>{label}</span>}\n\n                    {!isEmpty && <span>{selectedValueRender?.(value)}</span>}\n                </Chip>\n            )}\n        </>\n    );\n};\n\n/**\n * Select component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Select: Comp<SelectProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const isEmpty = lodashIsEmpty(props.value);\n    const hasInputClear = props.onClear && props.clearButtonProps && !isEmpty;\n\n    return WithSelectContext(\n        SelectField,\n        {\n            ...props,\n            className: classNames(\n                props.className,\n                handleBasicClasses({\n                    hasInputClear,\n                    hasUnique: !props.isEmpty,\n                    prefix: CLASSNAME,\n                }),\n            ),\n            hasInputClear,\n            isEmpty,\n        },\n        ref,\n    );\n});\nSelect.displayName = COMPONENT_NAME;\nSelect.className = CLASSNAME;\nSelect.defaultProps = DEFAULT_PROPS;\nSelect.className = CLASSNAME;\n","import React, { forwardRef, ReactNode, RefObject, SyntheticEvent } from 'react';\n\nimport classNames from 'classnames';\n\nimport { mdiAlertCircle, mdiCheckCircle, mdiClose, mdiCloseCircle, mdiMenuDown } from '@lumx/icons';\n\nimport { Size } from '@lumx/react/components';\nimport { Chip } from '@lumx/react/components/chip/Chip';\nimport { ChipGroup } from '@lumx/react/components/chip/ChipGroup';\nimport { Icon } from '@lumx/react/components/icon/Icon';\nimport { InputLabel } from '@lumx/react/components/input-label/InputLabel';\n\nimport { Comp, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\nimport { WithSelectContext } from './WithSelectContext';\nimport { CoreSelectProps, SelectVariant } from './constants';\n\n/** Defines the props of the component. */\nexport interface SelectMultipleProps extends CoreSelectProps {\n    /** Selected values. */\n    value: string[];\n    /** Selected value render function. Default: Renders the value inside of a Chip. */\n    selectedChipRender?(\n        choice: string,\n        index: number,\n        onClear?: (event: SyntheticEvent, choice: string) => void,\n        isDisabled?: boolean,\n        theme?: any,\n    ): ReactNode | string;\n}\n\n/** The display name of the component. */\nconst COMPONENT_NAME = 'Select';\n\n/** The default class name and classes prefix for this component. */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/** The default value of props. */\nconst DEFAULT_PROPS: Partial<SelectMultipleProps> = {\n    selectedChipRender(choice, index, onClear, isDisabled?, theme?) {\n        const onClick = (event: React.MouseEvent) => onClear && onClear(event, choice);\n        return (\n            <Chip\n                key={index}\n                after={onClear && <Icon icon={mdiClose} size={Size.xxs} />}\n                isDisabled={isDisabled}\n                size={Size.s}\n                onAfterClick={onClick}\n                onClick={onClick}\n                theme={theme}\n            >\n                {choice}\n            </Chip>\n        );\n    },\n    selectedValueRender: (choice) => choice,\n};\n\nexport const SelectMultipleField: React.FC<SelectMultipleProps> = ({\n    anchorRef,\n    handleKeyboardNav,\n    hasError,\n    id,\n    isDisabled,\n    isEmpty,\n    isRequired,\n    isValid,\n    label,\n    onClear,\n    onInputClick,\n    placeholder,\n    selectedChipRender,\n    selectedValueRender,\n    theme,\n    value,\n    variant,\n}) => (\n    <>\n        {variant === SelectVariant.input && (\n            <>\n                {label && (\n                    <div className={`${CLASSNAME}__header`}>\n                        <InputLabel\n                            htmlFor={id}\n                            className={`${CLASSNAME}__label`}\n                            isRequired={isRequired}\n                            theme={theme}\n                        >\n                            {label}\n                        </InputLabel>\n                    </div>\n                )}\n\n                {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n                <div\n                    ref={anchorRef as RefObject<HTMLDivElement>}\n                    id={id}\n                    className={`${CLASSNAME}__wrapper`}\n                    onClick={onInputClick}\n                    onKeyDown={handleKeyboardNav}\n                    tabIndex={isDisabled ? undefined : 0}\n                    aria-disabled={isDisabled || undefined}\n                >\n                    <div className={`${CLASSNAME}__chips`}>\n                        {!isEmpty &&\n                            value.map((val, index) => selectedChipRender?.(val, index, onClear, isDisabled, theme))}\n                    </div>\n\n                    {isEmpty && placeholder && (\n                        <div\n                            className={classNames([\n                                `${CLASSNAME}__input-native`,\n                                `${CLASSNAME}__input-native--placeholder`,\n                            ])}\n                        >\n                            <span>{placeholder}</span>\n                        </div>\n                    )}\n\n                    {(isValid || hasError) && (\n                        <div className={`${CLASSNAME}__input-validity`}>\n                            <Icon icon={isValid ? mdiCheckCircle : mdiAlertCircle} size={Size.xxs} />\n                        </div>\n                    )}\n\n                    <div className={`${CLASSNAME}__input-indicator`}>\n                        <Icon icon={mdiMenuDown} size={Size.s} />\n                    </div>\n                </div>\n            </>\n        )}\n\n        {variant === SelectVariant.chip && (\n            <Chip\n                id={id}\n                isSelected={!isEmpty}\n                isDisabled={isDisabled}\n                after={<Icon icon={isEmpty ? mdiMenuDown : mdiCloseCircle} />}\n                onAfterClick={isEmpty ? onInputClick : onClear}\n                onClick={onInputClick}\n                ref={anchorRef as RefObject<HTMLAnchorElement>}\n                theme={theme}\n            >\n                {isEmpty && <span>{label}</span>}\n\n                {!isEmpty && (\n                    <span>\n                        <span>{selectedValueRender?.(value[0])}</span>\n\n                        {value.length > 1 && <span>&nbsp;+{value.length - 1}</span>}\n                    </span>\n                )}\n            </Chip>\n        )}\n    </>\n);\n\n/**\n * SelectMultiple component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SelectMultiple: Comp<SelectMultipleProps, HTMLDivElement> = forwardRef((props, ref) => {\n    return WithSelectContext(\n        SelectMultipleField,\n        {\n            ...props,\n            className: classNames(\n                props.className,\n                handleBasicClasses({\n                    hasMultiple: !props.isEmpty,\n                    prefix: CLASSNAME,\n                }),\n            ),\n            isEmpty: props.value.length === 0,\n            isMultiple: true,\n        },\n        ref,\n    );\n});\nSelectMultiple.displayName = COMPONENT_NAME;\nSelectMultiple.className = CLASSNAME;\nSelectMultiple.defaultProps = DEFAULT_PROPS;\n"],"names":["useListenFocus","ref","useState","isFocus","setFocus","useEffect","element","current","undefined","onFocus","onBlur","addEventListener","removeEventListener","SelectVariant","input","chip","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","variant","WithSelectContext","SelectElement","children","className","isMultiple","closeOnClick","disabled","error","hasError","helper","id","isDisabled","isEmpty","isOpen","isRequired","isValid","label","onClear","onDropdownClose","onInfiniteScroll","onInputClick","placeholder","value","forwardedProps","selectId","useMemo","uid","anchorRef","useRef","selectRef","handleKeyboardNav","useCallback","evt","key","preventDefault","onClose","blur","mergeRefs","classNames","handleBasicClasses","hasLabel","Boolean","hasPlaceholder","hasValue","prefix","dark","Placement","BOTTOM_START","Kind","selectedValueRender","choice","stopPropagation","SelectField","clearButtonProps","hasInputClear","mdiCheckCircle","mdiAlertCircle","Size","xxs","mdiCloseCircle","Emphasis","low","s","mdiMenuDown","Select","forwardRef","props","lodashIsEmpty","hasUnique","displayName","defaultProps","selectedChipRender","index","onClick","event","mdiClose","SelectMultipleField","map","val","length","SelectMultiple","hasMultiple"],"mappings":"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"}