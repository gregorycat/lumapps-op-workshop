{"version":3,"file":"SkeletonTypography.js","sources":["../../../src/components/skeleton/SkeletonCircle.tsx","../../../src/components/skeleton/SkeletonRectangle.tsx","../../../src/components/skeleton/SkeletonTypography.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { forwardRef } from 'react';\n\nimport { GlobalSize, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface SkeletonCircleProps extends GenericProps {\n    /** Size variant. */\n    size: GlobalSize;\n    /** Theme. */\n    theme?: Theme;\n}\n\nconst DEFAULT_PROPS: Partial<SkeletonCircleProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'SkeletonCircle';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * SkeletonCircle component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SkeletonCircle: Comp<SkeletonCircleProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, size, theme, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, size, theme }))}\n        />\n    );\n});\nSkeletonCircle.displayName = COMPONENT_NAME;\nSkeletonCircle.defaultProps = DEFAULT_PROPS;\nSkeletonCircle.className = CLASSNAME;\n","import classNames from 'classnames';\nimport React, { forwardRef } from 'react';\n\nimport { AspectRatio, GlobalSize, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses, ValueOf } from '@lumx/react/utils';\n\n/**\n * Skeleton variants.\n */\nexport const SkeletonRectangleVariant = { squared: 'squared', rounded: 'rounded', pill: 'pill' } as const;\nexport type SkeletonRectangleVariant = ValueOf<typeof SkeletonRectangleVariant>;\n\n/**\n * Defines the props of the component.\n */\nexport interface SkeletonRectangleProps extends GenericProps {\n    /** Aspect ratio (use with width and not height). */\n    aspectRatio?: Extract<AspectRatio, 'square' | 'horizontal' | 'vertical' | 'wide'>;\n    /** Height size. */\n    height?: GlobalSize;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Border variant. */\n    variant?: SkeletonRectangleVariant;\n    /** Width size. */\n    width?: GlobalSize;\n}\n\nconst DEFAULT_PROPS: Partial<SkeletonRectangleProps> = {\n    theme: Theme.light,\n    variant: SkeletonRectangleVariant.squared,\n};\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'SkeletonRectangle';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * SkeletonRectangle component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SkeletonRectangle: Comp<SkeletonRectangleProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { aspectRatio, className, height, theme, variant, width, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    aspectRatio,\n                    height: aspectRatio ? undefined : height,\n                    theme,\n                    variant,\n                    width,\n                }),\n            )}\n        >\n            <div className={`${CLASSNAME}__inner`} />\n        </div>\n    );\n});\nSkeletonRectangle.displayName = COMPONENT_NAME;\nSkeletonRectangle.className = CLASSNAME;\nSkeletonRectangle.defaultProps = DEFAULT_PROPS;\n","import classNames from 'classnames';\nimport React, { CSSProperties, forwardRef } from 'react';\n\nimport { Theme, Typography } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface SkeletonTypographyProps extends GenericProps {\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Typography variant. */\n    typography: Typography;\n    /** Width CSS property. */\n    width?: CSSProperties['width'];\n}\n\nconst DEFAULT_PROPS: Partial<SkeletonTypographyProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'SkeletonTypography';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * SkeletonTypography component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SkeletonTypography: Comp<SkeletonTypographyProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, theme, typography, width, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme, typography }))}\n            style={{ ...forwardedProps.style, width }}\n        >\n            <div className={`${CLASSNAME}__inner`} />\n        </div>\n    );\n});\nSkeletonTypography.displayName = COMPONENT_NAME;\nSkeletonTypography.defaultProps = DEFAULT_PROPS;\nSkeletonTypography.className = CLASSNAME;\n"],"names":["DEFAULT_PROPS","theme","Theme","light","COMPONENT_NAME","CLASSNAME","getRootClassName","SkeletonCircle","forwardRef","props","ref","className","size","forwardedProps","classNames","handleBasicClasses","prefix","displayName","defaultProps","SkeletonRectangleVariant","squared","rounded","pill","variant","SkeletonRectangle","aspectRatio","height","width","undefined","SkeletonTypography","typography","style"],"mappings":"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"}