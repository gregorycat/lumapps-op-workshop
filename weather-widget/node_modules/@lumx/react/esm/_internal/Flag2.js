import { ColorVariant, Size, Theme, ColorPalette } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';
import { I as Icon } from './Icon2.js';

var COMPONENT_NAME = 'Flag';
var CLASSNAME = getRootClassName(COMPONENT_NAME);
var DEFAULT_PROPS = {
  theme: Theme.light
};
/**
 * Flag component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var Flag = forwardRef(function (props, ref) {
  var label = props.label,
      icon = props.icon,
      color = props.color,
      className = props.className,
      theme = props.theme,
      forwardedProps = _objectWithoutProperties(props, ["label", "icon", "color", "className", "theme"]);

  var flagColor = color || (theme === Theme.light ? ColorPalette.dark : ColorPalette.light);
  return React.createElement("div", _extends({}, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      color: flagColor
    })),
    ref: ref
  }), icon && React.createElement(Icon, {
    icon: icon,
    color: color,
    colorVariant: ColorVariant.D2,
    size: Size.xxs,
    className: "".concat(CLASSNAME, "__icon")
  }), React.createElement("span", {
    className: "".concat(CLASSNAME, "__label")
  }, label));
});
Flag.displayName = COMPONENT_NAME;
Flag.className = CLASSNAME;
Flag.defaultProps = DEFAULT_PROPS;

export { Flag as F };
//# sourceMappingURL=Flag2.js.map
