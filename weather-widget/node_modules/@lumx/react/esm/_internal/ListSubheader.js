import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'ListDivider';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * ListDivider component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var ListDivider = forwardRef(function (props, ref) {
  var className = props.className,
      forwardedProps = _objectWithoutProperties(props, ["className"]);

  return React.createElement("li", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME
    }))
  }));
});
ListDivider.displayName = COMPONENT_NAME;
ListDivider.className = CLASSNAME;

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME$1 = 'ListSubheader';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME$1 = getRootClassName(COMPONENT_NAME$1);
/**
 * ListSubheader component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var ListSubheader = forwardRef(function (props, ref) {
  var children = props.children,
      className = props.className,
      forwardedProps = _objectWithoutProperties(props, ["children", "className"]);

  return React.createElement("li", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME$1
    }))
  }), children);
});
ListSubheader.displayName = COMPONENT_NAME$1;
ListSubheader.className = CLASSNAME$1;

export { ListDivider as L, ListSubheader as a };
//# sourceMappingURL=ListSubheader.js.map
