{"version":3,"file":"ButtonRoot.js","sources":["../../../src/components/button/ButtonRoot.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, DetailedHTMLProps, forwardRef, RefObject } from 'react';\n\nimport isEmpty from 'lodash/isEmpty';\n\nimport classNames from 'classnames';\n\nimport { Color, ColorPalette, Emphasis, Size, Theme } from '@lumx/react';\nimport { CSS_PREFIX } from '@lumx/react/constants';\nimport { Comp, GenericProps, handleBasicClasses } from '@lumx/react/utils';\nimport { renderLink } from '@lumx/react/utils/renderLink';\n\ntype HTMLButtonProps = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\n/**\n * Button size definition.\n */\nexport type ButtonSize = Extract<Size, 's' | 'm'>;\n\nexport interface BaseButtonProps extends GenericProps {\n    /** ARIA button label. */\n    ['aria-label']?: string;\n    /** Color variant. */\n    color?: Color;\n    /** Emphasis variant. */\n    emphasis?: Emphasis;\n    /** Whether or not the button has a background color in low emphasis. */\n    hasBackground?: boolean;\n    /** Native anchor href property. It determines whether the Button will be a <button> or an <a>. */\n    href?: string;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Whether the component is selected or not. */\n    isSelected?: boolean;\n    /** Native button name property. */\n    name?: string;\n    /** Size variant. */\n    size?: ButtonSize;\n    /** Native anchor target property. */\n    target?: '_self' | '_blank' | '_parent' | '_top';\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Native button type. */\n    type?: HTMLButtonProps['type'];\n    /** Custom react component for the link (can be used to inject react router Link). */\n    linkAs?: 'a' | any;\n}\n\nexport interface ButtonRootProps extends BaseButtonProps {\n    variant: 'button' | 'icon';\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ButtonRoot';\n\nexport const BUTTON_WRAPPER_CLASSNAME = `${CSS_PREFIX}-button-wrapper`;\nexport const BUTTON_CLASSNAME = `${CSS_PREFIX}-button`;\n\n/**\n * Render a button wrapper with the ButtonRoot inside.\n *\n * @param  props Component props.\n * @return React element.\n */\nconst renderButtonWrapper: React.FC<ButtonRootProps> = (props) => {\n    const { color, emphasis, variant } = props;\n\n    const adaptedColor =\n        emphasis === Emphasis.low && (color === ColorPalette.light ? ColorPalette.dark : ColorPalette.light);\n\n    const wrapperClassName = classNames(\n        handleBasicClasses({\n            color: adaptedColor,\n            prefix: BUTTON_WRAPPER_CLASSNAME,\n            variant,\n        }),\n    );\n    const buttonProps = { ...props, hasBackground: false };\n\n    return (\n        <div className={wrapperClassName}>\n            {/* eslint-disable-next-line @typescript-eslint/no-use-before-define */}\n            <ButtonRoot {...buttonProps} />\n        </div>\n    );\n};\n\n/**\n * ButtonRoot component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ButtonRoot: Comp<ButtonRootProps, HTMLButtonElement | HTMLAnchorElement> = forwardRef((props, ref) => {\n    const {\n        'aria-label': ariaLabel,\n        children,\n        className,\n        color,\n        disabled,\n        emphasis,\n        hasBackground,\n        href,\n        isDisabled = disabled,\n        isSelected,\n        linkAs,\n        name,\n        size,\n        target,\n        theme,\n        variant,\n        type = 'button',\n        ...forwardedProps\n    } = props;\n\n    const adaptedColor =\n        color ||\n        (emphasis !== Emphasis.high && theme === Theme.dark && ColorPalette.light) ||\n        (emphasis === Emphasis.high && ColorPalette.primary) ||\n        ColorPalette.dark;\n\n    if (hasBackground) {\n        return renderButtonWrapper({ ...props, ref, variant, color: adaptedColor });\n    }\n\n    const buttonClassName = classNames(\n        className,\n        handleBasicClasses({\n            color: adaptedColor,\n            emphasis,\n            isSelected,\n            isDisabled,\n            prefix: BUTTON_CLASSNAME,\n            size,\n            theme: emphasis === Emphasis.high && theme,\n            variant,\n        }),\n    );\n\n    /**\n     * If the linkAs prop is used, we use the linkAs component instead of a <button>.\n     * If there is an href attribute, we display an <a> instead of a <button>.\n     *\n     * However, in any case, if the component is disabled, we returned a <button> since disabled is not compatible with <a>.\n     */\n    if ((linkAs || !isEmpty(props.href)) && !isDisabled) {\n        return renderLink(\n            {\n                linkAs,\n                ...forwardedProps,\n                'aria-label': ariaLabel,\n                href,\n                target,\n                className: buttonClassName,\n                ref: ref as RefObject<HTMLAnchorElement>,\n            },\n            children,\n        );\n    }\n    return (\n        <button\n            {...forwardedProps}\n            disabled={isDisabled}\n            aria-disabled={isDisabled}\n            aria-label={ariaLabel}\n            ref={ref as RefObject<HTMLButtonElement>}\n            className={buttonClassName}\n            name={name}\n            type={\n                // eslint-disable-next-line react/button-has-type\n                type\n            }\n        >\n            {children}\n        </button>\n    );\n});\nButtonRoot.displayName = COMPONENT_NAME;\nButtonRoot.defaultProps = {};\n"],"names":["COMPONENT_NAME","BUTTON_WRAPPER_CLASSNAME","CSS_PREFIX","BUTTON_CLASSNAME","renderButtonWrapper","props","color","emphasis","variant","adaptedColor","Emphasis","low","ColorPalette","light","dark","wrapperClassName","classNames","handleBasicClasses","prefix","buttonProps","hasBackground","ButtonRoot","forwardRef","ref","ariaLabel","children","className","disabled","href","isDisabled","isSelected","linkAs","name","size","target","theme","type","forwardedProps","high","Theme","primary","buttonClassName","isEmpty","renderLink","displayName","defaultProps"],"mappings":"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"}