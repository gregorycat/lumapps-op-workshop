{"version":3,"file":"ProgressTrackerStepPanel.js","sources":["../../../src/components/progress-tracker/ProgressTrackerProvider.tsx","../../../src/components/progress-tracker/ProgressTracker.tsx","../../../src/components/progress-tracker/ProgressTrackerStep.tsx","../../../src/components/progress-tracker/ProgressTrackerStepPanel.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useReducer } from 'react';\nimport { INIT_STATE, TabProviderContext, reducer } from '../tabs/state';\n\nexport interface ProgressTrackerProviderProps {\n    /** Active step index. */\n    activeStepIndex?: number;\n    /** ProgressTrackerProvider children. */\n    children: ReactNode;\n    /** Step panel children should not render if the step panel is hidden. */\n    isLazy?: boolean;\n    /** Activate tabs on focus. */\n    shouldActivateOnFocus?: boolean;\n    /** Step change callback. */\n    onChange?(index: number): void;\n}\n\nconst DEFAULT_PROPS: Partial<ProgressTrackerProviderProps> = {\n    isLazy: INIT_STATE.isLazy,\n    shouldActivateOnFocus: INIT_STATE.shouldActivateOnFocus,\n};\n\n/**\n * This component provides a context in which steps can be defined and linked to their step panel.\n *\n * It does not produce any markup so you can wrap it around any React elements and then split the ProgressTracker and ProgressTrackerPanel\n * components in the react tree.\n *\n * This works exactly as TabProvider so it uses TabProviderContext and tabs state.\n *\n * @param  props React component props.\n * @return React element.\n */\nexport const ProgressTrackerProvider: React.FC<ProgressTrackerProviderProps> = (props) => {\n    const { children, onChange, ...propState } = props;\n    const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n    // On prop state change => dispatch update.\n    useEffect(\n        () => {\n            dispatch({\n                type: 'update',\n                payload: {\n                    ...propState,\n                    activeTabIndex: propState.activeStepIndex || INIT_STATE.activeTabIndex,\n                },\n            });\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [dispatch, ...Object.values(propState)],\n    );\n\n    // On active tab index state change => send update to the onChange.\n    useEffect(\n        () => {\n            if (state === INIT_STATE || !onChange || propState.activeStepIndex === state.activeTabIndex) {\n                return;\n            }\n            onChange(state.activeTabIndex);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [onChange, state.activeTabIndex],\n    );\n\n    return <TabProviderContext.Provider value={[state, dispatch]}>{children}</TabProviderContext.Provider>;\n};\nProgressTrackerProvider.defaultProps = DEFAULT_PROPS;\n","import React, { forwardRef, ReactNode } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\nimport { useRovingTabIndex } from '../../hooks/useRovingTabIndex';\nimport { useTabProviderContextState } from '../tabs/state';\n\n/**\n * Defines the props of the component.\n */\nexport interface ProgressTrackerProps extends GenericProps {\n    /** ARIA label (purpose of the set of steps). */\n    ['aria-label']: string;\n    /** Step list. */\n    children: ReactNode;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ProgressTracker';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ProgressTrackerProps> = {};\n\n/**\n * ProgressTracker component.\n *\n * Implements WAI-ARIA `tablist` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ProgressTracker: Comp<ProgressTrackerProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { 'aria-label': ariaLabel, children, className, ...forwardedProps } = props;\n    const stepListRef = React.useRef(null);\n    useRovingTabIndex({\n        parentRef: stepListRef,\n        elementSelector: '[role=\"tab\"]',\n        keepTabIndex: false,\n        extraDependencies: [children],\n    });\n\n    const state = useTabProviderContextState();\n    const numberOfSteps = state?.ids?.tab?.length || 0;\n    const backgroundPosition: number = numberOfSteps > 0 ? 100 / (numberOfSteps * 2) : 0;\n    const trackPosition: number =\n        numberOfSteps > 0 ? ((100 / (numberOfSteps - 1)) * (state?.activeTabIndex || 0)) / 100 : 0;\n\n    return (\n        <div\n            ref={mergeRefs(ref, stepListRef)}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME }))}\n        >\n            <div className={`${CLASSNAME}__steps`} role=\"tablist\" aria-label={ariaLabel}>\n                {children}\n            </div>\n\n            <div\n                className={`${CLASSNAME}__background-bar`}\n                style={{ left: `${backgroundPosition}%`, right: `${backgroundPosition}%` }}\n            />\n\n            <div\n                className={`${CLASSNAME}__foreground-bar`}\n                style={{\n                    left: `${backgroundPosition}%`,\n                    right: `${backgroundPosition}%`,\n                    transform: `scaleX(${trackPosition})`,\n                }}\n            />\n        </div>\n    );\n});\nProgressTracker.displayName = COMPONENT_NAME;\nProgressTracker.className = CLASSNAME;\nProgressTracker.defaultProps = DEFAULT_PROPS;\n","import React, { FocusEventHandler, forwardRef, KeyboardEventHandler, useCallback } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Icon, InputHelper, InputLabel, Kind, Size } from '@lumx/react';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\nimport { mdiAlertCircle, mdiCheckCircle, mdiRadioboxBlank, mdiRadioboxMarked } from '@lumx/icons';\nimport { useTabProviderContext } from '../tabs/state';\n\n/**\n * Defines the props of the component.\n */\nexport interface ProgressTrackerStepProps extends GenericProps {\n    /** Children are not supported. */\n    children?: never;\n    /** Whether the step should be in error state or not. */\n    hasError?: boolean;\n    /** Helper text. */\n    helper?: string | null;\n    /** Native id property. */\n    id?: string;\n    /** Whether the current step is active or not. */\n    isActive?: boolean;\n    /** Whether the current step is completed or not. */\n    isComplete?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Label text. */\n    label?: string | null;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ProgressTrackerStep';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ProgressTrackerStepProps> = {};\n\n/**\n * ProgressTrackerStep component.\n *\n * Implements WAI-ARIA `tab` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ProgressTrackerStep: Comp<ProgressTrackerStepProps, HTMLButtonElement> = forwardRef((props, ref) => {\n    const {\n        className,\n        disabled,\n        hasError,\n        helper,\n        id,\n        isActive: propIsActive,\n        isComplete,\n        isDisabled = disabled,\n        label,\n        onFocus,\n        onKeyPress,\n        tabIndex = -1,\n        ...forwardedProps\n    } = props;\n    const state = useTabProviderContext('tab', id);\n    const isActive = propIsActive || state?.isActive;\n\n    const changeToCurrentTab = useCallback(() => {\n        if (isDisabled) {\n            return;\n        }\n        state?.changeToTab();\n    }, [isDisabled, state]);\n\n    const handleFocus: FocusEventHandler = useCallback(\n        (event) => {\n            onFocus?.(event);\n            if (state?.shouldActivateOnFocus) {\n                changeToCurrentTab();\n            }\n        },\n        [changeToCurrentTab, onFocus, state?.shouldActivateOnFocus],\n    );\n\n    const handleKeyPress: KeyboardEventHandler = useCallback(\n        (event) => {\n            onKeyPress?.(event);\n            if (event.key !== 'Enter') {\n                return;\n            }\n            changeToCurrentTab();\n        },\n        [changeToCurrentTab, onKeyPress],\n    );\n\n    const getIcon = (): string => {\n        if (isComplete) {\n            return mdiCheckCircle;\n        }\n\n        if (isActive) {\n            return hasError ? mdiAlertCircle : mdiRadioboxMarked;\n        }\n\n        return mdiRadioboxBlank;\n    };\n\n    return (\n        <button\n            ref={ref}\n            {...forwardedProps}\n            type=\"button\"\n            id={state?.tabId}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                    hasError,\n                    isActive,\n                    isClickable: state && !isDisabled,\n                    isComplete,\n                }),\n            )}\n            onClick={changeToCurrentTab}\n            onKeyPress={handleKeyPress}\n            onFocus={handleFocus}\n            role=\"tab\"\n            tabIndex={isActive ? 0 : tabIndex}\n            aria-disabled={isDisabled}\n            aria-selected={isActive}\n            aria-controls={state?.tabPanelId}\n        >\n            <Icon className={`${CLASSNAME}__state`} icon={getIcon()} size={Size.s} />\n\n            <InputLabel htmlFor={state?.tabId || ''} className={`${CLASSNAME}__label`}>\n                {label}\n            </InputLabel>\n\n            {helper && (\n                <InputHelper kind={hasError ? Kind.error : Kind.info} className={`${CLASSNAME}__helper`}>\n                    {helper}\n                </InputHelper>\n            )}\n        </button>\n    );\n});\nProgressTrackerStep.displayName = COMPONENT_NAME;\nProgressTrackerStep.className = CLASSNAME;\nProgressTrackerStep.defaultProps = DEFAULT_PROPS;\n","import { useTabProviderContext } from '@lumx/react/components/tabs/state';\nimport { CSS_PREFIX } from '@lumx/react/constants';\nimport { Comp, GenericProps, handleBasicClasses } from '@lumx/react/utils';\n\nimport classNames from 'classnames';\nimport React, { forwardRef } from 'react';\n\n/**\n * Defines the props of the component.\n */\nexport interface ProgressTrackerStepPanelProps extends GenericProps {\n    /** Native id property. */\n    id?: string;\n    /** Whether the step is active or not. */\n    isActive?: boolean;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'ProgressTrackerStepPanel';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = `${CSS_PREFIX}-step-panel`;\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<ProgressTrackerStepPanelProps> = {};\n\n/**\n * ProgressTrackerStepPanel component.\n *\n * Implements WAI-ARIA `tabpanel` role {@see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#rps_label}\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const ProgressTrackerStepPanel: Comp<ProgressTrackerStepPanelProps, HTMLDivElement> = forwardRef(\n    (props, ref) => {\n        const { children, id, className, isActive: propIsActive, ...forwardedProps } = props;\n\n        const state = useTabProviderContext('tabPanel', id);\n        const isActive = propIsActive || state?.isActive;\n\n        return (\n            <div\n                ref={ref}\n                {...forwardedProps}\n                id={state?.tabPanelId}\n                className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, isActive }))}\n                role=\"tabpanel\"\n                tabIndex={0}\n                aria-labelledby={state?.tabId}\n            >\n                {(!state?.isLazy || isActive) && children}\n            </div>\n        );\n    },\n);\nProgressTrackerStepPanel.displayName = COMPONENT_NAME;\nProgressTrackerStepPanel.className = CLASSNAME;\nProgressTrackerStepPanel.defaultProps = DEFAULT_PROPS;\n"],"names":["DEFAULT_PROPS","isLazy","INIT_STATE","shouldActivateOnFocus","ProgressTrackerProvider","props","children","onChange","propState","useReducer","reducer","state","dispatch","useEffect","type","payload","activeTabIndex","activeStepIndex","Object","values","defaultProps","COMPONENT_NAME","CLASSNAME","getRootClassName","ProgressTracker","forwardRef","ref","ariaLabel","className","forwardedProps","stepListRef","React","useRef","useRovingTabIndex","parentRef","elementSelector","keepTabIndex","extraDependencies","useTabProviderContextState","numberOfSteps","ids","tab","length","backgroundPosition","trackPosition","mergeRefs","classNames","handleBasicClasses","prefix","left","right","transform","displayName","ProgressTrackerStep","disabled","hasError","helper","id","propIsActive","isActive","isComplete","isDisabled","label","onFocus","onKeyPress","tabIndex","useTabProviderContext","changeToCurrentTab","useCallback","changeToTab","handleFocus","event","handleKeyPress","key","getIcon","mdiCheckCircle","mdiAlertCircle","mdiRadioboxMarked","mdiRadioboxBlank","tabId","isClickable","tabPanelId","Size","s","Kind","error","info","CSS_PREFIX","ProgressTrackerStepPanel"],"mappings":"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"}