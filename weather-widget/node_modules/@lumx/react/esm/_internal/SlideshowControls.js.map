{"version":3,"file":"SlideshowControls.js","sources":["../../../src/components/slideshow/constants.ts","../../../src/hooks/useInterval.tsx","../../../src/components/slideshow/Slideshow.tsx","../../../src/components/slideshow/SlideshowItem.tsx","../../../src/components/slideshow/useSwipeNavigate.ts","../../../src/components/slideshow/useKeyNavigate.ts","../../../src/components/slideshow/usePaginationVisibleRange.ts","../../../src/components/slideshow/SlideshowControls.tsx"],"sourcesContent":["/**\n * Autoplay default interval in ms.\n */\nexport const AUTOPLAY_DEFAULT_INTERVAL = 5000;\n\n/**\n * Full width size in percent.\n */\nexport const FULL_WIDTH_PERCENT = 100;\n\n/**\n * Edge from the active index.\n */\nexport const EDGE_FROM_ACTIVE_INDEX = 2;\n\n/**\n * Max number of pagination items.\n */\nexport const PAGINATION_ITEMS_MAX = 5;\n\n/**\n * Size of a pagination item. Used to translate wrapper.\n */\nexport const PAGINATION_ITEM_SIZE = 12;\n","import { useEffect, useRef } from 'react';\n\nimport isFunction from 'lodash/isFunction';\nimport { Callback } from '../utils';\n\n/**\n * Making setInterval Declarative with React Hooks.\n * Credits: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n *\n * @param callback Function called by setInterval.\n * @param     delay    Delay for setInterval.\n */\nexport function useInterval(callback: Callback, delay: number | null): void {\n    const savedCallback = useRef<Callback>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        if (delay === null) return undefined;\n\n        function tick() {\n            if (isFunction(savedCallback.current)) {\n                savedCallback.current();\n            }\n        }\n        const id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport { SlideshowControls, SlideshowControlsProps, Theme } from '@lumx/react';\n\nimport { AUTOPLAY_DEFAULT_INTERVAL, FULL_WIDTH_PERCENT } from '@lumx/react/components/slideshow/constants';\nimport { useInterval } from '@lumx/react/hooks/useInterval';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\n\n/**\n * Defines the props of the component.\n */\nexport interface SlideshowProps extends GenericProps {\n    /** Index of the current slide. */\n    activeIndex?: number;\n    /** Whether the automatic rotation of the slideshow is enabled or not. */\n    autoPlay?: boolean;\n    /** Whether the image has to fill its container height or not. */\n    fillHeight?: boolean;\n    /** Number of slides to group together. */\n    groupBy?: number;\n    /** Interval between each slide when automatic rotation is enabled. */\n    interval?: number;\n    /** Props to pass to the slideshow controls (minus those already set by the Slideshow props). */\n    slideshowControlsProps?: Pick<SlideshowControlsProps, 'nextButtonProps' | 'previousButtonProps'> &\n        Omit<\n            SlideshowControlsProps,\n            | 'activeIndex'\n            | 'onPaginationClick'\n            | 'onNextClick'\n            | 'onPreviousClick'\n            | 'slidesCount'\n            | 'parentRef'\n            | 'theme'\n        >;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Callback when slide changes */\n    onChange?(index: number): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Slideshow';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<SlideshowProps> = {\n    activeIndex: 0,\n    groupBy: 1,\n    interval: AUTOPLAY_DEFAULT_INTERVAL,\n    theme: Theme.light,\n};\n\n/**\n * Slideshow component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Slideshow: Comp<SlideshowProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        activeIndex,\n        autoPlay,\n        children,\n        className,\n        fillHeight,\n        groupBy,\n        interval,\n        onChange,\n        slideshowControlsProps,\n        theme,\n        ...forwardedProps\n    } = props;\n    const [currentIndex, setCurrentIndex] = useState(activeIndex as number);\n    // Use state instead of a ref to make the slideshow controls update directly when the element is set.\n    const [element, setElement] = useState<HTMLDivElement>();\n\n    // Number of slideshow items.\n    const itemsCount = React.Children.count(children);\n    // Number of slides when using groupBy prop.\n    const slidesCount = Math.ceil(itemsCount / Math.min(groupBy as number, itemsCount));\n    // Inline style of wrapper element.\n    const wrapperStyle: CSSProperties = { transform: `translateX(-${FULL_WIDTH_PERCENT * currentIndex}%)` };\n\n    // Change current index to display next slide.\n    const goToNextSlide = useCallback(\n        (loopback = true) => {\n            setCurrentIndex((index) => {\n                if (loopback && index === slidesCount - 1) {\n                    // Loopback to the start.\n                    return 0;\n                }\n                if (index < slidesCount - 1) {\n                    // Next slide.\n                    return index + 1;\n                }\n                return index;\n            });\n        },\n        [slidesCount, setCurrentIndex],\n    );\n\n    // Change current index to display previous slide.\n    const goToPreviousSlide = useCallback(\n        (loopback = true) => {\n            setCurrentIndex((index) => {\n                if (loopback && index === 0) {\n                    // Loopback to the end.\n                    return slidesCount - 1;\n                }\n                if (index > 0) {\n                    // Previous slide.\n                    return index - 1;\n                }\n                return index;\n            });\n        },\n        [slidesCount, setCurrentIndex],\n    );\n\n    // Auto play\n    const [isAutoPlaying, setIsAutoPlaying] = useState(Boolean(autoPlay));\n    // Start\n    useInterval(goToNextSlide, isAutoPlaying && slidesCount > 1 ? (interval as number) : null);\n\n    // Reset current index if it become invalid.\n    useEffect(() => {\n        if (currentIndex > slidesCount - 1) {\n            setCurrentIndex(DEFAULT_PROPS.activeIndex as number);\n        }\n    }, [currentIndex, slidesCount]);\n\n    // Handle click on a bullet to go to a specific slide.\n    const handleControlGotToSlide = useCallback(\n        (index: number) => {\n            setIsAutoPlaying(false);\n\n            if (index >= 0 && index < slidesCount) {\n                setCurrentIndex(index);\n            }\n        },\n        [slidesCount, setCurrentIndex],\n    );\n\n    // Handle click or keyboard event to go to next slide.\n    const handleControlNextSlide = useCallback(\n        (loopback = true) => {\n            setIsAutoPlaying(false);\n            goToNextSlide(loopback);\n        },\n        [goToNextSlide],\n    );\n\n    // Handle click or keyboard event to go to previous slide.\n    const handleControlPreviousSlide = useCallback(\n        (loopback = true) => {\n            setIsAutoPlaying(false);\n            goToPreviousSlide(loopback);\n        },\n        [goToPreviousSlide],\n    );\n\n    // If the activeIndex props changes, update the current slide\n    useEffect(() => {\n        setCurrentIndex(activeIndex as number);\n    }, [activeIndex]);\n\n    // If the slide changes, with autoplay for example, trigger \"onChange\"\n    useEffect(() => {\n        if (!onChange) return;\n        onChange(currentIndex);\n    }, [currentIndex, onChange]);\n\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    return (\n        <div\n            ref={mergeRefs(ref, setElement)}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme }), {\n                [`${CLASSNAME}--fill-height`]: fillHeight,\n                [`${CLASSNAME}--group-by-${groupBy}`]: Boolean(groupBy),\n            })}\n            tabIndex={0}\n        >\n            <div className={`${CLASSNAME}__slides`}>\n                <div className={`${CLASSNAME}__wrapper`} style={wrapperStyle}>\n                    {children}\n                </div>\n            </div>\n\n            {slideshowControlsProps && slidesCount > 1 && (\n                <div className={`${CLASSNAME}__controls`}>\n                    <SlideshowControls\n                        {...slideshowControlsProps}\n                        activeIndex={currentIndex}\n                        onPaginationClick={handleControlGotToSlide}\n                        onNextClick={handleControlNextSlide}\n                        onPreviousClick={handleControlPreviousSlide}\n                        slidesCount={slidesCount}\n                        parentRef={element}\n                        theme={theme}\n                    />\n                </div>\n            )}\n        </div>\n    );\n});\nSlideshow.displayName = COMPONENT_NAME;\nSlideshow.className = CLASSNAME;\nSlideshow.defaultProps = DEFAULT_PROPS;\n","import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport type SlideshowItemProps = GenericProps;\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'SlideshowItem';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * SlideshowItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SlideshowItem: Comp<SlideshowItemProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { className, children, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    prefix: CLASSNAME,\n                }),\n            )}\n        >\n            {children}\n        </div>\n    );\n});\nSlideshowItem.displayName = COMPONENT_NAME;\nSlideshowItem.className = CLASSNAME;\n","import { useEffect } from 'react';\nimport { detectHorizontalSwipe } from '@lumx/core/js/utils';\n\nconst isTouchDevice = () => 'ontouchstart' in window;\n\n/**\n * Listen swipe to navigate left and right.\n */\nexport function useSwipeNavigate(element?: HTMLElement | null, onNext?: () => void, onPrevious?: () => void): void {\n    useEffect(() => {\n        if (!element || !isTouchDevice()) return undefined;\n\n        return detectHorizontalSwipe(element, (swipe) => {\n            const callback = swipe === 'right' ? onPrevious : onNext;\n            callback?.();\n        });\n    }, [onPrevious, onNext, element]);\n}\n","import { useEffect } from 'react';\n\n/**\n * Listen keyboard to navigate left and right.\n */\nexport function useKeyNavigate(element?: HTMLElement | null, onNext?: () => void, onPrevious?: () => void): void {\n    useEffect(() => {\n        if (!element) return undefined;\n        const onKeyNavigate = (evt: KeyboardEvent) => {\n            let callback;\n            if (evt?.key === 'ArrowRight') {\n                callback = onPrevious;\n            } else if (evt?.key === 'ArrowLeft') {\n                callback = onNext;\n            }\n            if (!callback) return;\n\n            callback();\n            evt.preventDefault();\n            evt.stopPropagation();\n        };\n\n        element.addEventListener('keydown', onKeyNavigate);\n        return () => {\n            element.removeEventListener('keydown', onKeyNavigate);\n        };\n    }, [onPrevious, onNext, element]);\n}\n","import { useMemo, useRef } from 'react';\nimport { EDGE_FROM_ACTIVE_INDEX, PAGINATION_ITEMS_MAX } from '@lumx/react/components/slideshow/constants';\n\ntype Range = { min: number; max: number };\n\n/**\n * Calculate the currently visible pagination \"bullet\" range.\n */\nexport function usePaginationVisibleRange(activeIndex: number, slideCount: number): Range {\n    const previousVisibleRangeRef = useRef<Range>();\n    return useMemo(() => {\n        const lastSlide = slideCount - 1;\n        const { current: previousVisibleRange } = previousVisibleRangeRef;\n        let newVisibleRange: Range;\n        if (activeIndex === previousVisibleRange?.max && activeIndex < lastSlide) {\n            newVisibleRange = { min: previousVisibleRange.min + 1, max: previousVisibleRange.max + 1 };\n        } else if (activeIndex === previousVisibleRange?.min && activeIndex > 0) {\n            newVisibleRange = { min: previousVisibleRange.min - 1, max: previousVisibleRange.max - 1 };\n        } else {\n            const deltaItems = PAGINATION_ITEMS_MAX - 1;\n            let min = activeIndex - EDGE_FROM_ACTIVE_INDEX;\n            let max = activeIndex + EDGE_FROM_ACTIVE_INDEX;\n\n            if (activeIndex > lastSlide - EDGE_FROM_ACTIVE_INDEX) {\n                min = lastSlide - deltaItems;\n                max = lastSlide;\n            } else if (activeIndex < deltaItems) {\n                min = 0;\n                max = deltaItems;\n            }\n\n            newVisibleRange = { min, max };\n        }\n        previousVisibleRangeRef.current = newVisibleRange;\n        return newVisibleRange;\n    }, [activeIndex, slideCount]);\n}\n","import React, { forwardRef, RefObject, useCallback, useMemo } from 'react';\n\nimport classNames from 'classnames';\nimport range from 'lodash/range';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@lumx/icons';\nimport { Emphasis, IconButton, IconButtonProps, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { WINDOW } from '@lumx/react/constants';\n\nimport { useSwipeNavigate } from './useSwipeNavigate';\nimport { useKeyNavigate } from './useKeyNavigate';\nimport { PAGINATION_ITEM_SIZE, PAGINATION_ITEMS_MAX } from './constants';\nimport { usePaginationVisibleRange } from './usePaginationVisibleRange';\n\n/**\n * Defines the props of the component.\n */\nexport interface SlideshowControlsProps extends GenericProps {\n    /** Index of the current slide. */\n    activeIndex?: number;\n    /** Props to pass to the next button (minus those already set by the SlideshowControls props). */\n    nextButtonProps: Pick<IconButtonProps, 'label'> &\n        Omit<IconButtonProps, 'label' | 'onClick' | 'icon' | 'emphasis' | 'color'>;\n    /** Reference to the parent element on which we want to listen touch swipe. */\n    parentRef?: RefObject<HTMLDivElement> | HTMLDivElement;\n    /** Props to pass to the previous button (minus those already set by the SlideshowControls props). */\n    previousButtonProps: Pick<IconButtonProps, 'label'> &\n        Omit<IconButtonProps, 'label' | 'onClick' | 'icon' | 'emphasis' | 'color'>;\n    /** Number of slides. */\n    slidesCount: number;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** On next button click callback. */\n    onNextClick?(loopback?: boolean): void;\n    /** On pagination change callback. */\n    onPaginationClick?(index: number): void;\n    /** On previous button click callback. */\n    onPreviousClick?(loopback?: boolean): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'SlideshowControls';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<SlideshowControlsProps> = {\n    activeIndex: 0,\n    theme: Theme.light,\n};\n\n/**\n * SlideshowControls component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const SlideshowControls: Comp<SlideshowControlsProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        activeIndex,\n        className,\n        nextButtonProps,\n        onNextClick,\n        onPaginationClick,\n        onPreviousClick,\n        parentRef,\n        previousButtonProps,\n        slidesCount,\n        theme,\n        ...forwardedProps\n    } = props;\n\n    let parent;\n    if (WINDOW) {\n        // Checking window object to avoid errors in SSR.\n        parent = parentRef instanceof HTMLElement ? parentRef : parentRef?.current;\n    }\n    // Listen to keyboard navigate left & right.\n    useKeyNavigate(parent, onNextClick, onPreviousClick);\n    // Listen to touch swipe navigate left & right.\n    useSwipeNavigate(\n        parent,\n        // Go next without loopback.\n        useCallback(() => onNextClick?.(false), [onNextClick]),\n        // Go previous without loopback.\n        useCallback(() => onPreviousClick?.(false), [onPreviousClick]),\n    );\n\n    // Pagination \"bullet\" range.\n    const visibleRange = usePaginationVisibleRange(activeIndex as number, slidesCount);\n\n    // Inline style of wrapper element.\n    const wrapperStyle = { transform: `translateX(-${PAGINATION_ITEM_SIZE * visibleRange.min}px)` };\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, theme }), {\n                [`${CLASSNAME}--has-infinite-pagination`]: slidesCount > PAGINATION_ITEMS_MAX,\n            })}\n        >\n            <IconButton\n                {...previousButtonProps}\n                icon={mdiChevronLeft}\n                className={`${CLASSNAME}__navigation`}\n                color={theme === Theme.dark ? 'light' : 'dark'}\n                emphasis={Emphasis.low}\n                onClick={onPreviousClick}\n                tabIndex={-1}\n            />\n            <div className={`${CLASSNAME}__pagination`}>\n                <div className={`${CLASSNAME}__pagination-items`} style={wrapperStyle}>\n                    {useMemo(\n                        () =>\n                            range(slidesCount).map((index) => {\n                                const isOnEdge =\n                                    index !== 0 &&\n                                    index !== slidesCount - 1 &&\n                                    (index === visibleRange.min || index === visibleRange.max);\n                                const isActive = activeIndex === index;\n                                const isOutRange = index < visibleRange.min || index > visibleRange.max;\n                                return (\n                                    // eslint-disable-next-line jsx-a11y/control-has-associated-label\n                                    <button\n                                        className={classNames(\n                                            handleBasicClasses({\n                                                prefix: `${CLASSNAME}__pagination-item`,\n                                                isActive,\n                                                isOnEdge,\n                                                isOutRange,\n                                            }),\n                                        )}\n                                        key={index}\n                                        type=\"button\"\n                                        onClick={() => onPaginationClick?.(index)}\n                                        tabIndex={-1}\n                                    />\n                                );\n                            }),\n                        [slidesCount, visibleRange.min, visibleRange.max, activeIndex, onPaginationClick],\n                    )}\n                </div>\n            </div>\n            <IconButton\n                {...nextButtonProps}\n                icon={mdiChevronRight}\n                className={`${CLASSNAME}__navigation`}\n                color={theme === Theme.dark ? 'light' : 'dark'}\n                emphasis={Emphasis.low}\n                onClick={onNextClick}\n                tabIndex={-1}\n            />\n        </div>\n    );\n});\nSlideshowControls.displayName = COMPONENT_NAME;\nSlideshowControls.className = CLASSNAME;\nSlideshowControls.defaultProps = DEFAULT_PROPS;\n"],"names":["AUTOPLAY_DEFAULT_INTERVAL","FULL_WIDTH_PERCENT","EDGE_FROM_ACTIVE_INDEX","PAGINATION_ITEMS_MAX","PAGINATION_ITEM_SIZE","useInterval","callback","delay","savedCallback","useRef","useEffect","current","undefined","tick","isFunction","id","setInterval","clearInterval","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","activeIndex","groupBy","interval","theme","Theme","light","Slideshow","forwardRef","props","ref","autoPlay","children","className","fillHeight","onChange","slideshowControlsProps","forwardedProps","useState","currentIndex","setCurrentIndex","element","setElement","itemsCount","React","Children","count","slidesCount","Math","ceil","min","wrapperStyle","transform","goToNextSlide","useCallback","loopback","index","goToPreviousSlide","Boolean","isAutoPlaying","setIsAutoPlaying","handleControlGotToSlide","handleControlNextSlide","handleControlPreviousSlide","mergeRefs","classNames","handleBasicClasses","prefix","displayName","defaultProps","SlideshowItem","isTouchDevice","window","useSwipeNavigate","onNext","onPrevious","detectHorizontalSwipe","swipe","useKeyNavigate","onKeyNavigate","evt","key","preventDefault","stopPropagation","addEventListener","removeEventListener","usePaginationVisibleRange","slideCount","previousVisibleRangeRef","useMemo","lastSlide","previousVisibleRange","newVisibleRange","max","deltaItems","SlideshowControls","nextButtonProps","onNextClick","onPaginationClick","onPreviousClick","parentRef","previousButtonProps","parent","WINDOW","HTMLElement","visibleRange","mdiChevronLeft","dark","Emphasis","low","range","map","isOnEdge","isActive","isOutRange","mdiChevronRight"],"mappings":"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"}