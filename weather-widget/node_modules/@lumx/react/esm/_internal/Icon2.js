import { Theme, ColorPalette, Size } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';

/**
 * Component display name.
 */
var COMPONENT_NAME = 'Icon';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {};
/**
 * Icon component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var Icon = forwardRef(function (props, ref) {
  var className = props.className,
      color = props.color,
      colorVariant = props.colorVariant,
      hasShape = props.hasShape,
      icon = props.icon,
      size = props.size,
      theme = props.theme,
      forwardedProps = _objectWithoutProperties(props, ["className", "color", "colorVariant", "hasShape", "icon", "size", "theme"]);

  var iconColor;

  if (color) {
    iconColor = color;
  } else if (theme) {
    iconColor = theme === Theme.light ? ColorPalette.dark : ColorPalette.light;
  } else if (hasShape) {
    iconColor = ColorPalette.dark;
  }

  var iconSize;

  if (size) {
    if (hasShape) {
      if (size === Size.xxs || size === Size.xs) {
        iconSize = Size.s;
      } else if (size === Size.xxl) {
        iconSize = Size.xl;
      } else {
        iconSize = size;
      }
    } else {
      iconSize = size;
    }
  } else if (hasShape) {
    iconSize = Size.m;
  }

  return React.createElement("i", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      color: iconColor,
      colorVariant: colorVariant,
      hasShape: hasShape,
      prefix: CLASSNAME,
      size: iconSize
    }), !hasShape && "".concat(CLASSNAME, "--no-shape"), "".concat(CLASSNAME, "--path"))
  }), React.createElement("svg", {
    "aria-hidden": "true",
    height: "1em",
    preserveAspectRatio: "xMidYMid meet",
    style: {
      verticalAlign: '-0.125em'
    },
    viewBox: "0 0 24 24",
    width: "1em"
  }, React.createElement("path", {
    d: icon,
    fill: "currentColor"
  })));
});
Icon.displayName = COMPONENT_NAME;
Icon.className = CLASSNAME;
Icon.defaultProps = DEFAULT_PROPS;

export { Icon as I };
//# sourceMappingURL=Icon2.js.map
