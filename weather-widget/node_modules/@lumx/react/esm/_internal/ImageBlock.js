import { Theme, Alignment } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';
import isObject from 'lodash/isObject';
import { T as Thumbnail } from './Thumbnail2.js';

/**
 * Image block variants.
 */
var ImageBlockCaptionPosition = {
  below: 'below',
  over: 'over'
};

/**
 * Component display name.
 */
var COMPONENT_NAME = 'ImageBlock';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {
  captionPosition: ImageBlockCaptionPosition.below,
  theme: Theme.light,
  align: Alignment.left
};
/**
 * ImageBlock component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var ImageBlock = forwardRef(function (props, ref) {
  var actions = props.actions,
      align = props.align,
      alt = props.alt,
      captionPosition = props.captionPosition,
      captionStyle = props.captionStyle,
      className = props.className,
      description = props.description,
      fillHeight = props.fillHeight,
      image = props.image,
      size = props.size,
      tags = props.tags,
      theme = props.theme,
      thumbnailProps = props.thumbnailProps,
      title = props.title,
      forwardedProps = _objectWithoutProperties(props, ["actions", "align", "alt", "captionPosition", "captionStyle", "className", "description", "fillHeight", "image", "size", "tags", "theme", "thumbnailProps", "title"]);

  return React.createElement("figure", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      captionPosition: captionPosition,
      align: align,
      size: size,
      theme: theme
    }), fillHeight && "".concat(CLASSNAME, "--fill-height"))
  }), React.createElement(Thumbnail, _extends({}, thumbnailProps, {
    className: classnames("".concat(CLASSNAME, "__image"), thumbnailProps === null || thumbnailProps === void 0 ? void 0 : thumbnailProps.className),
    fillHeight: fillHeight,
    align: align,
    image: image,
    size: size,
    theme: theme,
    alt: alt || title
  })), (title || description || tags) && React.createElement("figcaption", {
    className: "".concat(CLASSNAME, "__wrapper"),
    style: captionStyle
  }, (title || description) && React.createElement("div", {
    className: "".concat(CLASSNAME, "__caption")
  }, title && React.createElement("span", {
    className: "".concat(CLASSNAME, "__title")
  }, title), title && description && "\xA0", isObject(description) && description.__html ? // eslint-disable-next-line react/no-danger
  React.createElement("span", {
    dangerouslySetInnerHTML: description,
    className: "".concat(CLASSNAME, "__description")
  }) : React.createElement("span", {
    className: "".concat(CLASSNAME, "__description")
  }, description)), tags && React.createElement("div", {
    className: "".concat(CLASSNAME, "__tags")
  }, tags)), actions && React.createElement("div", {
    className: "".concat(CLASSNAME, "__actions")
  }, actions));
});
ImageBlock.displayName = COMPONENT_NAME;
ImageBlock.className = CLASSNAME;
ImageBlock.defaultProps = DEFAULT_PROPS;

export { ImageBlockCaptionPosition as I, ImageBlock as a };
//# sourceMappingURL=ImageBlock.js.map
