import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'Toolbar';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {};
/**
 * Toolbar component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var Toolbar = forwardRef(function (props, ref) {
  var after = props.after,
      before = props.before,
      className = props.className,
      label = props.label,
      forwardedProps = _objectWithoutProperties(props, ["after", "before", "className", "label"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      hasAfter: Boolean(after),
      hasBefore: Boolean(before),
      hasLabel: Boolean(label),
      prefix: CLASSNAME
    }))
  }), before && React.createElement("div", {
    className: "".concat(CLASSNAME, "__before")
  }, before), label && React.createElement("div", {
    className: "".concat(CLASSNAME, "__label")
  }, label), after && React.createElement("div", {
    className: "".concat(CLASSNAME, "__after")
  }, after));
});
Toolbar.displayName = COMPONENT_NAME;
Toolbar.className = CLASSNAME;
Toolbar.defaultProps = DEFAULT_PROPS;

export { Toolbar as T };
//# sourceMappingURL=Toolbar2.js.map
