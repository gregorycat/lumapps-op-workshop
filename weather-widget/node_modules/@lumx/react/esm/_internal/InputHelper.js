import { Kind, Theme } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';

var INPUT_HELPER_CONFIGURATION = {
  error: {
    color: 'red'
  },
  success: {
    color: 'green'
  },
  warning: {
    color: 'yellow'
  }
};

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'InputHelper';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * Component default props.
 */

var DEFAULT_PROPS = {
  kind: Kind.info,
  theme: Theme.light
};
/**
 * InputHelper component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var InputHelper = forwardRef(function (props, ref) {
  var children = props.children,
      className = props.className,
      kind = props.kind,
      theme = props.theme,
      forwardedProps = _objectWithoutProperties(props, ["children", "className", "kind", "theme"]);

  var _ref = INPUT_HELPER_CONFIGURATION[kind] || {},
      color = _ref.color;

  return React.createElement("span", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      color: color,
      theme: theme
    }))
  }), children);
});
InputHelper.displayName = COMPONENT_NAME;
InputHelper.className = CLASSNAME;
InputHelper.defaultProps = DEFAULT_PROPS;

export { InputHelper as I };
//# sourceMappingURL=InputHelper.js.map
