import get from 'lodash/get';

/**
 * Properties of a component to use to determine it's name.
 * In the order of preference.
 */
var NAME_PROPERTIES = ['type', 'type.displayName', 'displayName', 'name', 'type.name', 'props.mdxType', '_reactInternalFiber.elementType.name'];
/** LumX Component Type. */

/**
 * Create a predicate function that checks if a ReactNode is a react element from the given component.
 *
 * @param  component React function component or the component name
 * @return predicate returning true if value is instance of the component
 */
var isComponent = function isComponent(component) {
  return function (instance) {
    var componentName = typeof component === 'string' ? component : component.displayName;
    return !!get(instance, '$$typeof') && NAME_PROPERTIES.some(function (nameProperty) {
      return get(instance, nameProperty) === componentName;
    });
  };
};
/**
 * JS falsy values.
 * (excluding `NaN` as it can't be distinguished from `number`)
 */

export { isComponent as i };
//# sourceMappingURL=type.js.map
