{"version":3,"file":"Checkbox2.js","sources":["../../../src/components/checkbox/Checkbox.tsx"],"sourcesContent":["import React, { useMemo, forwardRef, ReactNode, SyntheticEvent } from 'react';\n\nimport classNames from 'classnames';\nimport { uid } from 'uid';\n\nimport { mdiCheck } from '@lumx/icons';\n\nimport { Icon, InputHelper, InputLabel, Theme } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\n/**\n * Defines the props of the component.\n */\nexport interface CheckboxProps extends GenericProps {\n    /** Helper text. */\n    helper?: string;\n    /** Native input id property. */\n    id?: string;\n    /** Whether it is checked or not. */\n    isChecked?: boolean;\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Label text. */\n    label?: ReactNode;\n    /** Native input name property. */\n    name?: string;\n    /** Theme adapting the component to light or dark background. */\n    theme?: Theme;\n    /** Native input value property. */\n    value?: string;\n    /** On change callback. */\n    onChange?(isChecked: boolean, value?: string, name?: string, event?: SyntheticEvent): void;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Checkbox';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<CheckboxProps> = {\n    theme: Theme.light,\n};\n\n/**\n * Checkbox component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Checkbox: Comp<CheckboxProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const {\n        checked,\n        className,\n        disabled,\n        helper,\n        id,\n        isChecked = checked,\n        isDisabled = disabled,\n        label,\n        name,\n        onChange,\n        theme,\n        value,\n        ...forwardedProps\n    } = props;\n    const inputId = useMemo(() => id || `${CLASSNAME.toLowerCase()}-${uid()}`, [id]);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n            onChange(!isChecked, value, name, event);\n        }\n    };\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                handleBasicClasses({\n                    isChecked,\n                    isDisabled,\n                    isUnchecked: !isChecked,\n                    prefix: CLASSNAME,\n                    theme,\n                }),\n            )}\n        >\n            <div className={`${CLASSNAME}__input-wrapper`}>\n                <input\n                    type=\"checkbox\"\n                    id={inputId}\n                    className={`${CLASSNAME}__input-native`}\n                    tabIndex={isDisabled ? -1 : 0}\n                    name={name}\n                    value={value}\n                    checked={isChecked}\n                    onChange={handleChange}\n                />\n\n                <div className={`${CLASSNAME}__input-placeholder`}>\n                    <div className={`${CLASSNAME}__input-background`} />\n\n                    <div className={`${CLASSNAME}__input-indicator`}>\n                        <Icon icon={mdiCheck} />\n                    </div>\n                </div>\n            </div>\n\n            <div className={`${CLASSNAME}__content`}>\n                {label && (\n                    <InputLabel htmlFor={inputId} className={`${CLASSNAME}__label`} theme={theme}>\n                        {label}\n                    </InputLabel>\n                )}\n                {helper && (\n                    <InputHelper className={`${CLASSNAME}__helper`} theme={theme}>\n                        {helper}\n                    </InputHelper>\n                )}\n            </div>\n        </div>\n    );\n});\nCheckbox.displayName = COMPONENT_NAME;\nCheckbox.className = CLASSNAME;\nCheckbox.defaultProps = DEFAULT_PROPS;\n"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","theme","Theme","light","Checkbox","forwardRef","props","ref","checked","className","disabled","helper","id","isChecked","isDisabled","label","name","onChange","value","forwardedProps","inputId","useMemo","toLowerCase","uid","handleChange","event","classNames","handleBasicClasses","isUnchecked","prefix","mdiCheck","displayName","defaultProps"],"mappings":"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"}