{"version":3,"file":"GridItem.js","sources":["../../../src/components/grid/Grid.tsx","../../../src/components/grid/GridItem.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Alignment, Orientation, Size } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\ntype GridGutterSize = Extract<Size, 'regular' | 'big' | 'huge'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface GridProps extends GenericProps {\n    /** Orientation. */\n    orientation?: Orientation;\n    /** Whether the children are wrapped or not. */\n    wrap?: string;\n    /** Vertical alignment. */\n    vAlign?: Alignment;\n    /** Horizontal alignment. */\n    hAlign?: Alignment;\n    /** Gutter size. */\n    gutter?: GridGutterSize;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Grid';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<GridProps> = {\n    orientation: Orientation.horizontal,\n    wrap: 'nowrap',\n};\n\n/**\n * Grid component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Grid: Comp<GridProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { children, className, gutter, hAlign, orientation, vAlign, wrap, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(\n                className,\n                `${CLASSNAME}-container`,\n                { [`${CLASSNAME}--h-align-${hAlign}`]: hAlign },\n                { [`${CLASSNAME}--v-align-${vAlign}`]: vAlign },\n                handleBasicClasses({ prefix: CLASSNAME, orientation, wrap, gutter }),\n            )}\n        >\n            {children}\n        </div>\n    );\n});\nGrid.displayName = COMPONENT_NAME;\nGrid.className = CLASSNAME;\nGrid.defaultProps = DEFAULT_PROPS;\n","import React, { forwardRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Alignment } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\n\ntype Columns = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12';\n\n/**\n * Defines the props of the component.\n */\nexport interface GridItemProps extends GenericProps {\n    /** Alignment. */\n    align?: Alignment;\n    /** Order. */\n    order?: Columns;\n    /** Width. */\n    width?: Columns;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'GridItem';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * GridItem component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const GridItem: Comp<GridItemProps, HTMLDivElement> = forwardRef((props, ref) => {\n    const { children, className, width, align, order, ...forwardedProps } = props;\n\n    return (\n        <div\n            ref={ref}\n            {...forwardedProps}\n            className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, width, order, align }))}\n        >\n            {children}\n        </div>\n    );\n});\nGridItem.displayName = COMPONENT_NAME;\nGridItem.className = CLASSNAME;\n"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","orientation","Orientation","horizontal","wrap","Grid","forwardRef","props","ref","children","className","gutter","hAlign","vAlign","forwardedProps","classNames","handleBasicClasses","prefix","displayName","defaultProps","GridItem","width","align","order"],"mappings":";;;;AAyBA;;;AAGA,IAAMA,cAAc,GAAG,MAAvB;AAEA;;;;AAGA,IAAMC,SAAS,GAAGC,gBAAgB,CAACF,cAAD,CAAlC;AAEA;;;;AAGA,IAAMG,aAAiC,GAAG;AACtCC,EAAAA,WAAW,EAAEC,WAAW,CAACC,UADa;AAEtCC,EAAAA,IAAI,EAAE;AAFgC,CAA1C;AAKA;;;;;;;;IAOaC,IAAqC,GAAGC,UAAU,CAAC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MACpEC,QADoE,GACkBF,KADlB,CACpEE,QADoE;AAAA,MAC1DC,SAD0D,GACkBH,KADlB,CAC1DG,SAD0D;AAAA,MAC/CC,MAD+C,GACkBJ,KADlB,CAC/CI,MAD+C;AAAA,MACvCC,MADuC,GACkBL,KADlB,CACvCK,MADuC;AAAA,MAC/BX,WAD+B,GACkBM,KADlB,CAC/BN,WAD+B;AAAA,MAClBY,MADkB,GACkBN,KADlB,CAClBM,MADkB;AAAA,MACVT,IADU,GACkBG,KADlB,CACVH,IADU;AAAA,MACDU,cADC,4BACkBP,KADlB;;AAG5E,SACI;AACI,IAAA,GAAG,EAAEC;AADT,KAEQM,cAFR;AAGI,IAAA,SAAS,EAAEC,UAAU,CACjBL,SADiB,YAEdZ,SAFc,+CAGXA,SAHW,uBAGWc,MAHX,GAGsBA,MAHtB,iCAIXd,SAJW,uBAIWe,MAJX,GAIsBA,MAJtB,GAKjBG,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAEnB,SAAV;AAAqBG,MAAAA,WAAW,EAAXA,WAArB;AAAkCG,MAAAA,IAAI,EAAJA,IAAlC;AAAwCO,MAAAA,MAAM,EAANA;AAAxC,KAAD,CALD;AAHzB,MAWKF,QAXL,CADJ;AAeH,CAlB8D;AAmB/DJ,IAAI,CAACa,WAAL,GAAmBrB,cAAnB;AACAQ,IAAI,CAACK,SAAL,GAAiBZ,SAAjB;AACAO,IAAI,CAACc,YAAL,GAAoBnB,aAApB;;AClDA;;;AAGA,IAAMH,gBAAc,GAAG,UAAvB;AAEA;;;;AAGA,IAAMC,WAAS,GAAGC,gBAAgB,CAACF,gBAAD,CAAlC;AAEA;;;;;;;;IAOauB,QAA6C,GAAGd,UAAU,CAAC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAC5EC,QAD4E,GACZF,KADY,CAC5EE,QAD4E;AAAA,MAClEC,SADkE,GACZH,KADY,CAClEG,SADkE;AAAA,MACvDW,KADuD,GACZd,KADY,CACvDc,KADuD;AAAA,MAChDC,KADgD,GACZf,KADY,CAChDe,KADgD;AAAA,MACzCC,KADyC,GACZhB,KADY,CACzCgB,KADyC;AAAA,MAC/BT,cAD+B,4BACZP,KADY;;AAGpF,SACI;AACI,IAAA,GAAG,EAAEC;AADT,KAEQM,cAFR;AAGI,IAAA,SAAS,EAAEC,UAAU,CAACL,SAAD,EAAYM,kBAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAEnB,WAAV;AAAqBuB,MAAAA,KAAK,EAALA,KAArB;AAA4BE,MAAAA,KAAK,EAALA,KAA5B;AAAmCD,MAAAA,KAAK,EAALA;AAAnC,KAAD,CAA9B;AAHzB,MAKKb,QALL,CADJ;AASH,CAZsE;AAavEW,QAAQ,CAACF,WAAT,GAAuBrB,gBAAvB;AACAuB,QAAQ,CAACV,SAAT,GAAqBZ,WAArB;;;;"}