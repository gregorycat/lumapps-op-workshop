{"version":3,"file":"Link2.js","sources":["../../../src/components/link/Link.tsx"],"sourcesContent":["import React, { forwardRef, RefObject, useMemo } from 'react';\n\nimport isEmpty from 'lodash/isEmpty';\n\nimport classNames from 'classnames';\n\nimport { Color, ColorVariant, Icon, Size, Typography } from '@lumx/react';\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { renderLink } from '@lumx/react/utils/renderLink';\n\ntype HTMLAnchorProps = React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\n\n/**\n * Defines the props of the component.\n */\nexport interface LinkProps extends GenericProps {\n    /** Color variant. */\n    color?: Color;\n    /** Lightened or darkened variant of the selected icon color. */\n    colorVariant?: ColorVariant;\n    /** Link href. */\n    href?: HTMLAnchorProps['href'];\n    /** Whether the component is disabled or not. */\n    isDisabled?: boolean;\n    /** Left icon (SVG path). */\n    leftIcon?: string;\n    /** Custom react component for the link (can be used to inject react router Link). */\n    linkAs?: 'a' | any;\n    /** Right icon (SVG path). */\n    rightIcon?: string;\n    /** Link target. */\n    target?: HTMLAnchorProps['target'];\n    /** Typography variant. */\n    typography?: Typography;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Link';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\nconst getIconSize = (typography?: Typography) => {\n    switch (typography) {\n        case Typography.display1:\n            return Size.m;\n\n        case Typography.headline:\n        case Typography.title:\n        case Typography.body2:\n        case Typography.subtitle2:\n            return Size.s;\n\n        case Typography.body1:\n        case Typography.subtitle1:\n            return Size.xs;\n\n        case Typography.caption:\n        case Typography.overline:\n            return Size.xxs;\n\n        default:\n            return Size.s;\n    }\n};\n\n/**\n * Link component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Link: Comp<LinkProps, HTMLAnchorElement | HTMLButtonElement> = forwardRef((props, ref) => {\n    const {\n        children,\n        className,\n        color,\n        colorVariant,\n        disabled,\n        isDisabled = disabled,\n        href,\n        leftIcon,\n        linkAs,\n        rightIcon,\n        target,\n        typography,\n        ...forwardedProps\n    } = props;\n    const renderedChildren = useMemo(\n        () => (\n            <>\n                {leftIcon && !isEmpty(leftIcon) && (\n                    <Icon icon={leftIcon} className={`${CLASSNAME}__left-icon`} size={getIconSize(typography)} />\n                )}\n\n                {children && (\n                    <span\n                        className={classNames(`${CLASSNAME}__content`, {\n                            [`lumx-typography-${typography}`]: typography,\n                        })}\n                    >\n                        {children}\n                    </span>\n                )}\n\n                {rightIcon && !isEmpty(rightIcon) && (\n                    <Icon icon={rightIcon} className={`${CLASSNAME}__right-icon`} size={getIconSize(typography)} />\n                )}\n            </>\n        ),\n        [leftIcon, typography, children, rightIcon],\n    );\n\n    /**\n     * If there is no linkAs prop and no href, we returned a <button> instead of a <a>.\n     * If the component is disabled, we also returned a <button> since disabled is not compatible with <a>.\n     */\n    if ((!linkAs && isEmpty(href)) || isDisabled) {\n        return (\n            <button\n                type=\"button\"\n                {...forwardedProps}\n                ref={ref as RefObject<HTMLButtonElement>}\n                disabled={isDisabled}\n                className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, color, colorVariant }))}\n            >\n                {renderedChildren}\n            </button>\n        );\n    }\n    return renderLink(\n        {\n            linkAs,\n            ...forwardedProps,\n            href,\n            target,\n            className: classNames(className, handleBasicClasses({ prefix: CLASSNAME, color, colorVariant })),\n            ref: ref as RefObject<HTMLAnchorElement>,\n        },\n        renderedChildren,\n    );\n});\nLink.displayName = COMPONENT_NAME;\nLink.className = CLASSNAME;\n"],"names":["COMPONENT_NAME","CLASSNAME","getRootClassName","getIconSize","typography","Typography","display1","Size","m","headline","title","body2","subtitle2","s","body1","subtitle1","xs","caption","overline","xxs","Link","forwardRef","props","ref","children","className","color","colorVariant","disabled","isDisabled","href","leftIcon","linkAs","rightIcon","target","forwardedProps","renderedChildren","useMemo","isEmpty","classNames","handleBasicClasses","prefix","renderLink","displayName"],"mappings":"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"}