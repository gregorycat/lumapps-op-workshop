import { Theme, ColorPalette, Size } from './components.js';
import { g as getRootClassName, a as _objectWithoutProperties, b as _extends, d as classnames, h as handleBasicClasses } from './getRootClassName.js';
import React, { forwardRef } from 'react';
import { h as mdiDragVertical } from './mdi.js';
import { I as Icon } from './Icon2.js';

/**
 * Defines the props of the component.
 */

/**
 * Component display name.
 */
var COMPONENT_NAME = 'DragHandle';
/**
 * Component default class name and class prefix.
 */

var CLASSNAME = getRootClassName(COMPONENT_NAME);
/**
 * DragHandle component.
 *
 * @param  props Component props.
 * @param  ref   Component ref.
 * @return React element.
 */

var DragHandle = forwardRef(function (props, ref) {
  var className = props.className,
      theme = props.theme,
      forwardedProps = _objectWithoutProperties(props, ["className", "theme"]);

  return React.createElement("div", _extends({
    ref: ref
  }, forwardedProps, {
    className: classnames(className, handleBasicClasses({
      prefix: CLASSNAME,
      theme: theme
    }))
  }), React.createElement(Icon, {
    icon: mdiDragVertical,
    color: theme === Theme.dark ? ColorPalette.light : undefined,
    size: Size.xs
  }));
});
DragHandle.displayName = COMPONENT_NAME;
DragHandle.className = CLASSNAME;

export { DragHandle as D };
//# sourceMappingURL=DragHandle.js.map
