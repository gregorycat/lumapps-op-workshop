{"version":3,"file":"Tooltip2.js","sources":["../../../src/components/tooltip/useInjectTooltipRef.tsx","../../../src/components/tooltip/useTooltipOpen.tsx","../../../src/components/tooltip/Tooltip.tsx"],"sourcesContent":["import { mergeRefs } from '@lumx/react/utils/mergeRefs';\nimport get from 'lodash/get';\nimport React, { cloneElement, ReactNode, useMemo } from 'react';\n\n/**\n * Add ref and ARIA attribute(s) in tooltip children or wrapped children.\n * Button, IconButton, Icon and React HTML elements don't need to be wrapped but any other kind of children (array, fragment, custom components)\n * will be wrapped in a <span>.\n *\n * @param  children         Original tooltip anchor.\n * @param  setAnchorElement Set tooltip anchor element.\n * @param  isOpen           Whether the tooltip is open or not.\n * @param  id               Tooltip id.\n * @return tooltip anchor.\n */\nexport const useInjectTooltipRef = (\n    children: ReactNode,\n    setAnchorElement: (e: HTMLDivElement) => void,\n    isOpen: boolean,\n    id: string,\n): ReactNode => {\n    return useMemo(() => {\n        const ariaProps = { 'aria-describedby': isOpen ? id : undefined };\n        if (\n            children &&\n            get(children, '$$typeof') &&\n            get(children, 'props.disabled') !== true &&\n            get(children, 'props.isDisabled') !== true\n        ) {\n            const element = children as any;\n            if (element.ref) {\n                setAnchorElement(element.ref.current);\n            }\n            return cloneElement(element, {\n                ...element.props,\n                ...ariaProps,\n                ref: mergeRefs(element.ref, setAnchorElement),\n            });\n        }\n        return (\n            <div className=\"lumx-tooltip-anchor-wrapper\" ref={setAnchorElement} {...ariaProps}>\n                {children}\n            </div>\n        );\n    }, [isOpen, id, children, setAnchorElement]);\n};\n","import { Callback, onEscapePressed } from '@lumx/react/utils';\nimport { useEffect, useRef, useState } from 'react';\nimport pull from 'lodash/pull';\nimport debounce from 'lodash/debounce';\n\ntype Tooltip = { open: Callback; close: Callback; anchorElement: HTMLElement };\n\n/**\n * This singleton handle a global `mouseover` event listener on the `document` in order to toggle tooltips when\n * entering and leaving their anchor element.\n */\nconst tooltipMouseToggle = (() => {\n    /** List of tooltips to toggle on anchor enter/leave. */\n    let tooltips: Array<Tooltip> | undefined;\n\n    /** Global listener added on the document. */\n    let globalListener: undefined | ((evt: MouseEvent) => void);\n\n    function addGlobalListener() {\n        if (globalListener) return;\n        globalListener = debounce((evt) => {\n            if (!tooltips || !evt.target) return;\n            for (const { open, close, anchorElement } of tooltips) {\n                if (anchorElement.contains(evt.target as any)) {\n                    open();\n                } else {\n                    close();\n                }\n            }\n        }, 10);\n        document.addEventListener('mouseover', globalListener);\n    }\n\n    function removeGlobalListener() {\n        if (!globalListener) return;\n        document.removeEventListener('mouseover', globalListener);\n        globalListener = undefined;\n    }\n\n    return {\n        addTooltip(tooltip: Tooltip) {\n            if (!tooltips) {\n                tooltips = [];\n                addGlobalListener();\n            }\n            tooltips.push(tooltip);\n        },\n        removeTooltip(actions: Tooltip) {\n            if (!tooltips) return;\n            pull(tooltips, actions);\n            if (tooltips.length === 0) {\n                removeGlobalListener();\n                tooltips = undefined;\n            }\n        },\n    };\n})();\n\n/**\n * Hook controlling tooltip visibility using mouse hover the anchor and delay.\n *\n * @param  delay         Delay in millisecond to display the tooltip.\n * @param  anchorElement Tooltip anchor element.\n * @return whether or not to show the tooltip.\n */\nexport function useTooltipOpen(delay: number, anchorElement: HTMLElement | null): boolean {\n    const timer = useRef<number>();\n    const shouldOpen = useRef<boolean>(false);\n    const [isOpen, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        if (!anchorElement) {\n            return undefined;\n        }\n        const tooltip: Tooltip = {\n            anchorElement,\n            open() {\n                if (!shouldOpen.current) {\n                    shouldOpen.current = true;\n                    timer.current = setTimeout(() => {\n                        setIsOpen(shouldOpen.current);\n                    }, delay) as any;\n                }\n            },\n            close() {\n                if (timer.current) {\n                    clearTimeout(timer.current);\n                    timer.current = undefined;\n                }\n                if (shouldOpen.current) {\n                    shouldOpen.current = false;\n                    setIsOpen(shouldOpen.current);\n                }\n            },\n        };\n        const keydown = onEscapePressed(tooltip.close);\n\n        tooltipMouseToggle.addTooltip(tooltip);\n        anchorElement.addEventListener('focusin', tooltip.open);\n        anchorElement.addEventListener('focusout', tooltip.close);\n        anchorElement.addEventListener('keydown', keydown);\n        return () => {\n            tooltipMouseToggle.removeTooltip(tooltip);\n            anchorElement.removeEventListener('focusin', tooltip.open);\n            anchorElement.removeEventListener('focusout', tooltip.close);\n            anchorElement.removeEventListener('keydown', keydown);\n            tooltip.close();\n        };\n    }, [anchorElement, delay, timer, shouldOpen]);\n\n    return isOpen;\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { forwardRef, ReactNode, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { usePopper } from 'react-popper';\nimport { uid } from 'uid';\n\nimport classNames from 'classnames';\n\nimport { Placement } from '@lumx/react/components/popover/Popover';\n\nimport { DOCUMENT } from '@lumx/react/constants';\n\nimport { Comp, GenericProps, getRootClassName, handleBasicClasses } from '@lumx/react/utils';\nimport { mergeRefs } from '@lumx/react/utils/mergeRefs';\n\nimport { useInjectTooltipRef } from './useInjectTooltipRef';\nimport { useTooltipOpen } from './useTooltipOpen';\n\n/** Position of the tooltip relative to the anchor element. */\nexport type TooltipPlacement = Extract<Placement, 'top' | 'right' | 'bottom' | 'left'>;\n\n/**\n * Defines the props of the component.\n */\nexport interface TooltipProps extends GenericProps {\n    /** Anchor (element on which we activate the tooltip). */\n    children: ReactNode;\n    /** Delay (in ms) before closing the tooltip. */\n    delay?: number;\n    /** Whether the tooltip is displayed even without the mouse hovering the anchor. */\n    forceOpen?: boolean;\n    /** Label text. */\n    label?: string | null | false;\n    /** Placement of the tooltip relative to the anchor. */\n    placement?: TooltipPlacement;\n}\n\n/**\n * Component display name.\n */\nconst COMPONENT_NAME = 'Tooltip';\n\n/**\n * Component default class name and class prefix.\n */\nconst CLASSNAME = getRootClassName(COMPONENT_NAME);\n\n/**\n * Component default props.\n */\nconst DEFAULT_PROPS: Partial<TooltipProps> = {\n    delay: 500,\n    placement: Placement.BOTTOM,\n};\n\n/**\n * Arrow size (in pixel).\n */\nconst ARROW_SIZE = 8;\n\n/**\n * Tooltip component.\n *\n * @param  props Component props.\n * @param  ref   Component ref.\n * @return React element.\n */\nexport const Tooltip: Comp<TooltipProps, HTMLDivElement> = forwardRef((props, ref) => {\n    if (!DOCUMENT) {\n        // Can't render in SSR.\n        return null;\n    }\n    const { label, children, className, delay, placement, forceOpen, ...forwardedProps } = props;\n    if (!label) {\n        return <>{children}</>;\n    }\n\n    const id = useMemo(() => `tooltip-${uid()}`, []);\n\n    const [popperElement, setPopperElement] = useState<null | HTMLElement>(null);\n    const [anchorElement, setAnchorElement] = useState<null | HTMLElement>(null);\n    const { styles, attributes } = usePopper(anchorElement, popperElement, {\n        placement,\n        modifiers: [\n            {\n                name: 'offset',\n                options: { offset: [0, ARROW_SIZE] },\n            },\n        ],\n    });\n\n    const position = attributes?.popper?.['data-popper-placement'] ?? placement;\n    const isOpen = useTooltipOpen(delay as number, anchorElement) || forceOpen;\n    const wrappedChildren = useInjectTooltipRef(children, setAnchorElement, isOpen as boolean, id);\n\n    return (\n        <>\n            {wrappedChildren}\n            {isOpen &&\n                createPortal(\n                    <div\n                        ref={mergeRefs(ref, setPopperElement)}\n                        {...forwardedProps}\n                        id={id}\n                        role=\"tooltip\"\n                        aria-label={label}\n                        className={classNames(className, handleBasicClasses({ prefix: CLASSNAME, position }))}\n                        style={styles.popper}\n                        {...attributes.popper}\n                    >\n                        <div className={`${CLASSNAME}__arrow`} />\n                        <div className={`${CLASSNAME}__inner`}>\n                            {label.indexOf('\\n') !== -1\n                                ? label.split('\\n').map((sentence: string) => <p key={sentence}>{sentence}</p>)\n                                : label}\n                        </div>\n                    </div>,\n                    document.body,\n                )}\n        </>\n    );\n});\nTooltip.displayName = COMPONENT_NAME;\nTooltip.className = CLASSNAME;\nTooltip.defaultProps = DEFAULT_PROPS;\n"],"names":["useInjectTooltipRef","children","setAnchorElement","isOpen","id","useMemo","ariaProps","undefined","get","element","ref","current","cloneElement","props","mergeRefs","tooltipMouseToggle","tooltips","globalListener","addGlobalListener","debounce","evt","target","open","close","anchorElement","contains","document","addEventListener","removeGlobalListener","removeEventListener","addTooltip","tooltip","push","removeTooltip","actions","pull","length","useTooltipOpen","delay","timer","useRef","shouldOpen","useState","setIsOpen","useEffect","setTimeout","clearTimeout","keydown","onEscapePressed","COMPONENT_NAME","CLASSNAME","getRootClassName","DEFAULT_PROPS","placement","Placement","BOTTOM","ARROW_SIZE","Tooltip","forwardRef","DOCUMENT","label","className","forceOpen","forwardedProps","uid","popperElement","setPopperElement","usePopper","modifiers","name","options","offset","styles","attributes","position","popper","wrappedChildren","createPortal","classNames","handleBasicClasses","prefix","indexOf","split","map","sentence","body","displayName","defaultProps"],"mappings":"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"}